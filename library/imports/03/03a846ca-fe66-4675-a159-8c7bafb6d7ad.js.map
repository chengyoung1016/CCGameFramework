{"version":3,"sources":["assets/script/framework/log/TKLog.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import ITKLog, { LogLevel, ITKLogListener } from \"./ITKLog\";\nimport TKLogWXMini from \"./TKLogWXMini\";\nimport TKLogWeb from \"./TKLogWeb\";\nimport TKLogNative from \"./TKLogNative\";\nimport TKLogNone from \"./TKLogNone\";\n\n\nexport enum LogTrace {\n    console,\n    wx,\n}\n\nexport default class TKLog {\n    // static logLevel : LogLevel = LogLevel.Info;\n    // static logTrace : LogTrace = LogTrace.console;\n\n    private static logger : ITKLog = null;\n    private static getLogger() : ITKLog {\n        if (this.logger != null) {\n            return this.logger;\n        }\n\n        switch (cc.sys.platform){\n            case cc.sys.WECHAT_GAME:\n                this.logger = new TKLogWXMini()\n                console.log(\"微信小游戏logger\")\n                break;\n            case cc.sys.DESKTOP_BROWSER:\n            case cc.sys.MOBILE_BROWSER:\n                this.logger = new TKLogWeb()\n                console.log(\"浏览器logger\")\n                break;\n            default:\n                if (cc.sys.isNative){\n                    this.logger = new TKLogNative()\n                    console.log(\"原生logger\")\n                }else{\n                    this.logger = new TKLogNone()\n                    console.log(\"默认logger\")\n                }\n                break;\n        }\n        return this.logger\n    }\n\n    static SetLogLevel(logLevel : LogLevel) {\n        this.getLogger().SetLogLevel(logLevel)\n    }\n    static SetLogFile(logFile : boolean){\n        this.getLogger().SetLogFile(logFile)\n    }\n\n    // 只打印在console中的调试信息\n    static LogDebug(msg : any, ...subst:any[]) {\n        this.getLogger().LogDebug(msg, ...subst)\n    }\n\n    static LogInfo(msg: any, ...subst: any[]) {\n        this.getLogger().LogInfo(msg, ...subst)\n    }\n\n    static LogWarn(msg:any, ...subst : any[]){\n        this.getLogger().LogWarn(msg, ...subst)\n    }\n\n    static LogErr(msg:any, ...subst : any[]){\n        this.getLogger().LogErr(msg, ...subst)\n    }\n\n    static ToDo(msg : any, ...subst : any[]){\n        this.getLogger().ToDo(msg, ...subst)\n    }\n\n    static TagLog(tag : string, msg : any, ...subst : any[]){\n        this.getLogger().TagLog(tag, msg, ...subst)\n    }\n\n    static RegisterLogListener(listener : ITKLogListener) {\n        this.getLogger().RegisterLogListener(listener)\n    }\n    static UnRegisterLogListener(listener : ITKLogListener) {\n        this.getLogger().UnRegisterLogListener(listener)\n    }\n}\n"]}