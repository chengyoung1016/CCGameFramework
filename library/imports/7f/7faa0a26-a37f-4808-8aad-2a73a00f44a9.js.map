{"version":3,"sources":["assets/script/framework/ui/UIRoot.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA,sCAAiC;AAEjC,oBAAoB;AACpB,kFAAkF;AAClF,yFAAyF;AACzF,mBAAmB;AACnB,4FAA4F;AAC5F,mGAAmG;AACnG,8BAA8B;AAC9B,4FAA4F;AAC5F,mGAAmG;AAE7F,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAoC,0BAAY;IAAhD;QAAA,qEAqEC;QAnEG,gBAAU,GAAa,IAAI,CAAC;QAG5B,WAAK,GAAe,IAAI,CAAC;QAEzB,gBAAU,GAAqB,EAAE,CAAC;;IA8DtC,CAAC;eArEoB,MAAM;IAWhB,kBAAW,GAAlB;QACI,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAED,uBAAM,GAAN;QAEI,kCAAkC;QAElC,IAAG,QAAM,CAAC,SAAS,IAAI,IAAI,EAAC;YACxB,QAAM,CAAC,SAAS,GAAG,IAAI,CAAC;SAC3B;aACG;YACA,oCAAoC;YACpC,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,OAAO;SACV;QAED,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QAErB,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,uBAAuB,CAAC,UAAU,CAAC,CAAC;QAClE,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YACjD,IAAM,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;YAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACjC;QAED,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAC,EAAE,EAAC,EAAE;YACvB,IAAI,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;YACvC,IAAI,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;YACvC,OAAO,CAAC,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE;QAChE,CAAC,CAAC,CAAA;QAEF,eAAK,CAAC,OAAO,CAAC,0BAA0B,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAEnE,aAAa;QACb,yCAAyC;IAC7C,CAAC;IAED,sBAAK,GAAL;QACI,oCAAoC;QACpC,8CAA8C;QAC9C,KAAK;IACT,CAAC;IAED,0BAAS,GAAT;QACI,QAAM,CAAC,SAAS,GAAG,IAAI,CAAC;IAC5B,CAAC;IAED;;;OAGG;IACH,0BAAS,GAAT,UAAU,KAAc;QACpB,IAAG,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,EAAC;YAC5C,OAAO,IAAI,CAAC;SACf;QACD,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;;IA1DM,gBAAS,GAAY,IAAI,CAAC;IAPjC;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;8CACU;IAG5B;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;yCACK;IALR,MAAM;QAD1B,OAAO;OACa,MAAM,CAqE1B;IAAD,aAAC;CArED,AAqEC,CArEmC,EAAE,CAAC,SAAS,GAqE/C;kBArEoB,MAAM","file":"","sourceRoot":"/","sourcesContent":["import UIPannel from \"./UIPannel\";\nimport TKLog from \"../log/TKLog\";\n\n// Learn TypeScript:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class UIRoot extends cc.Component {\n    @property(cc.Node)\n    pannelRoot : cc.Node = null;\n\n    @property(cc.Camera)\n    uiCam : cc.Camera = null;\n\n    _lstPannel : Array<UIPannel> = [];\n\n    static _instance : UIRoot = null;\n\n    static getInstance() : UIRoot{\n        return this._instance;\n    }\n\n    onLoad(){\n\n        // TKLog.LogInfo(\"UIRoot.onLoad\");\n\n        if(UIRoot._instance == null){\n            UIRoot._instance = this;\n        }\n        else{\n            // TKLog.LogWarn(\"有多余的UIRoot,删除这个\");\n            this.destroy();\n            return;\n        }\n\n        this._lstPannel = [];\n\n        let pannels = this.pannelRoot.getComponentsInChildren(\"UIPannel\");\n        for (let index = 0; index < pannels.length; index++) {\n            const element = pannels[index];\n            this._lstPannel.push(element);\n        }\n\n        this._lstPannel.sort((p1,p2)=>{\n            let index1 = p1.node.getSiblingIndex();\n            let index2 = p2.node.getSiblingIndex();\n            return (index1 == index2) ? 0 : (index1 > index2 ? 1 : -1) ;\n        })\n\n        TKLog.LogInfo(\"UIRoot.onLoad pannel数量为:\" + this._lstPannel.length);\n\n        //把该节点设置为常驻节点\n        // cc.game.addPersistRootNode(this.node);\n    }\n\n    start(){\n        // this._lstPannel.forEach(pannel=>{\n        //     TKLog.LogInfo(\"pannel:\" + pannel.name);\n        // })\n    }\n\n    onDestroy() {\n        UIRoot._instance = null;\n    }\n\n    /**\n     * 获取指定索引的Pannel\n     * @param index 索引\n     */\n    GetPannel(index : number) : UIPannel{\n        if(index < 0 || index >= this._lstPannel.length){\n            return null;\n        }\n        return this._lstPannel[index];\n    }\n\n}\n"]}