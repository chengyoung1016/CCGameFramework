{
  "__type__": "cc.TextAsset",
  "_name": "bundle.d",
  "_objFlags": 0,
  "_native": "",
  "text": "import Long from \"../long/Long.js\";\nimport * as $protobuf from \"../protobuf/protobuf.min\";\n/** Namespace jubian. */\nexport namespace jubian {\n\n    /** Namespace model. */\n    namespace model {\n\n        /** Properties of a StringRequest. */\n        interface IStringRequest {\n\n            /** StringRequest str_value */\n            str_value?: (string|null);\n        }\n\n        /** Represents a StringRequest. */\n        class StringRequest implements IStringRequest {\n\n            /**\n             * Constructs a new StringRequest.\n             * @param [p] Properties to set\n             */\n            constructor(p?: jubian.model.IStringRequest);\n\n            /** StringRequest str_value. */\n            public str_value: string;\n\n            /**\n             * Encodes the specified StringRequest message. Does not implicitly {@link jubian.model.StringRequest.verify|verify} messages.\n             * @param m StringRequest message or plain object to encode\n             * @param [w] Writer to encode to\n             * @returns Writer\n             */\n            public static encode(m: jubian.model.IStringRequest, w?: $protobuf.Writer): $protobuf.Writer;\n\n            /**\n             * Decodes a StringRequest message from the specified reader or buffer.\n             * @param r Reader or buffer to decode from\n             * @param [l] Message length if known beforehand\n             * @returns StringRequest\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): jubian.model.StringRequest;\n\n            /**\n             * Creates a StringRequest message from a plain object. Also converts values to their respective internal types.\n             * @param d Plain object\n             * @returns StringRequest\n             */\n            public static fromObject(d: { [k: string]: any }): jubian.model.StringRequest;\n\n            /**\n             * Creates a plain object from a StringRequest message. Also converts values to other types if specified.\n             * @param m StringRequest\n             * @param [o] Conversion options\n             * @returns Plain object\n             */\n            public static toObject(m: jubian.model.StringRequest, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n            /**\n             * Converts this StringRequest to JSON.\n             * @returns JSON object\n             */\n            public toJSON(): { [k: string]: any };\n        }\n\n        /** Properties of a MetaDataRequest. */\n        interface IMetaDataRequest {\n\n            /** MetaDataRequest metadata */\n            metadata?: ({ [k: string]: string }|null);\n        }\n\n        /** Represents a MetaDataRequest. */\n        class MetaDataRequest implements IMetaDataRequest {\n\n            /**\n             * Constructs a new MetaDataRequest.\n             * @param [p] Properties to set\n             */\n            constructor(p?: jubian.model.IMetaDataRequest);\n\n            /** MetaDataRequest metadata. */\n            public metadata: { [k: string]: string };\n\n            /**\n             * Encodes the specified MetaDataRequest message. Does not implicitly {@link jubian.model.MetaDataRequest.verify|verify} messages.\n             * @param m MetaDataRequest message or plain object to encode\n             * @param [w] Writer to encode to\n             * @returns Writer\n             */\n            public static encode(m: jubian.model.IMetaDataRequest, w?: $protobuf.Writer): $protobuf.Writer;\n\n            /**\n             * Decodes a MetaDataRequest message from the specified reader or buffer.\n             * @param r Reader or buffer to decode from\n             * @param [l] Message length if known beforehand\n             * @returns MetaDataRequest\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): jubian.model.MetaDataRequest;\n\n            /**\n             * Creates a MetaDataRequest message from a plain object. Also converts values to their respective internal types.\n             * @param d Plain object\n             * @returns MetaDataRequest\n             */\n            public static fromObject(d: { [k: string]: any }): jubian.model.MetaDataRequest;\n\n            /**\n             * Creates a plain object from a MetaDataRequest message. Also converts values to other types if specified.\n             * @param m MetaDataRequest\n             * @param [o] Conversion options\n             * @returns Plain object\n             */\n            public static toObject(m: jubian.model.MetaDataRequest, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n            /**\n             * Converts this MetaDataRequest to JSON.\n             * @returns JSON object\n             */\n            public toJSON(): { [k: string]: any };\n        }\n\n        /** Properties of a MetaDataResponse. */\n        interface IMetaDataResponse {\n\n            /** MetaDataResponse metadata */\n            metadata?: ({ [k: string]: string }|null);\n        }\n\n        /** Represents a MetaDataResponse. */\n        class MetaDataResponse implements IMetaDataResponse {\n\n            /**\n             * Constructs a new MetaDataResponse.\n             * @param [p] Properties to set\n             */\n            constructor(p?: jubian.model.IMetaDataResponse);\n\n            /** MetaDataResponse metadata. */\n            public metadata: { [k: string]: string };\n\n            /**\n             * Encodes the specified MetaDataResponse message. Does not implicitly {@link jubian.model.MetaDataResponse.verify|verify} messages.\n             * @param m MetaDataResponse message or plain object to encode\n             * @param [w] Writer to encode to\n             * @returns Writer\n             */\n            public static encode(m: jubian.model.IMetaDataResponse, w?: $protobuf.Writer): $protobuf.Writer;\n\n            /**\n             * Decodes a MetaDataResponse message from the specified reader or buffer.\n             * @param r Reader or buffer to decode from\n             * @param [l] Message length if known beforehand\n             * @returns MetaDataResponse\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): jubian.model.MetaDataResponse;\n\n            /**\n             * Creates a MetaDataResponse message from a plain object. Also converts values to their respective internal types.\n             * @param d Plain object\n             * @returns MetaDataResponse\n             */\n            public static fromObject(d: { [k: string]: any }): jubian.model.MetaDataResponse;\n\n            /**\n             * Creates a plain object from a MetaDataResponse message. Also converts values to other types if specified.\n             * @param m MetaDataResponse\n             * @param [o] Conversion options\n             * @returns Plain object\n             */\n            public static toObject(m: jubian.model.MetaDataResponse, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n            /**\n             * Converts this MetaDataResponse to JSON.\n             * @returns JSON object\n             */\n            public toJSON(): { [k: string]: any };\n        }\n\n        /** Properties of a PageRequest. */\n        interface IPageRequest {\n\n            /** PageRequest params */\n            params?: ({ [k: string]: string }|null);\n\n            /** PageRequest options */\n            options?: (jubian.model.IQueryOptions|null);\n        }\n\n        /** Represents a PageRequest. */\n        class PageRequest implements IPageRequest {\n\n            /**\n             * Constructs a new PageRequest.\n             * @param [p] Properties to set\n             */\n            constructor(p?: jubian.model.IPageRequest);\n\n            /** PageRequest params. */\n            public params: { [k: string]: string };\n\n            /** PageRequest options. */\n            public options?: (jubian.model.IQueryOptions|null);\n\n            /**\n             * Encodes the specified PageRequest message. Does not implicitly {@link jubian.model.PageRequest.verify|verify} messages.\n             * @param m PageRequest message or plain object to encode\n             * @param [w] Writer to encode to\n             * @returns Writer\n             */\n            public static encode(m: jubian.model.IPageRequest, w?: $protobuf.Writer): $protobuf.Writer;\n\n            /**\n             * Decodes a PageRequest message from the specified reader or buffer.\n             * @param r Reader or buffer to decode from\n             * @param [l] Message length if known beforehand\n             * @returns PageRequest\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): jubian.model.PageRequest;\n\n            /**\n             * Creates a PageRequest message from a plain object. Also converts values to their respective internal types.\n             * @param d Plain object\n             * @returns PageRequest\n             */\n            public static fromObject(d: { [k: string]: any }): jubian.model.PageRequest;\n\n            /**\n             * Creates a plain object from a PageRequest message. Also converts values to other types if specified.\n             * @param m PageRequest\n             * @param [o] Conversion options\n             * @returns Plain object\n             */\n            public static toObject(m: jubian.model.PageRequest, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n            /**\n             * Converts this PageRequest to JSON.\n             * @returns JSON object\n             */\n            public toJSON(): { [k: string]: any };\n        }\n\n        /** Properties of a ResultResponse. */\n        interface IResultResponse {\n\n            /** ResultResponse result */\n            result?: (number|null);\n        }\n\n        /** Represents a ResultResponse. */\n        class ResultResponse implements IResultResponse {\n\n            /**\n             * Constructs a new ResultResponse.\n             * @param [p] Properties to set\n             */\n            constructor(p?: jubian.model.IResultResponse);\n\n            /** ResultResponse result. */\n            public result: number;\n\n            /**\n             * Encodes the specified ResultResponse message. Does not implicitly {@link jubian.model.ResultResponse.verify|verify} messages.\n             * @param m ResultResponse message or plain object to encode\n             * @param [w] Writer to encode to\n             * @returns Writer\n             */\n            public static encode(m: jubian.model.IResultResponse, w?: $protobuf.Writer): $protobuf.Writer;\n\n            /**\n             * Decodes a ResultResponse message from the specified reader or buffer.\n             * @param r Reader or buffer to decode from\n             * @param [l] Message length if known beforehand\n             * @returns ResultResponse\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): jubian.model.ResultResponse;\n\n            /**\n             * Creates a ResultResponse message from a plain object. Also converts values to their respective internal types.\n             * @param d Plain object\n             * @returns ResultResponse\n             */\n            public static fromObject(d: { [k: string]: any }): jubian.model.ResultResponse;\n\n            /**\n             * Creates a plain object from a ResultResponse message. Also converts values to other types if specified.\n             * @param m ResultResponse\n             * @param [o] Conversion options\n             * @returns Plain object\n             */\n            public static toObject(m: jubian.model.ResultResponse, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n            /**\n             * Converts this ResultResponse to JSON.\n             * @returns JSON object\n             */\n            public toJSON(): { [k: string]: any };\n        }\n\n        /** Properties of a RequestByToken. */\n        interface IRequestByToken {\n\n            /** RequestByToken access_token */\n            access_token?: (string|null);\n        }\n\n        /** Represents a RequestByToken. */\n        class RequestByToken implements IRequestByToken {\n\n            /**\n             * Constructs a new RequestByToken.\n             * @param [p] Properties to set\n             */\n            constructor(p?: jubian.model.IRequestByToken);\n\n            /** RequestByToken access_token. */\n            public access_token: string;\n\n            /**\n             * Encodes the specified RequestByToken message. Does not implicitly {@link jubian.model.RequestByToken.verify|verify} messages.\n             * @param m RequestByToken message or plain object to encode\n             * @param [w] Writer to encode to\n             * @returns Writer\n             */\n            public static encode(m: jubian.model.IRequestByToken, w?: $protobuf.Writer): $protobuf.Writer;\n\n            /**\n             * Decodes a RequestByToken message from the specified reader or buffer.\n             * @param r Reader or buffer to decode from\n             * @param [l] Message length if known beforehand\n             * @returns RequestByToken\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): jubian.model.RequestByToken;\n\n            /**\n             * Creates a RequestByToken message from a plain object. Also converts values to their respective internal types.\n             * @param d Plain object\n             * @returns RequestByToken\n             */\n            public static fromObject(d: { [k: string]: any }): jubian.model.RequestByToken;\n\n            /**\n             * Creates a plain object from a RequestByToken message. Also converts values to other types if specified.\n             * @param m RequestByToken\n             * @param [o] Conversion options\n             * @returns Plain object\n             */\n            public static toObject(m: jubian.model.RequestByToken, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n            /**\n             * Converts this RequestByToken to JSON.\n             * @returns JSON object\n             */\n            public toJSON(): { [k: string]: any };\n        }\n\n        /** Properties of a RequestByIds. */\n        interface IRequestByIds {\n\n            /** RequestByIds ids */\n            ids?: (string[]|null);\n        }\n\n        /** Represents a RequestByIds. */\n        class RequestByIds implements IRequestByIds {\n\n            /**\n             * Constructs a new RequestByIds.\n             * @param [p] Properties to set\n             */\n            constructor(p?: jubian.model.IRequestByIds);\n\n            /** RequestByIds ids. */\n            public ids: string[];\n\n            /**\n             * Encodes the specified RequestByIds message. Does not implicitly {@link jubian.model.RequestByIds.verify|verify} messages.\n             * @param m RequestByIds message or plain object to encode\n             * @param [w] Writer to encode to\n             * @returns Writer\n             */\n            public static encode(m: jubian.model.IRequestByIds, w?: $protobuf.Writer): $protobuf.Writer;\n\n            /**\n             * Decodes a RequestByIds message from the specified reader or buffer.\n             * @param r Reader or buffer to decode from\n             * @param [l] Message length if known beforehand\n             * @returns RequestByIds\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): jubian.model.RequestByIds;\n\n            /**\n             * Creates a RequestByIds message from a plain object. Also converts values to their respective internal types.\n             * @param d Plain object\n             * @returns RequestByIds\n             */\n            public static fromObject(d: { [k: string]: any }): jubian.model.RequestByIds;\n\n            /**\n             * Creates a plain object from a RequestByIds message. Also converts values to other types if specified.\n             * @param m RequestByIds\n             * @param [o] Conversion options\n             * @returns Plain object\n             */\n            public static toObject(m: jubian.model.RequestByIds, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n            /**\n             * Converts this RequestByIds to JSON.\n             * @returns JSON object\n             */\n            public toJSON(): { [k: string]: any };\n        }\n\n        /** Properties of a QueryOptions. */\n        interface IQueryOptions {\n\n            /** QueryOptions page */\n            page?: (number|null);\n\n            /** QueryOptions count */\n            count?: (number|null);\n\n            /** QueryOptions max_id */\n            max_id?: (number|Long|null);\n\n            /** QueryOptions since_id */\n            since_id?: (number|Long|null);\n        }\n\n        /** Represents a QueryOptions. */\n        class QueryOptions implements IQueryOptions {\n\n            /**\n             * Constructs a new QueryOptions.\n             * @param [p] Properties to set\n             */\n            constructor(p?: jubian.model.IQueryOptions);\n\n            /** QueryOptions page. */\n            public page: number;\n\n            /** QueryOptions count. */\n            public count: number;\n\n            /** QueryOptions max_id. */\n            public max_id: (number|Long);\n\n            /** QueryOptions since_id. */\n            public since_id: (number|Long);\n\n            /**\n             * Encodes the specified QueryOptions message. Does not implicitly {@link jubian.model.QueryOptions.verify|verify} messages.\n             * @param m QueryOptions message or plain object to encode\n             * @param [w] Writer to encode to\n             * @returns Writer\n             */\n            public static encode(m: jubian.model.IQueryOptions, w?: $protobuf.Writer): $protobuf.Writer;\n\n            /**\n             * Decodes a QueryOptions message from the specified reader or buffer.\n             * @param r Reader or buffer to decode from\n             * @param [l] Message length if known beforehand\n             * @returns QueryOptions\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): jubian.model.QueryOptions;\n\n            /**\n             * Creates a QueryOptions message from a plain object. Also converts values to their respective internal types.\n             * @param d Plain object\n             * @returns QueryOptions\n             */\n            public static fromObject(d: { [k: string]: any }): jubian.model.QueryOptions;\n\n            /**\n             * Creates a plain object from a QueryOptions message. Also converts values to other types if specified.\n             * @param m QueryOptions\n             * @param [o] Conversion options\n             * @returns Plain object\n             */\n            public static toObject(m: jubian.model.QueryOptions, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n            /**\n             * Converts this QueryOptions to JSON.\n             * @returns JSON object\n             */\n            public toJSON(): { [k: string]: any };\n        }\n    }\n\n    /** Namespace golottery. */\n    namespace golottery {\n\n        /** Namespace srv. */\n        namespace srv {\n\n            /** Namespace room. */\n            namespace room {\n\n                /** RoomType enum. */\n                enum RoomType {\n                    NONE = 0\n                }\n\n                /** Properties of a Room. */\n                interface IRoom {\n\n                    /** Room id */\n                    id?: (number|Long|null);\n\n                    /** Room server_id */\n                    server_id?: (string|null);\n\n                    /** Room nodes */\n                    nodes?: (jubian.golottery.srv.room.ITableInfo[]|null);\n                }\n\n                /** Represents a Room. */\n                class Room implements IRoom {\n\n                    /**\n                     * Constructs a new Room.\n                     * @param [p] Properties to set\n                     */\n                    constructor(p?: jubian.golottery.srv.room.IRoom);\n\n                    /** Room id. */\n                    public id: (number|Long);\n\n                    /** Room server_id. */\n                    public server_id: string;\n\n                    /** Room nodes. */\n                    public nodes: jubian.golottery.srv.room.ITableInfo[];\n\n                    /**\n                     * Encodes the specified Room message. Does not implicitly {@link jubian.golottery.srv.room.Room.verify|verify} messages.\n                     * @param m Room message or plain object to encode\n                     * @param [w] Writer to encode to\n                     * @returns Writer\n                     */\n                    public static encode(m: jubian.golottery.srv.room.IRoom, w?: $protobuf.Writer): $protobuf.Writer;\n\n                    /**\n                     * Decodes a Room message from the specified reader or buffer.\n                     * @param r Reader or buffer to decode from\n                     * @param [l] Message length if known beforehand\n                     * @returns Room\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): jubian.golottery.srv.room.Room;\n\n                    /**\n                     * Creates a Room message from a plain object. Also converts values to their respective internal types.\n                     * @param d Plain object\n                     * @returns Room\n                     */\n                    public static fromObject(d: { [k: string]: any }): jubian.golottery.srv.room.Room;\n\n                    /**\n                     * Creates a plain object from a Room message. Also converts values to other types if specified.\n                     * @param m Room\n                     * @param [o] Conversion options\n                     * @returns Plain object\n                     */\n                    public static toObject(m: jubian.golottery.srv.room.Room, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n                    /**\n                     * Converts this Room to JSON.\n                     * @returns JSON object\n                     */\n                    public toJSON(): { [k: string]: any };\n                }\n\n                /** Properties of a TableInfo. */\n                interface ITableInfo {\n\n                    /** TableInfo id */\n                    id?: (number|Long|null);\n\n                    /** TableInfo server_id */\n                    server_id?: (string|null);\n\n                    /** TableInfo transaction_id */\n                    transaction_id?: (number|Long|null);\n                }\n\n                /** Represents a TableInfo. */\n                class TableInfo implements ITableInfo {\n\n                    /**\n                     * Constructs a new TableInfo.\n                     * @param [p] Properties to set\n                     */\n                    constructor(p?: jubian.golottery.srv.room.ITableInfo);\n\n                    /** TableInfo id. */\n                    public id: (number|Long);\n\n                    /** TableInfo server_id. */\n                    public server_id: string;\n\n                    /** TableInfo transaction_id. */\n                    public transaction_id: (number|Long);\n\n                    /**\n                     * Encodes the specified TableInfo message. Does not implicitly {@link jubian.golottery.srv.room.TableInfo.verify|verify} messages.\n                     * @param m TableInfo message or plain object to encode\n                     * @param [w] Writer to encode to\n                     * @returns Writer\n                     */\n                    public static encode(m: jubian.golottery.srv.room.ITableInfo, w?: $protobuf.Writer): $protobuf.Writer;\n\n                    /**\n                     * Decodes a TableInfo message from the specified reader or buffer.\n                     * @param r Reader or buffer to decode from\n                     * @param [l] Message length if known beforehand\n                     * @returns TableInfo\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): jubian.golottery.srv.room.TableInfo;\n\n                    /**\n                     * Creates a TableInfo message from a plain object. Also converts values to their respective internal types.\n                     * @param d Plain object\n                     * @returns TableInfo\n                     */\n                    public static fromObject(d: { [k: string]: any }): jubian.golottery.srv.room.TableInfo;\n\n                    /**\n                     * Creates a plain object from a TableInfo message. Also converts values to other types if specified.\n                     * @param m TableInfo\n                     * @param [o] Conversion options\n                     * @returns Plain object\n                     */\n                    public static toObject(m: jubian.golottery.srv.room.TableInfo, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n                    /**\n                     * Converts this TableInfo to JSON.\n                     * @returns JSON object\n                     */\n                    public toJSON(): { [k: string]: any };\n                }\n\n                /** Properties of a JoinRoom. */\n                interface IJoinRoom {\n\n                    /** JoinRoom room_no */\n                    room_no?: (string|null);\n\n                    /** JoinRoom room_type */\n                    room_type?: (jubian.golottery.srv.room.RoomType|null);\n                }\n\n                /** Represents a JoinRoom. */\n                class JoinRoom implements IJoinRoom {\n\n                    /**\n                     * Constructs a new JoinRoom.\n                     * @param [p] Properties to set\n                     */\n                    constructor(p?: jubian.golottery.srv.room.IJoinRoom);\n\n                    /** JoinRoom room_no. */\n                    public room_no: string;\n\n                    /** JoinRoom room_type. */\n                    public room_type: jubian.golottery.srv.room.RoomType;\n\n                    /**\n                     * Encodes the specified JoinRoom message. Does not implicitly {@link jubian.golottery.srv.room.JoinRoom.verify|verify} messages.\n                     * @param m JoinRoom message or plain object to encode\n                     * @param [w] Writer to encode to\n                     * @returns Writer\n                     */\n                    public static encode(m: jubian.golottery.srv.room.IJoinRoom, w?: $protobuf.Writer): $protobuf.Writer;\n\n                    /**\n                     * Decodes a JoinRoom message from the specified reader or buffer.\n                     * @param r Reader or buffer to decode from\n                     * @param [l] Message length if known beforehand\n                     * @returns JoinRoom\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): jubian.golottery.srv.room.JoinRoom;\n\n                    /**\n                     * Creates a JoinRoom message from a plain object. Also converts values to their respective internal types.\n                     * @param d Plain object\n                     * @returns JoinRoom\n                     */\n                    public static fromObject(d: { [k: string]: any }): jubian.golottery.srv.room.JoinRoom;\n\n                    /**\n                     * Creates a plain object from a JoinRoom message. Also converts values to other types if specified.\n                     * @param m JoinRoom\n                     * @param [o] Conversion options\n                     * @returns Plain object\n                     */\n                    public static toObject(m: jubian.golottery.srv.room.JoinRoom, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n                    /**\n                     * Converts this JoinRoom to JSON.\n                     * @returns JSON object\n                     */\n                    public toJSON(): { [k: string]: any };\n                }\n            }\n\n            /** Namespace oauth2. */\n            namespace oauth2 {\n\n                /** Properties of a Token. */\n                interface IToken {\n\n                    /** Token access_token */\n                    access_token?: (string|null);\n\n                    /** Token token_type */\n                    token_type?: (string|null);\n\n                    /** Token refresh_token */\n                    refresh_token?: (string|null);\n\n                    /** Token expires_at */\n                    expires_at?: (number|Long|null);\n\n                    /** Token scopes */\n                    scopes?: (string[]|null);\n\n                    /** Token metadata */\n                    metadata?: ({ [k: string]: string }|null);\n                }\n\n                /** Represents a Token. */\n                class Token implements IToken {\n\n                    /**\n                     * Constructs a new Token.\n                     * @param [p] Properties to set\n                     */\n                    constructor(p?: jubian.golottery.srv.oauth2.IToken);\n\n                    /** Token access_token. */\n                    public access_token: string;\n\n                    /** Token token_type. */\n                    public token_type: string;\n\n                    /** Token refresh_token. */\n                    public refresh_token: string;\n\n                    /** Token expires_at. */\n                    public expires_at: (number|Long);\n\n                    /** Token scopes. */\n                    public scopes: string[];\n\n                    /** Token metadata. */\n                    public metadata: { [k: string]: string };\n\n                    /**\n                     * Encodes the specified Token message. Does not implicitly {@link jubian.golottery.srv.oauth2.Token.verify|verify} messages.\n                     * @param m Token message or plain object to encode\n                     * @param [w] Writer to encode to\n                     * @returns Writer\n                     */\n                    public static encode(m: jubian.golottery.srv.oauth2.IToken, w?: $protobuf.Writer): $protobuf.Writer;\n\n                    /**\n                     * Decodes a Token message from the specified reader or buffer.\n                     * @param r Reader or buffer to decode from\n                     * @param [l] Message length if known beforehand\n                     * @returns Token\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): jubian.golottery.srv.oauth2.Token;\n\n                    /**\n                     * Creates a Token message from a plain object. Also converts values to their respective internal types.\n                     * @param d Plain object\n                     * @returns Token\n                     */\n                    public static fromObject(d: { [k: string]: any }): jubian.golottery.srv.oauth2.Token;\n\n                    /**\n                     * Creates a plain object from a Token message. Also converts values to other types if specified.\n                     * @param m Token\n                     * @param [o] Conversion options\n                     * @returns Plain object\n                     */\n                    public static toObject(m: jubian.golottery.srv.oauth2.Token, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n                    /**\n                     * Converts this Token to JSON.\n                     * @returns JSON object\n                     */\n                    public toJSON(): { [k: string]: any };\n                }\n            }\n        }\n\n        /** Namespace model. */\n        namespace model {\n\n            /** Namespace profile. */\n            namespace profile {\n\n                /** Properties of a Profile. */\n                interface IProfile {\n\n                    /** Profile id */\n                    id?: (number|Long|null);\n\n                    /** Profile username */\n                    username?: (string|null);\n\n                    /** Profile nickname */\n                    nickname?: (string|null);\n\n                    /** Profile province */\n                    province?: (number|null);\n\n                    /** Profile city */\n                    city?: (number|null);\n\n                    /** Profile location */\n                    location?: (string|null);\n\n                    /** Profile location_id */\n                    location_id?: (number|null);\n\n                    /** Profile description */\n                    description?: (string|null);\n\n                    /** Profile profile_image_url */\n                    profile_image_url?: (string|null);\n\n                    /** Profile gender */\n                    gender?: (string|null);\n\n                    /** Profile create_time */\n                    create_time?: (number|Long|null);\n\n                    /** Profile updated */\n                    updated?: (number|Long|null);\n\n                    /** Profile geo_enabled */\n                    geo_enabled?: (boolean|null);\n\n                    /** Profile role */\n                    role?: (jubian.golottery.model.profile.RoleType|null);\n\n                    /** Profile homepage */\n                    homepage?: (string|null);\n\n                    /** Profile metadata */\n                    metadata?: ({ [k: string]: string }|null);\n\n                    /** Profile group */\n                    group?: (jubian.golottery.model.profile.IOrganization|null);\n                }\n\n                /** Represents a Profile. */\n                class Profile implements IProfile {\n\n                    /**\n                     * Constructs a new Profile.\n                     * @param [p] Properties to set\n                     */\n                    constructor(p?: jubian.golottery.model.profile.IProfile);\n\n                    /** Profile id. */\n                    public id: (number|Long);\n\n                    /** Profile username. */\n                    public username: string;\n\n                    /** Profile nickname. */\n                    public nickname: string;\n\n                    /** Profile province. */\n                    public province: number;\n\n                    /** Profile city. */\n                    public city: number;\n\n                    /** Profile location. */\n                    public location: string;\n\n                    /** Profile location_id. */\n                    public location_id: number;\n\n                    /** Profile description. */\n                    public description: string;\n\n                    /** Profile profile_image_url. */\n                    public profile_image_url: string;\n\n                    /** Profile gender. */\n                    public gender: string;\n\n                    /** Profile create_time. */\n                    public create_time: (number|Long);\n\n                    /** Profile updated. */\n                    public updated: (number|Long);\n\n                    /** Profile geo_enabled. */\n                    public geo_enabled: boolean;\n\n                    /** Profile role. */\n                    public role: jubian.golottery.model.profile.RoleType;\n\n                    /** Profile homepage. */\n                    public homepage: string;\n\n                    /** Profile metadata. */\n                    public metadata: { [k: string]: string };\n\n                    /** Profile group. */\n                    public group?: (jubian.golottery.model.profile.IOrganization|null);\n\n                    /**\n                     * Encodes the specified Profile message. Does not implicitly {@link jubian.golottery.model.profile.Profile.verify|verify} messages.\n                     * @param m Profile message or plain object to encode\n                     * @param [w] Writer to encode to\n                     * @returns Writer\n                     */\n                    public static encode(m: jubian.golottery.model.profile.IProfile, w?: $protobuf.Writer): $protobuf.Writer;\n\n                    /**\n                     * Decodes a Profile message from the specified reader or buffer.\n                     * @param r Reader or buffer to decode from\n                     * @param [l] Message length if known beforehand\n                     * @returns Profile\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): jubian.golottery.model.profile.Profile;\n\n                    /**\n                     * Creates a Profile message from a plain object. Also converts values to their respective internal types.\n                     * @param d Plain object\n                     * @returns Profile\n                     */\n                    public static fromObject(d: { [k: string]: any }): jubian.golottery.model.profile.Profile;\n\n                    /**\n                     * Creates a plain object from a Profile message. Also converts values to other types if specified.\n                     * @param m Profile\n                     * @param [o] Conversion options\n                     * @returns Plain object\n                     */\n                    public static toObject(m: jubian.golottery.model.profile.Profile, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n                    /**\n                     * Converts this Profile to JSON.\n                     * @returns JSON object\n                     */\n                    public toJSON(): { [k: string]: any };\n                }\n\n                /** Properties of an Organization. */\n                interface IOrganization {\n\n                    /** Organization id */\n                    id?: (number|Long|null);\n\n                    /** Organization type */\n                    type?: (number|null);\n\n                    /** Organization sales_shop_id */\n                    sales_shop_id?: (number|Long|null);\n\n                    /** Organization owner_id */\n                    owner_id?: (number|Long|null);\n\n                    /** Organization owner_name */\n                    owner_name?: (string|null);\n\n                    /** Organization lisense_id */\n                    lisense_id?: (string|null);\n\n                    /** Organization phone */\n                    phone?: (string|null);\n\n                    /** Organization username */\n                    username?: (string|null);\n\n                    /** Organization brief_name */\n                    brief_name?: (string|null);\n\n                    /** Organization qrcode_url */\n                    qrcode_url?: (string|null);\n\n                    /** Organization share_url */\n                    share_url?: (string|null);\n\n                    /** Organization profile_image_url */\n                    profile_image_url?: (string|null);\n\n                    /** Organization homepage */\n                    homepage?: (string|null);\n\n                    /** Organization address */\n                    address?: (string|null);\n\n                    /** Organization metadata */\n                    metadata?: ({ [k: string]: string }|null);\n\n                    /** Organization description */\n                    description?: (string|null);\n\n                    /** Organization lat */\n                    lat?: (number|null);\n\n                    /** Organization lon */\n                    lon?: (number|null);\n\n                    /** Organization location */\n                    location?: (string|null);\n\n                    /** Organization location_id */\n                    location_id?: (number|null);\n\n                    /** Organization create_time */\n                    create_time?: (number|Long|null);\n\n                    /** Organization updated */\n                    updated?: (number|Long|null);\n\n                    /** Organization role */\n                    role?: (jubian.golottery.model.profile.RoleType|null);\n\n                    /** Organization rights */\n                    rights?: (jubian.golottery.model.profile.RightType[]|null);\n                }\n\n                /** Represents an Organization. */\n                class Organization implements IOrganization {\n\n                    /**\n                     * Constructs a new Organization.\n                     * @param [p] Properties to set\n                     */\n                    constructor(p?: jubian.golottery.model.profile.IOrganization);\n\n                    /** Organization id. */\n                    public id: (number|Long);\n\n                    /** Organization type. */\n                    public type: number;\n\n                    /** Organization sales_shop_id. */\n                    public sales_shop_id: (number|Long);\n\n                    /** Organization owner_id. */\n                    public owner_id: (number|Long);\n\n                    /** Organization owner_name. */\n                    public owner_name: string;\n\n                    /** Organization lisense_id. */\n                    public lisense_id: string;\n\n                    /** Organization phone. */\n                    public phone: string;\n\n                    /** Organization username. */\n                    public username: string;\n\n                    /** Organization brief_name. */\n                    public brief_name: string;\n\n                    /** Organization qrcode_url. */\n                    public qrcode_url: string;\n\n                    /** Organization share_url. */\n                    public share_url: string;\n\n                    /** Organization profile_image_url. */\n                    public profile_image_url: string;\n\n                    /** Organization homepage. */\n                    public homepage: string;\n\n                    /** Organization address. */\n                    public address: string;\n\n                    /** Organization metadata. */\n                    public metadata: { [k: string]: string };\n\n                    /** Organization description. */\n                    public description: string;\n\n                    /** Organization lat. */\n                    public lat: number;\n\n                    /** Organization lon. */\n                    public lon: number;\n\n                    /** Organization location. */\n                    public location: string;\n\n                    /** Organization location_id. */\n                    public location_id: number;\n\n                    /** Organization create_time. */\n                    public create_time: (number|Long);\n\n                    /** Organization updated. */\n                    public updated: (number|Long);\n\n                    /** Organization role. */\n                    public role: jubian.golottery.model.profile.RoleType;\n\n                    /** Organization rights. */\n                    public rights: jubian.golottery.model.profile.RightType[];\n\n                    /**\n                     * Encodes the specified Organization message. Does not implicitly {@link jubian.golottery.model.profile.Organization.verify|verify} messages.\n                     * @param m Organization message or plain object to encode\n                     * @param [w] Writer to encode to\n                     * @returns Writer\n                     */\n                    public static encode(m: jubian.golottery.model.profile.IOrganization, w?: $protobuf.Writer): $protobuf.Writer;\n\n                    /**\n                     * Decodes an Organization message from the specified reader or buffer.\n                     * @param r Reader or buffer to decode from\n                     * @param [l] Message length if known beforehand\n                     * @returns Organization\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): jubian.golottery.model.profile.Organization;\n\n                    /**\n                     * Creates an Organization message from a plain object. Also converts values to their respective internal types.\n                     * @param d Plain object\n                     * @returns Organization\n                     */\n                    public static fromObject(d: { [k: string]: any }): jubian.golottery.model.profile.Organization;\n\n                    /**\n                     * Creates a plain object from an Organization message. Also converts values to other types if specified.\n                     * @param m Organization\n                     * @param [o] Conversion options\n                     * @returns Plain object\n                     */\n                    public static toObject(m: jubian.golottery.model.profile.Organization, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n                    /**\n                     * Converts this Organization to JSON.\n                     * @returns JSON object\n                     */\n                    public toJSON(): { [k: string]: any };\n                }\n\n                /** RoleType enum. */\n                enum RoleType {\n                    USER = 0,\n                    BOSS = 1,\n                    EMPLOYEE = 2,\n                    KOL = 3,\n                    CAPTAIN = 4\n                }\n\n                /** RightType enum. */\n                enum RightType {\n                    AVAILABLE = 0,\n                    DISABLE = 1,\n                    FORBIDDEN_CHAT = 2,\n                    FORBIDDEN_PUBLISH = 3,\n                    BLACKLIST = 4,\n                    FORBIDDEN_OPER = 5\n                }\n\n                /** Properties of a ProfileResponse. */\n                interface IProfileResponse {\n\n                    /** ProfileResponse profiles */\n                    profiles?: (jubian.golottery.model.profile.IProfile[]|null);\n                }\n\n                /** Represents a ProfileResponse. */\n                class ProfileResponse implements IProfileResponse {\n\n                    /**\n                     * Constructs a new ProfileResponse.\n                     * @param [p] Properties to set\n                     */\n                    constructor(p?: jubian.golottery.model.profile.IProfileResponse);\n\n                    /** ProfileResponse profiles. */\n                    public profiles: jubian.golottery.model.profile.IProfile[];\n\n                    /**\n                     * Encodes the specified ProfileResponse message. Does not implicitly {@link jubian.golottery.model.profile.ProfileResponse.verify|verify} messages.\n                     * @param m ProfileResponse message or plain object to encode\n                     * @param [w] Writer to encode to\n                     * @returns Writer\n                     */\n                    public static encode(m: jubian.golottery.model.profile.IProfileResponse, w?: $protobuf.Writer): $protobuf.Writer;\n\n                    /**\n                     * Decodes a ProfileResponse message from the specified reader or buffer.\n                     * @param r Reader or buffer to decode from\n                     * @param [l] Message length if known beforehand\n                     * @returns ProfileResponse\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): jubian.golottery.model.profile.ProfileResponse;\n\n                    /**\n                     * Creates a ProfileResponse message from a plain object. Also converts values to their respective internal types.\n                     * @param d Plain object\n                     * @returns ProfileResponse\n                     */\n                    public static fromObject(d: { [k: string]: any }): jubian.golottery.model.profile.ProfileResponse;\n\n                    /**\n                     * Creates a plain object from a ProfileResponse message. Also converts values to other types if specified.\n                     * @param m ProfileResponse\n                     * @param [o] Conversion options\n                     * @returns Plain object\n                     */\n                    public static toObject(m: jubian.golottery.model.profile.ProfileResponse, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n                    /**\n                     * Converts this ProfileResponse to JSON.\n                     * @returns JSON object\n                     */\n                    public toJSON(): { [k: string]: any };\n                }\n\n                /** Properties of an OrganizationResponse. */\n                interface IOrganizationResponse {\n\n                    /** OrganizationResponse groups */\n                    groups?: (jubian.golottery.model.profile.IOrganization[]|null);\n                }\n\n                /** Represents an OrganizationResponse. */\n                class OrganizationResponse implements IOrganizationResponse {\n\n                    /**\n                     * Constructs a new OrganizationResponse.\n                     * @param [p] Properties to set\n                     */\n                    constructor(p?: jubian.golottery.model.profile.IOrganizationResponse);\n\n                    /** OrganizationResponse groups. */\n                    public groups: jubian.golottery.model.profile.IOrganization[];\n\n                    /**\n                     * Encodes the specified OrganizationResponse message. Does not implicitly {@link jubian.golottery.model.profile.OrganizationResponse.verify|verify} messages.\n                     * @param m OrganizationResponse message or plain object to encode\n                     * @param [w] Writer to encode to\n                     * @returns Writer\n                     */\n                    public static encode(m: jubian.golottery.model.profile.IOrganizationResponse, w?: $protobuf.Writer): $protobuf.Writer;\n\n                    /**\n                     * Decodes an OrganizationResponse message from the specified reader or buffer.\n                     * @param r Reader or buffer to decode from\n                     * @param [l] Message length if known beforehand\n                     * @returns OrganizationResponse\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): jubian.golottery.model.profile.OrganizationResponse;\n\n                    /**\n                     * Creates an OrganizationResponse message from a plain object. Also converts values to their respective internal types.\n                     * @param d Plain object\n                     * @returns OrganizationResponse\n                     */\n                    public static fromObject(d: { [k: string]: any }): jubian.golottery.model.profile.OrganizationResponse;\n\n                    /**\n                     * Creates a plain object from an OrganizationResponse message. Also converts values to other types if specified.\n                     * @param m OrganizationResponse\n                     * @param [o] Conversion options\n                     * @returns Plain object\n                     */\n                    public static toObject(m: jubian.golottery.model.profile.OrganizationResponse, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n                    /**\n                     * Converts this OrganizationResponse to JSON.\n                     * @returns JSON object\n                     */\n                    public toJSON(): { [k: string]: any };\n                }\n            }\n        }\n    }\n}\n\n/** Namespace farm. */\nexport namespace farm {\n\n    /** Properties of a ReqGameWords. */\n    interface IReqGameWords {\n\n        /** ReqGameWords user_id */\n        user_id?: (string|null);\n\n        /** ReqGameWords mode */\n        mode?: (number|Long|null);\n\n        /** ReqGameWords mode_param */\n        mode_param?: (string|null);\n\n        /** ReqGameWords game_type */\n        game_type?: (number|Long|null);\n    }\n\n    /** Represents a ReqGameWords. */\n    class ReqGameWords implements IReqGameWords {\n\n        /**\n         * Constructs a new ReqGameWords.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IReqGameWords);\n\n        /** ReqGameWords user_id. */\n        public user_id: string;\n\n        /** ReqGameWords mode. */\n        public mode: (number|Long);\n\n        /** ReqGameWords mode_param. */\n        public mode_param: string;\n\n        /** ReqGameWords game_type. */\n        public game_type: (number|Long);\n\n        /**\n         * Encodes the specified ReqGameWords message. Does not implicitly {@link farm.ReqGameWords.verify|verify} messages.\n         * @param m ReqGameWords message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IReqGameWords, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a ReqGameWords message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns ReqGameWords\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.ReqGameWords;\n\n        /**\n         * Creates a ReqGameWords message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns ReqGameWords\n         */\n        public static fromObject(d: { [k: string]: any }): farm.ReqGameWords;\n\n        /**\n         * Creates a plain object from a ReqGameWords message. Also converts values to other types if specified.\n         * @param m ReqGameWords\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.ReqGameWords, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this ReqGameWords to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a RespGameWords. */\n    interface IRespGameWords {\n\n        /** RespGameWords item_ids */\n        item_ids?: ((number|Long)[]|null);\n\n        /** RespGameWords must_learn */\n        must_learn?: (number|Long|null);\n\n        /** RespGameWords game_config */\n        game_config?: (farm.IGameTypeConfig|null);\n    }\n\n    /** Represents a RespGameWords. */\n    class RespGameWords implements IRespGameWords {\n\n        /**\n         * Constructs a new RespGameWords.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IRespGameWords);\n\n        /** RespGameWords item_ids. */\n        public item_ids: (number|Long)[];\n\n        /** RespGameWords must_learn. */\n        public must_learn: (number|Long);\n\n        /** RespGameWords game_config. */\n        public game_config?: (farm.IGameTypeConfig|null);\n\n        /**\n         * Encodes the specified RespGameWords message. Does not implicitly {@link farm.RespGameWords.verify|verify} messages.\n         * @param m RespGameWords message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IRespGameWords, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a RespGameWords message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns RespGameWords\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.RespGameWords;\n\n        /**\n         * Creates a RespGameWords message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns RespGameWords\n         */\n        public static fromObject(d: { [k: string]: any }): farm.RespGameWords;\n\n        /**\n         * Creates a plain object from a RespGameWords message. Also converts values to other types if specified.\n         * @param m RespGameWords\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.RespGameWords, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this RespGameWords to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a GameTypeConfig. */\n    interface IGameTypeConfig {\n\n        /** GameTypeConfig game_duration */\n        game_duration?: (number|Long|null);\n\n        /** GameTypeConfig time_over */\n        time_over?: (number|Long|null);\n\n        /** GameTypeConfig stage_params */\n        stage_params?: ((number|Long)[]|null);\n\n        /** GameTypeConfig game_type */\n        game_type?: (number|Long|null);\n\n        /** GameTypeConfig time_over_or_wrong_deduction */\n        time_over_or_wrong_deduction?: (number|null);\n\n        /** GameTypeConfig unskillfull_deduction */\n        unskillfull_deduction?: (number|null);\n\n        /** GameTypeConfig star_evaluation */\n        star_evaluation?: (number[]|null);\n    }\n\n    /** Represents a GameTypeConfig. */\n    class GameTypeConfig implements IGameTypeConfig {\n\n        /**\n         * Constructs a new GameTypeConfig.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IGameTypeConfig);\n\n        /** GameTypeConfig game_duration. */\n        public game_duration: (number|Long);\n\n        /** GameTypeConfig time_over. */\n        public time_over: (number|Long);\n\n        /** GameTypeConfig stage_params. */\n        public stage_params: (number|Long)[];\n\n        /** GameTypeConfig game_type. */\n        public game_type: (number|Long);\n\n        /** GameTypeConfig time_over_or_wrong_deduction. */\n        public time_over_or_wrong_deduction: number;\n\n        /** GameTypeConfig unskillfull_deduction. */\n        public unskillfull_deduction: number;\n\n        /** GameTypeConfig star_evaluation. */\n        public star_evaluation: number[];\n\n        /**\n         * Encodes the specified GameTypeConfig message. Does not implicitly {@link farm.GameTypeConfig.verify|verify} messages.\n         * @param m GameTypeConfig message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IGameTypeConfig, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a GameTypeConfig message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns GameTypeConfig\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.GameTypeConfig;\n\n        /**\n         * Creates a GameTypeConfig message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns GameTypeConfig\n         */\n        public static fromObject(d: { [k: string]: any }): farm.GameTypeConfig;\n\n        /**\n         * Creates a plain object from a GameTypeConfig message. Also converts values to other types if specified.\n         * @param m GameTypeConfig\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.GameTypeConfig, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this GameTypeConfig to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a ReqUnitLearningProgress. */\n    interface IReqUnitLearningProgress {\n\n        /** ReqUnitLearningProgress user_id */\n        user_id?: (string|null);\n\n        /** ReqUnitLearningProgress mat_id */\n        mat_id?: (number|Long|null);\n\n        /** ReqUnitLearningProgress unit_id */\n        unit_id?: (number|Long|null);\n    }\n\n    /** Represents a ReqUnitLearningProgress. */\n    class ReqUnitLearningProgress implements IReqUnitLearningProgress {\n\n        /**\n         * Constructs a new ReqUnitLearningProgress.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IReqUnitLearningProgress);\n\n        /** ReqUnitLearningProgress user_id. */\n        public user_id: string;\n\n        /** ReqUnitLearningProgress mat_id. */\n        public mat_id: (number|Long);\n\n        /** ReqUnitLearningProgress unit_id. */\n        public unit_id: (number|Long);\n\n        /**\n         * Encodes the specified ReqUnitLearningProgress message. Does not implicitly {@link farm.ReqUnitLearningProgress.verify|verify} messages.\n         * @param m ReqUnitLearningProgress message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IReqUnitLearningProgress, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a ReqUnitLearningProgress message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns ReqUnitLearningProgress\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.ReqUnitLearningProgress;\n\n        /**\n         * Creates a ReqUnitLearningProgress message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns ReqUnitLearningProgress\n         */\n        public static fromObject(d: { [k: string]: any }): farm.ReqUnitLearningProgress;\n\n        /**\n         * Creates a plain object from a ReqUnitLearningProgress message. Also converts values to other types if specified.\n         * @param m ReqUnitLearningProgress\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.ReqUnitLearningProgress, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this ReqUnitLearningProgress to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a RespUnitLearningProgress. */\n    interface IRespUnitLearningProgress {\n\n        /** RespUnitLearningProgress mat_id */\n        mat_id?: (number|Long|null);\n\n        /** RespUnitLearningProgress games_progress */\n        games_progress?: (farm.IGameTypeLearningProgressItem[]|null);\n    }\n\n    /** Represents a RespUnitLearningProgress. */\n    class RespUnitLearningProgress implements IRespUnitLearningProgress {\n\n        /**\n         * Constructs a new RespUnitLearningProgress.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IRespUnitLearningProgress);\n\n        /** RespUnitLearningProgress mat_id. */\n        public mat_id: (number|Long);\n\n        /** RespUnitLearningProgress games_progress. */\n        public games_progress: farm.IGameTypeLearningProgressItem[];\n\n        /**\n         * Encodes the specified RespUnitLearningProgress message. Does not implicitly {@link farm.RespUnitLearningProgress.verify|verify} messages.\n         * @param m RespUnitLearningProgress message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IRespUnitLearningProgress, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a RespUnitLearningProgress message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns RespUnitLearningProgress\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.RespUnitLearningProgress;\n\n        /**\n         * Creates a RespUnitLearningProgress message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns RespUnitLearningProgress\n         */\n        public static fromObject(d: { [k: string]: any }): farm.RespUnitLearningProgress;\n\n        /**\n         * Creates a plain object from a RespUnitLearningProgress message. Also converts values to other types if specified.\n         * @param m RespUnitLearningProgress\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.RespUnitLearningProgress, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this RespUnitLearningProgress to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a GameTypeLearningProgressItem. */\n    interface IGameTypeLearningProgressItem {\n\n        /** GameTypeLearningProgressItem game_type */\n        game_type?: (number|Long|null);\n\n        /** GameTypeLearningProgressItem star */\n        star?: ((number|Long)[]|null);\n\n        /** GameTypeLearningProgressItem history_max_score */\n        history_max_score?: (string|null);\n\n        /** GameTypeLearningProgressItem state */\n        state?: (number|Long|null);\n    }\n\n    /** Represents a GameTypeLearningProgressItem. */\n    class GameTypeLearningProgressItem implements IGameTypeLearningProgressItem {\n\n        /**\n         * Constructs a new GameTypeLearningProgressItem.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IGameTypeLearningProgressItem);\n\n        /** GameTypeLearningProgressItem game_type. */\n        public game_type: (number|Long);\n\n        /** GameTypeLearningProgressItem star. */\n        public star: (number|Long)[];\n\n        /** GameTypeLearningProgressItem history_max_score. */\n        public history_max_score: string;\n\n        /** GameTypeLearningProgressItem state. */\n        public state: (number|Long);\n\n        /**\n         * Encodes the specified GameTypeLearningProgressItem message. Does not implicitly {@link farm.GameTypeLearningProgressItem.verify|verify} messages.\n         * @param m GameTypeLearningProgressItem message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IGameTypeLearningProgressItem, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a GameTypeLearningProgressItem message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns GameTypeLearningProgressItem\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.GameTypeLearningProgressItem;\n\n        /**\n         * Creates a GameTypeLearningProgressItem message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns GameTypeLearningProgressItem\n         */\n        public static fromObject(d: { [k: string]: any }): farm.GameTypeLearningProgressItem;\n\n        /**\n         * Creates a plain object from a GameTypeLearningProgressItem message. Also converts values to other types if specified.\n         * @param m GameTypeLearningProgressItem\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.GameTypeLearningProgressItem, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this GameTypeLearningProgressItem to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a ReqMatLearningProgress. */\n    interface IReqMatLearningProgress {\n\n        /** ReqMatLearningProgress user_id */\n        user_id?: (string|null);\n\n        /** ReqMatLearningProgress mat_id */\n        mat_id?: (number|Long|null);\n    }\n\n    /** Represents a ReqMatLearningProgress. */\n    class ReqMatLearningProgress implements IReqMatLearningProgress {\n\n        /**\n         * Constructs a new ReqMatLearningProgress.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IReqMatLearningProgress);\n\n        /** ReqMatLearningProgress user_id. */\n        public user_id: string;\n\n        /** ReqMatLearningProgress mat_id. */\n        public mat_id: (number|Long);\n\n        /**\n         * Encodes the specified ReqMatLearningProgress message. Does not implicitly {@link farm.ReqMatLearningProgress.verify|verify} messages.\n         * @param m ReqMatLearningProgress message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IReqMatLearningProgress, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a ReqMatLearningProgress message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns ReqMatLearningProgress\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.ReqMatLearningProgress;\n\n        /**\n         * Creates a ReqMatLearningProgress message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns ReqMatLearningProgress\n         */\n        public static fromObject(d: { [k: string]: any }): farm.ReqMatLearningProgress;\n\n        /**\n         * Creates a plain object from a ReqMatLearningProgress message. Also converts values to other types if specified.\n         * @param m ReqMatLearningProgress\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.ReqMatLearningProgress, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this ReqMatLearningProgress to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a RespMatLearningProgress. */\n    interface IRespMatLearningProgress {\n\n        /** RespMatLearningProgress mat_id */\n        mat_id?: (number|Long|null);\n\n        /** RespMatLearningProgress mat_star */\n        mat_star?: ((number|Long)[]|null);\n\n        /** RespMatLearningProgress grades_star */\n        grades_star?: (string|null);\n\n        /** RespMatLearningProgress units_star */\n        units_star?: (string|null);\n    }\n\n    /** Represents a RespMatLearningProgress. */\n    class RespMatLearningProgress implements IRespMatLearningProgress {\n\n        /**\n         * Constructs a new RespMatLearningProgress.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IRespMatLearningProgress);\n\n        /** RespMatLearningProgress mat_id. */\n        public mat_id: (number|Long);\n\n        /** RespMatLearningProgress mat_star. */\n        public mat_star: (number|Long)[];\n\n        /** RespMatLearningProgress grades_star. */\n        public grades_star: string;\n\n        /** RespMatLearningProgress units_star. */\n        public units_star: string;\n\n        /**\n         * Encodes the specified RespMatLearningProgress message. Does not implicitly {@link farm.RespMatLearningProgress.verify|verify} messages.\n         * @param m RespMatLearningProgress message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IRespMatLearningProgress, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a RespMatLearningProgress message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns RespMatLearningProgress\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.RespMatLearningProgress;\n\n        /**\n         * Creates a RespMatLearningProgress message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns RespMatLearningProgress\n         */\n        public static fromObject(d: { [k: string]: any }): farm.RespMatLearningProgress;\n\n        /**\n         * Creates a plain object from a RespMatLearningProgress message. Also converts values to other types if specified.\n         * @param m RespMatLearningProgress\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.RespMatLearningProgress, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this RespMatLearningProgress to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a ReqStudyUpload. */\n    interface IReqStudyUpload {\n\n        /** ReqStudyUpload user_id */\n        user_id?: (string|null);\n\n        /** ReqStudyUpload is_skip */\n        is_skip?: (number|Long|null);\n\n        /** ReqStudyUpload study_result */\n        study_result?: (farm.IStudyResult[]|null);\n    }\n\n    /** Represents a ReqStudyUpload. */\n    class ReqStudyUpload implements IReqStudyUpload {\n\n        /**\n         * Constructs a new ReqStudyUpload.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IReqStudyUpload);\n\n        /** ReqStudyUpload user_id. */\n        public user_id: string;\n\n        /** ReqStudyUpload is_skip. */\n        public is_skip: (number|Long);\n\n        /** ReqStudyUpload study_result. */\n        public study_result: farm.IStudyResult[];\n\n        /**\n         * Encodes the specified ReqStudyUpload message. Does not implicitly {@link farm.ReqStudyUpload.verify|verify} messages.\n         * @param m ReqStudyUpload message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IReqStudyUpload, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a ReqStudyUpload message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns ReqStudyUpload\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.ReqStudyUpload;\n\n        /**\n         * Creates a ReqStudyUpload message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns ReqStudyUpload\n         */\n        public static fromObject(d: { [k: string]: any }): farm.ReqStudyUpload;\n\n        /**\n         * Creates a plain object from a ReqStudyUpload message. Also converts values to other types if specified.\n         * @param m ReqStudyUpload\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.ReqStudyUpload, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this ReqStudyUpload to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a RespStudyUpload. */\n    interface IRespStudyUpload {\n\n        /** RespStudyUpload res_list */\n        res_list?: (farm.IRes[]|null);\n    }\n\n    /** Represents a RespStudyUpload. */\n    class RespStudyUpload implements IRespStudyUpload {\n\n        /**\n         * Constructs a new RespStudyUpload.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IRespStudyUpload);\n\n        /** RespStudyUpload res_list. */\n        public res_list: farm.IRes[];\n\n        /**\n         * Encodes the specified RespStudyUpload message. Does not implicitly {@link farm.RespStudyUpload.verify|verify} messages.\n         * @param m RespStudyUpload message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IRespStudyUpload, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a RespStudyUpload message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns RespStudyUpload\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.RespStudyUpload;\n\n        /**\n         * Creates a RespStudyUpload message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns RespStudyUpload\n         */\n        public static fromObject(d: { [k: string]: any }): farm.RespStudyUpload;\n\n        /**\n         * Creates a plain object from a RespStudyUpload message. Also converts values to other types if specified.\n         * @param m RespStudyUpload\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.RespStudyUpload, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this RespStudyUpload to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a StudyResult. */\n    interface IStudyResult {\n\n        /** StudyResult item_id */\n        item_id?: (number|Long|null);\n\n        /** StudyResult result */\n        result?: (number|Long|null);\n\n        /** StudyResult res_type */\n        res_type?: (number|Long|null);\n\n        /** StudyResult res_num */\n        res_num?: (number|Long|null);\n    }\n\n    /** Represents a StudyResult. */\n    class StudyResult implements IStudyResult {\n\n        /**\n         * Constructs a new StudyResult.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IStudyResult);\n\n        /** StudyResult item_id. */\n        public item_id: (number|Long);\n\n        /** StudyResult result. */\n        public result: (number|Long);\n\n        /** StudyResult res_type. */\n        public res_type: (number|Long);\n\n        /** StudyResult res_num. */\n        public res_num: (number|Long);\n\n        /**\n         * Encodes the specified StudyResult message. Does not implicitly {@link farm.StudyResult.verify|verify} messages.\n         * @param m StudyResult message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IStudyResult, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a StudyResult message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns StudyResult\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.StudyResult;\n\n        /**\n         * Creates a StudyResult message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns StudyResult\n         */\n        public static fromObject(d: { [k: string]: any }): farm.StudyResult;\n\n        /**\n         * Creates a plain object from a StudyResult message. Also converts values to other types if specified.\n         * @param m StudyResult\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.StudyResult, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this StudyResult to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a Res. */\n    interface IRes {\n\n        /** Res res_type */\n        res_type?: (number|Long|null);\n\n        /** Res res_num */\n        res_num?: (number|Long|null);\n    }\n\n    /** Represents a Res. */\n    class Res implements IRes {\n\n        /**\n         * Constructs a new Res.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IRes);\n\n        /** Res res_type. */\n        public res_type: (number|Long);\n\n        /** Res res_num. */\n        public res_num: (number|Long);\n\n        /**\n         * Encodes the specified Res message. Does not implicitly {@link farm.Res.verify|verify} messages.\n         * @param m Res message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IRes, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a Res message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns Res\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.Res;\n\n        /**\n         * Creates a Res message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns Res\n         */\n        public static fromObject(d: { [k: string]: any }): farm.Res;\n\n        /**\n         * Creates a plain object from a Res message. Also converts values to other types if specified.\n         * @param m Res\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.Res, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this Res to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a ReqGameUpload. */\n    interface IReqGameUpload {\n\n        /** ReqGameUpload user_id */\n        user_id?: (string|null);\n\n        /** ReqGameUpload start_time */\n        start_time?: (number|Long|null);\n\n        /** ReqGameUpload end_time */\n        end_time?: (number|Long|null);\n\n        /** ReqGameUpload game_result */\n        game_result?: (farm.IGameResult[]|null);\n\n        /** ReqGameUpload mode */\n        mode?: (number|null);\n\n        /** ReqGameUpload mode_param */\n        mode_param?: (string|null);\n\n        /** ReqGameUpload game_type */\n        game_type?: (number|null);\n    }\n\n    /** Represents a ReqGameUpload. */\n    class ReqGameUpload implements IReqGameUpload {\n\n        /**\n         * Constructs a new ReqGameUpload.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IReqGameUpload);\n\n        /** ReqGameUpload user_id. */\n        public user_id: string;\n\n        /** ReqGameUpload start_time. */\n        public start_time: (number|Long);\n\n        /** ReqGameUpload end_time. */\n        public end_time: (number|Long);\n\n        /** ReqGameUpload game_result. */\n        public game_result: farm.IGameResult[];\n\n        /** ReqGameUpload mode. */\n        public mode: number;\n\n        /** ReqGameUpload mode_param. */\n        public mode_param: string;\n\n        /** ReqGameUpload game_type. */\n        public game_type: number;\n\n        /**\n         * Encodes the specified ReqGameUpload message. Does not implicitly {@link farm.ReqGameUpload.verify|verify} messages.\n         * @param m ReqGameUpload message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IReqGameUpload, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a ReqGameUpload message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns ReqGameUpload\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.ReqGameUpload;\n\n        /**\n         * Creates a ReqGameUpload message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns ReqGameUpload\n         */\n        public static fromObject(d: { [k: string]: any }): farm.ReqGameUpload;\n\n        /**\n         * Creates a plain object from a ReqGameUpload message. Also converts values to other types if specified.\n         * @param m ReqGameUpload\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.ReqGameUpload, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this ReqGameUpload to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a RespGameUpload. */\n    interface IRespGameUpload {\n\n        /** RespGameUpload res_list */\n        res_list?: (farm.IRes[]|null);\n\n        /** RespGameUpload game_record */\n        game_record?: (farm.IGameRecord|null);\n\n        /** RespGameUpload mode */\n        mode?: (number|null);\n\n        /** RespGameUpload mode_result */\n        mode_result?: (farm.IModeResult|null);\n\n        /** RespGameUpload tkfight_message */\n        tkfight_message?: (string[]|null);\n\n        /** RespGameUpload tast_completed */\n        tast_completed?: ((number|Long)[]|null);\n\n        /** RespGameUpload play_num */\n        play_num?: (number|Long|null);\n    }\n\n    /** Represents a RespGameUpload. */\n    class RespGameUpload implements IRespGameUpload {\n\n        /**\n         * Constructs a new RespGameUpload.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IRespGameUpload);\n\n        /** RespGameUpload res_list. */\n        public res_list: farm.IRes[];\n\n        /** RespGameUpload game_record. */\n        public game_record?: (farm.IGameRecord|null);\n\n        /** RespGameUpload mode. */\n        public mode: number;\n\n        /** RespGameUpload mode_result. */\n        public mode_result?: (farm.IModeResult|null);\n\n        /** RespGameUpload tkfight_message. */\n        public tkfight_message: string[];\n\n        /** RespGameUpload tast_completed. */\n        public tast_completed: (number|Long)[];\n\n        /** RespGameUpload play_num. */\n        public play_num: (number|Long);\n\n        /**\n         * Encodes the specified RespGameUpload message. Does not implicitly {@link farm.RespGameUpload.verify|verify} messages.\n         * @param m RespGameUpload message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IRespGameUpload, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a RespGameUpload message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns RespGameUpload\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.RespGameUpload;\n\n        /**\n         * Creates a RespGameUpload message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns RespGameUpload\n         */\n        public static fromObject(d: { [k: string]: any }): farm.RespGameUpload;\n\n        /**\n         * Creates a plain object from a RespGameUpload message. Also converts values to other types if specified.\n         * @param m RespGameUpload\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.RespGameUpload, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this RespGameUpload to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a GameResult. */\n    interface IGameResult {\n\n        /** GameResult item_id */\n        item_id?: (number|Long|null);\n\n        /** GameResult result */\n        result?: (number|Long|null);\n\n        /** GameResult res_type */\n        res_type?: (number|Long|null);\n\n        /** GameResult res_num */\n        res_num?: (number|Long|null);\n\n        /** GameResult catch_num */\n        catch_num?: (number|Long|null);\n\n        /** GameResult react_time */\n        react_time?: (number|null);\n\n        /** GameResult is_crit */\n        is_crit?: (number|Long|null);\n    }\n\n    /** Represents a GameResult. */\n    class GameResult implements IGameResult {\n\n        /**\n         * Constructs a new GameResult.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IGameResult);\n\n        /** GameResult item_id. */\n        public item_id: (number|Long);\n\n        /** GameResult result. */\n        public result: (number|Long);\n\n        /** GameResult res_type. */\n        public res_type: (number|Long);\n\n        /** GameResult res_num. */\n        public res_num: (number|Long);\n\n        /** GameResult catch_num. */\n        public catch_num: (number|Long);\n\n        /** GameResult react_time. */\n        public react_time: number;\n\n        /** GameResult is_crit. */\n        public is_crit: (number|Long);\n\n        /**\n         * Encodes the specified GameResult message. Does not implicitly {@link farm.GameResult.verify|verify} messages.\n         * @param m GameResult message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IGameResult, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a GameResult message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns GameResult\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.GameResult;\n\n        /**\n         * Creates a GameResult message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns GameResult\n         */\n        public static fromObject(d: { [k: string]: any }): farm.GameResult;\n\n        /**\n         * Creates a plain object from a GameResult message. Also converts values to other types if specified.\n         * @param m GameResult\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.GameResult, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this GameResult to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a GameRecord. */\n    interface IGameRecord {\n\n        /** GameRecord score */\n        score?: (number|null);\n\n        /** GameRecord wrong_words */\n        wrong_words?: ((number|Long)[]|null);\n\n        /** GameRecord unskillful_words */\n        unskillful_words?: ((number|Long)[]|null);\n\n        /** GameRecord skillful_words */\n        skillful_words?: ((number|Long)[]|null);\n\n        /** GameRecord superskillful_words */\n        superskillful_words?: ((number|Long)[]|null);\n    }\n\n    /** Represents a GameRecord. */\n    class GameRecord implements IGameRecord {\n\n        /**\n         * Constructs a new GameRecord.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IGameRecord);\n\n        /** GameRecord score. */\n        public score: number;\n\n        /** GameRecord wrong_words. */\n        public wrong_words: (number|Long)[];\n\n        /** GameRecord unskillful_words. */\n        public unskillful_words: (number|Long)[];\n\n        /** GameRecord skillful_words. */\n        public skillful_words: (number|Long)[];\n\n        /** GameRecord superskillful_words. */\n        public superskillful_words: (number|Long)[];\n\n        /**\n         * Encodes the specified GameRecord message. Does not implicitly {@link farm.GameRecord.verify|verify} messages.\n         * @param m GameRecord message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IGameRecord, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a GameRecord message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns GameRecord\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.GameRecord;\n\n        /**\n         * Creates a GameRecord message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns GameRecord\n         */\n        public static fromObject(d: { [k: string]: any }): farm.GameRecord;\n\n        /**\n         * Creates a plain object from a GameRecord message. Also converts values to other types if specified.\n         * @param m GameRecord\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.GameRecord, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this GameRecord to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a ModeResult. */\n    interface IModeResult {\n\n        /** ModeResult checkin_id */\n        checkin_id?: (number|Long|null);\n\n        /** ModeResult checkin_state */\n        checkin_state?: (number|null);\n\n        /** ModeResult lesson_state */\n        lesson_state?: (number|null);\n\n        /** ModeResult nickName */\n        nickName?: (string|null);\n\n        /** ModeResult lessonName */\n        lessonName?: (string|null);\n\n        /** ModeResult zeroLeftTime */\n        zeroLeftTime?: (number|null);\n\n        /** ModeResult checkinPushRemark */\n        checkinPushRemark?: (string|null);\n\n        /** ModeResult star_progress */\n        star_progress?: ((number|Long)[]|null);\n    }\n\n    /** Represents a ModeResult. */\n    class ModeResult implements IModeResult {\n\n        /**\n         * Constructs a new ModeResult.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IModeResult);\n\n        /** ModeResult checkin_id. */\n        public checkin_id: (number|Long);\n\n        /** ModeResult checkin_state. */\n        public checkin_state: number;\n\n        /** ModeResult lesson_state. */\n        public lesson_state: number;\n\n        /** ModeResult nickName. */\n        public nickName: string;\n\n        /** ModeResult lessonName. */\n        public lessonName: string;\n\n        /** ModeResult zeroLeftTime. */\n        public zeroLeftTime: number;\n\n        /** ModeResult checkinPushRemark. */\n        public checkinPushRemark: string;\n\n        /** ModeResult star_progress. */\n        public star_progress: (number|Long)[];\n\n        /**\n         * Encodes the specified ModeResult message. Does not implicitly {@link farm.ModeResult.verify|verify} messages.\n         * @param m ModeResult message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IModeResult, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a ModeResult message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns ModeResult\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.ModeResult;\n\n        /**\n         * Creates a ModeResult message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns ModeResult\n         */\n        public static fromObject(d: { [k: string]: any }): farm.ModeResult;\n\n        /**\n         * Creates a plain object from a ModeResult message. Also converts values to other types if specified.\n         * @param m ModeResult\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.ModeResult, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this ModeResult to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of an ExpiredUserLimitConfig. */\n    interface IExpiredUserLimitConfig {\n\n        /** ExpiredUserLimitConfig can_play_unit_ids */\n        can_play_unit_ids?: ((number|Long)[]|null);\n\n        /** ExpiredUserLimitConfig limit_res_count */\n        limit_res_count?: (number|Long|null);\n\n        /** ExpiredUserLimitConfig can_use_checkin */\n        can_use_checkin?: (number|Long|null);\n\n        /** ExpiredUserLimitConfig can_use_spec */\n        can_use_spec?: (number|Long|null);\n    }\n\n    /** Represents an ExpiredUserLimitConfig. */\n    class ExpiredUserLimitConfig implements IExpiredUserLimitConfig {\n\n        /**\n         * Constructs a new ExpiredUserLimitConfig.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IExpiredUserLimitConfig);\n\n        /** ExpiredUserLimitConfig can_play_unit_ids. */\n        public can_play_unit_ids: (number|Long)[];\n\n        /** ExpiredUserLimitConfig limit_res_count. */\n        public limit_res_count: (number|Long);\n\n        /** ExpiredUserLimitConfig can_use_checkin. */\n        public can_use_checkin: (number|Long);\n\n        /** ExpiredUserLimitConfig can_use_spec. */\n        public can_use_spec: (number|Long);\n\n        /**\n         * Encodes the specified ExpiredUserLimitConfig message. Does not implicitly {@link farm.ExpiredUserLimitConfig.verify|verify} messages.\n         * @param m ExpiredUserLimitConfig message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IExpiredUserLimitConfig, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes an ExpiredUserLimitConfig message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns ExpiredUserLimitConfig\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.ExpiredUserLimitConfig;\n\n        /**\n         * Creates an ExpiredUserLimitConfig message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns ExpiredUserLimitConfig\n         */\n        public static fromObject(d: { [k: string]: any }): farm.ExpiredUserLimitConfig;\n\n        /**\n         * Creates a plain object from an ExpiredUserLimitConfig message. Also converts values to other types if specified.\n         * @param m ExpiredUserLimitConfig\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.ExpiredUserLimitConfig, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this ExpiredUserLimitConfig to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** GameType enum. */\n    enum GameType {\n        GameTypeNormal = 0,\n        GameType1 = 1,\n        GameType2 = 2,\n        GameType3 = 3,\n        GameType4 = 4\n    }\n\n    /** Properties of a WordItemInfo. */\n    interface IWordItemInfo {\n\n        /** WordItemInfo id */\n        id?: (number|Long|null);\n\n        /** WordItemInfo grade_id */\n        grade_id?: (number|Long|null);\n\n        /** WordItemInfo unit_id */\n        unit_id?: (number|Long|null);\n\n        /** WordItemInfo type */\n        type?: (number|Long|null);\n\n        /** WordItemInfo unit_index */\n        unit_index?: (number|Long|null);\n\n        /** WordItemInfo cn */\n        cn?: (string|null);\n\n        /** WordItemInfo en */\n        en?: (string|null);\n    }\n\n    /** Represents a WordItemInfo. */\n    class WordItemInfo implements IWordItemInfo {\n\n        /**\n         * Constructs a new WordItemInfo.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IWordItemInfo);\n\n        /** WordItemInfo id. */\n        public id: (number|Long);\n\n        /** WordItemInfo grade_id. */\n        public grade_id: (number|Long);\n\n        /** WordItemInfo unit_id. */\n        public unit_id: (number|Long);\n\n        /** WordItemInfo type. */\n        public type: (number|Long);\n\n        /** WordItemInfo unit_index. */\n        public unit_index: (number|Long);\n\n        /** WordItemInfo cn. */\n        public cn: string;\n\n        /** WordItemInfo en. */\n        public en: string;\n\n        /**\n         * Encodes the specified WordItemInfo message. Does not implicitly {@link farm.WordItemInfo.verify|verify} messages.\n         * @param m WordItemInfo message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IWordItemInfo, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a WordItemInfo message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns WordItemInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.WordItemInfo;\n\n        /**\n         * Creates a WordItemInfo message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns WordItemInfo\n         */\n        public static fromObject(d: { [k: string]: any }): farm.WordItemInfo;\n\n        /**\n         * Creates a plain object from a WordItemInfo message. Also converts values to other types if specified.\n         * @param m WordItemInfo\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.WordItemInfo, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this WordItemInfo to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a GradeLearningProgress. */\n    interface IGradeLearningProgress {\n\n        /** GradeLearningProgress GradeID */\n        GradeID?: (number|Long|null);\n\n        /** GradeLearningProgress Star */\n        Star?: (number|Long|null);\n    }\n\n    /** Represents a GradeLearningProgress. */\n    class GradeLearningProgress implements IGradeLearningProgress {\n\n        /**\n         * Constructs a new GradeLearningProgress.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IGradeLearningProgress);\n\n        /** GradeLearningProgress GradeID. */\n        public GradeID: (number|Long);\n\n        /** GradeLearningProgress Star. */\n        public Star: (number|Long);\n\n        /**\n         * Encodes the specified GradeLearningProgress message. Does not implicitly {@link farm.GradeLearningProgress.verify|verify} messages.\n         * @param m GradeLearningProgress message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IGradeLearningProgress, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a GradeLearningProgress message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns GradeLearningProgress\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.GradeLearningProgress;\n\n        /**\n         * Creates a GradeLearningProgress message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns GradeLearningProgress\n         */\n        public static fromObject(d: { [k: string]: any }): farm.GradeLearningProgress;\n\n        /**\n         * Creates a plain object from a GradeLearningProgress message. Also converts values to other types if specified.\n         * @param m GradeLearningProgress\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.GradeLearningProgress, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this GradeLearningProgress to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of an UnitLearningProgress. */\n    interface IUnitLearningProgress {\n\n        /** UnitLearningProgress UnitID */\n        UnitID?: (number|Long|null);\n\n        /** UnitLearningProgress GamesLearningProgress */\n        GamesLearningProgress?: ({ [k: string]: farm.IGameTypeLearningProgress }|null);\n    }\n\n    /** Represents an UnitLearningProgress. */\n    class UnitLearningProgress implements IUnitLearningProgress {\n\n        /**\n         * Constructs a new UnitLearningProgress.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IUnitLearningProgress);\n\n        /** UnitLearningProgress UnitID. */\n        public UnitID: (number|Long);\n\n        /** UnitLearningProgress GamesLearningProgress. */\n        public GamesLearningProgress: { [k: string]: farm.IGameTypeLearningProgress };\n\n        /**\n         * Encodes the specified UnitLearningProgress message. Does not implicitly {@link farm.UnitLearningProgress.verify|verify} messages.\n         * @param m UnitLearningProgress message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IUnitLearningProgress, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes an UnitLearningProgress message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns UnitLearningProgress\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.UnitLearningProgress;\n\n        /**\n         * Creates an UnitLearningProgress message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns UnitLearningProgress\n         */\n        public static fromObject(d: { [k: string]: any }): farm.UnitLearningProgress;\n\n        /**\n         * Creates a plain object from an UnitLearningProgress message. Also converts values to other types if specified.\n         * @param m UnitLearningProgress\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.UnitLearningProgress, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this UnitLearningProgress to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a GameTypeLearningProgress. */\n    interface IGameTypeLearningProgress {\n\n        /** GameTypeLearningProgress GameType */\n        GameType?: (farm.GameType|null);\n\n        /** GameTypeLearningProgress star */\n        star?: (number|Long|null);\n\n        /** GameTypeLearningProgress HistoryMaxScore */\n        HistoryMaxScore?: (number|null);\n    }\n\n    /** Represents a GameTypeLearningProgress. */\n    class GameTypeLearningProgress implements IGameTypeLearningProgress {\n\n        /**\n         * Constructs a new GameTypeLearningProgress.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IGameTypeLearningProgress);\n\n        /** GameTypeLearningProgress GameType. */\n        public GameType: farm.GameType;\n\n        /** GameTypeLearningProgress star. */\n        public star: (number|Long);\n\n        /** GameTypeLearningProgress HistoryMaxScore. */\n        public HistoryMaxScore: number;\n\n        /**\n         * Encodes the specified GameTypeLearningProgress message. Does not implicitly {@link farm.GameTypeLearningProgress.verify|verify} messages.\n         * @param m GameTypeLearningProgress message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IGameTypeLearningProgress, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a GameTypeLearningProgress message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns GameTypeLearningProgress\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.GameTypeLearningProgress;\n\n        /**\n         * Creates a GameTypeLearningProgress message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns GameTypeLearningProgress\n         */\n        public static fromObject(d: { [k: string]: any }): farm.GameTypeLearningProgress;\n\n        /**\n         * Creates a plain object from a GameTypeLearningProgress message. Also converts values to other types if specified.\n         * @param m GameTypeLearningProgress\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.GameTypeLearningProgress, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this GameTypeLearningProgress to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a ReqMaterials. */\n    interface IReqMaterials {\n\n        /** ReqMaterials user_id */\n        user_id?: (number|Long|null);\n    }\n\n    /** Represents a ReqMaterials. */\n    class ReqMaterials implements IReqMaterials {\n\n        /**\n         * Constructs a new ReqMaterials.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IReqMaterials);\n\n        /** ReqMaterials user_id. */\n        public user_id: (number|Long);\n\n        /**\n         * Encodes the specified ReqMaterials message. Does not implicitly {@link farm.ReqMaterials.verify|verify} messages.\n         * @param m ReqMaterials message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IReqMaterials, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a ReqMaterials message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns ReqMaterials\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.ReqMaterials;\n\n        /**\n         * Creates a ReqMaterials message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns ReqMaterials\n         */\n        public static fromObject(d: { [k: string]: any }): farm.ReqMaterials;\n\n        /**\n         * Creates a plain object from a ReqMaterials message. Also converts values to other types if specified.\n         * @param m ReqMaterials\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.ReqMaterials, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this ReqMaterials to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a RespMaterials. */\n    interface IRespMaterials {\n\n        /** RespMaterials Mats */\n        Mats?: (farm.IMaterialItem[]|null);\n    }\n\n    /** Represents a RespMaterials. */\n    class RespMaterials implements IRespMaterials {\n\n        /**\n         * Constructs a new RespMaterials.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IRespMaterials);\n\n        /** RespMaterials Mats. */\n        public Mats: farm.IMaterialItem[];\n\n        /**\n         * Encodes the specified RespMaterials message. Does not implicitly {@link farm.RespMaterials.verify|verify} messages.\n         * @param m RespMaterials message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IRespMaterials, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a RespMaterials message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns RespMaterials\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.RespMaterials;\n\n        /**\n         * Creates a RespMaterials message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns RespMaterials\n         */\n        public static fromObject(d: { [k: string]: any }): farm.RespMaterials;\n\n        /**\n         * Creates a plain object from a RespMaterials message. Also converts values to other types if specified.\n         * @param m RespMaterials\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.RespMaterials, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this RespMaterials to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a MaterialItem. */\n    interface IMaterialItem {\n\n        /** MaterialItem mat_id */\n        mat_id?: (number|Long|null);\n\n        /** MaterialItem mat_name */\n        mat_name?: (string|null);\n    }\n\n    /** Represents a MaterialItem. */\n    class MaterialItem implements IMaterialItem {\n\n        /**\n         * Constructs a new MaterialItem.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IMaterialItem);\n\n        /** MaterialItem mat_id. */\n        public mat_id: (number|Long);\n\n        /** MaterialItem mat_name. */\n        public mat_name: string;\n\n        /**\n         * Encodes the specified MaterialItem message. Does not implicitly {@link farm.MaterialItem.verify|verify} messages.\n         * @param m MaterialItem message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IMaterialItem, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a MaterialItem message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns MaterialItem\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.MaterialItem;\n\n        /**\n         * Creates a MaterialItem message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns MaterialItem\n         */\n        public static fromObject(d: { [k: string]: any }): farm.MaterialItem;\n\n        /**\n         * Creates a plain object from a MaterialItem message. Also converts values to other types if specified.\n         * @param m MaterialItem\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.MaterialItem, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this MaterialItem to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a ReqUpdateMat. */\n    interface IReqUpdateMat {\n\n        /** ReqUpdateMat uid_id */\n        uid_id?: (number|Long|null);\n\n        /** ReqUpdateMat mat_id */\n        mat_id?: (number|Long|null);\n    }\n\n    /** Represents a ReqUpdateMat. */\n    class ReqUpdateMat implements IReqUpdateMat {\n\n        /**\n         * Constructs a new ReqUpdateMat.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IReqUpdateMat);\n\n        /** ReqUpdateMat uid_id. */\n        public uid_id: (number|Long);\n\n        /** ReqUpdateMat mat_id. */\n        public mat_id: (number|Long);\n\n        /**\n         * Encodes the specified ReqUpdateMat message. Does not implicitly {@link farm.ReqUpdateMat.verify|verify} messages.\n         * @param m ReqUpdateMat message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IReqUpdateMat, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a ReqUpdateMat message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns ReqUpdateMat\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.ReqUpdateMat;\n\n        /**\n         * Creates a ReqUpdateMat message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns ReqUpdateMat\n         */\n        public static fromObject(d: { [k: string]: any }): farm.ReqUpdateMat;\n\n        /**\n         * Creates a plain object from a ReqUpdateMat message. Also converts values to other types if specified.\n         * @param m ReqUpdateMat\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.ReqUpdateMat, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this ReqUpdateMat to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a RespUpdateMat. */\n    interface IRespUpdateMat {\n\n        /** RespUpdateMat mat_id */\n        mat_id?: (number|Long|null);\n\n        /** RespUpdateMat last_study */\n        last_study?: ((number|Long)[]|null);\n    }\n\n    /** Represents a RespUpdateMat. */\n    class RespUpdateMat implements IRespUpdateMat {\n\n        /**\n         * Constructs a new RespUpdateMat.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IRespUpdateMat);\n\n        /** RespUpdateMat mat_id. */\n        public mat_id: (number|Long);\n\n        /** RespUpdateMat last_study. */\n        public last_study: (number|Long)[];\n\n        /**\n         * Encodes the specified RespUpdateMat message. Does not implicitly {@link farm.RespUpdateMat.verify|verify} messages.\n         * @param m RespUpdateMat message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IRespUpdateMat, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a RespUpdateMat message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns RespUpdateMat\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.RespUpdateMat;\n\n        /**\n         * Creates a RespUpdateMat message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns RespUpdateMat\n         */\n        public static fromObject(d: { [k: string]: any }): farm.RespUpdateMat;\n\n        /**\n         * Creates a plain object from a RespUpdateMat message. Also converts values to other types if specified.\n         * @param m RespUpdateMat\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.RespUpdateMat, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this RespUpdateMat to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a Pos. */\n    interface IPos {\n\n        /** Pos x */\n        x?: (number|null);\n\n        /** Pos y */\n        y?: (number|null);\n    }\n\n    /** Represents a Pos. */\n    class Pos implements IPos {\n\n        /**\n         * Constructs a new Pos.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IPos);\n\n        /** Pos x. */\n        public x: number;\n\n        /** Pos y. */\n        public y: number;\n\n        /**\n         * Encodes the specified Pos message. Does not implicitly {@link farm.Pos.verify|verify} messages.\n         * @param m Pos message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IPos, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a Pos message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns Pos\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.Pos;\n\n        /**\n         * Creates a Pos message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns Pos\n         */\n        public static fromObject(d: { [k: string]: any }): farm.Pos;\n\n        /**\n         * Creates a plain object from a Pos message. Also converts values to other types if specified.\n         * @param m Pos\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.Pos, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this Pos to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** BuildingStateType enum. */\n    enum BuildingStateType {\n        Invalid = 0,\n        Building = 1,\n        Upgrading = 2,\n        PreComplete = 3,\n        Normal = 4,\n        Abandoned = 5,\n        Lock = 6\n    }\n\n    /** CropStateType enum. */\n    enum CropStateType {\n        NotExist = 0,\n        Seedling = 1,\n        SmallLeaf = 2,\n        LargeLeaf = 3,\n        Mature = 4\n    }\n\n    /** ArableLandStateType enum. */\n    enum ArableLandStateType {\n        Space = 0,\n        Using = 1\n    }\n\n    /** MailType enum. */\n    enum MailType {\n        SYS = 0,\n        NPC = 1,\n        Player = 2\n    }\n\n    /** MailState enum. */\n    enum MailState {\n        No_Read = 0,\n        Read = 1\n    }\n\n    /** MailTapType enum. */\n    enum MailTapType {\n        Notification = 0,\n        Annexes = 1\n    }\n\n    /** AnnexState enum. */\n    enum AnnexState {\n        No_Receive = 0,\n        Received = 1\n    }\n\n    /** CurrencyType enum. */\n    enum CurrencyType {\n        CNothing = 0,\n        CGold = 1,\n        CCrystal = 2,\n        CLove = 3\n    }\n\n    /** UnlockConditionType enum. */\n    enum UnlockConditionType {\n        Nothing = 0,\n        Love = 1,\n        Gold = 2,\n        Task = 3,\n        Prop = 4,\n        ManorHeart = 5,\n        Level = 6,\n        Crystal = 7\n    }\n\n    /** Properties of a BuildingItem. */\n    interface IBuildingItem {\n\n        /** BuildingItem id */\n        id?: (number|Long|null);\n\n        /** BuildingItem configID */\n        configID?: (number|null);\n\n        /** BuildingItem level */\n        level?: (number|null);\n\n        /** BuildingItem rotated */\n        rotated?: (boolean|null);\n\n        /** BuildingItem pos */\n        pos?: (farm.IPos|null);\n\n        /** BuildingItem state */\n        state?: (farm.BuildingStateType|null);\n\n        /** BuildingItem leftDur */\n        leftDur?: (number|null);\n    }\n\n    /** Represents a BuildingItem. */\n    class BuildingItem implements IBuildingItem {\n\n        /**\n         * Constructs a new BuildingItem.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IBuildingItem);\n\n        /** BuildingItem id. */\n        public id: (number|Long);\n\n        /** BuildingItem configID. */\n        public configID: number;\n\n        /** BuildingItem level. */\n        public level: number;\n\n        /** BuildingItem rotated. */\n        public rotated: boolean;\n\n        /** BuildingItem pos. */\n        public pos?: (farm.IPos|null);\n\n        /** BuildingItem state. */\n        public state: farm.BuildingStateType;\n\n        /** BuildingItem leftDur. */\n        public leftDur: number;\n\n        /**\n         * Encodes the specified BuildingItem message. Does not implicitly {@link farm.BuildingItem.verify|verify} messages.\n         * @param m BuildingItem message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IBuildingItem, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a BuildingItem message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns BuildingItem\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.BuildingItem;\n\n        /**\n         * Creates a BuildingItem message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns BuildingItem\n         */\n        public static fromObject(d: { [k: string]: any }): farm.BuildingItem;\n\n        /**\n         * Creates a plain object from a BuildingItem message. Also converts values to other types if specified.\n         * @param m BuildingItem\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.BuildingItem, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this BuildingItem to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a ReqBuildingList. */\n    interface IReqBuildingList {\n    }\n\n    /** Represents a ReqBuildingList. */\n    class ReqBuildingList implements IReqBuildingList {\n\n        /**\n         * Constructs a new ReqBuildingList.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IReqBuildingList);\n\n        /**\n         * Encodes the specified ReqBuildingList message. Does not implicitly {@link farm.ReqBuildingList.verify|verify} messages.\n         * @param m ReqBuildingList message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IReqBuildingList, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a ReqBuildingList message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns ReqBuildingList\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.ReqBuildingList;\n\n        /**\n         * Creates a ReqBuildingList message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns ReqBuildingList\n         */\n        public static fromObject(d: { [k: string]: any }): farm.ReqBuildingList;\n\n        /**\n         * Creates a plain object from a ReqBuildingList message. Also converts values to other types if specified.\n         * @param m ReqBuildingList\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.ReqBuildingList, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this ReqBuildingList to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a RespBuildingList. */\n    interface IRespBuildingList {\n\n        /** RespBuildingList buildings */\n        buildings?: (farm.IBuildingItem[]|null);\n    }\n\n    /** Represents a RespBuildingList. */\n    class RespBuildingList implements IRespBuildingList {\n\n        /**\n         * Constructs a new RespBuildingList.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IRespBuildingList);\n\n        /** RespBuildingList buildings. */\n        public buildings: farm.IBuildingItem[];\n\n        /**\n         * Encodes the specified RespBuildingList message. Does not implicitly {@link farm.RespBuildingList.verify|verify} messages.\n         * @param m RespBuildingList message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IRespBuildingList, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a RespBuildingList message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns RespBuildingList\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.RespBuildingList;\n\n        /**\n         * Creates a RespBuildingList message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns RespBuildingList\n         */\n        public static fromObject(d: { [k: string]: any }): farm.RespBuildingList;\n\n        /**\n         * Creates a plain object from a RespBuildingList message. Also converts values to other types if specified.\n         * @param m RespBuildingList\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.RespBuildingList, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this RespBuildingList to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a ReqCanBuildBuildingList. */\n    interface IReqCanBuildBuildingList {\n    }\n\n    /** Represents a ReqCanBuildBuildingList. */\n    class ReqCanBuildBuildingList implements IReqCanBuildBuildingList {\n\n        /**\n         * Constructs a new ReqCanBuildBuildingList.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IReqCanBuildBuildingList);\n\n        /**\n         * Encodes the specified ReqCanBuildBuildingList message. Does not implicitly {@link farm.ReqCanBuildBuildingList.verify|verify} messages.\n         * @param m ReqCanBuildBuildingList message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IReqCanBuildBuildingList, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a ReqCanBuildBuildingList message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns ReqCanBuildBuildingList\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.ReqCanBuildBuildingList;\n\n        /**\n         * Creates a ReqCanBuildBuildingList message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns ReqCanBuildBuildingList\n         */\n        public static fromObject(d: { [k: string]: any }): farm.ReqCanBuildBuildingList;\n\n        /**\n         * Creates a plain object from a ReqCanBuildBuildingList message. Also converts values to other types if specified.\n         * @param m ReqCanBuildBuildingList\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.ReqCanBuildBuildingList, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this ReqCanBuildBuildingList to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a RespCanBuildBuildingList. */\n    interface IRespCanBuildBuildingList {\n\n        /** RespCanBuildBuildingList buildingConfigIds */\n        buildingConfigIds?: (number[]|null);\n    }\n\n    /** Represents a RespCanBuildBuildingList. */\n    class RespCanBuildBuildingList implements IRespCanBuildBuildingList {\n\n        /**\n         * Constructs a new RespCanBuildBuildingList.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IRespCanBuildBuildingList);\n\n        /** RespCanBuildBuildingList buildingConfigIds. */\n        public buildingConfigIds: number[];\n\n        /**\n         * Encodes the specified RespCanBuildBuildingList message. Does not implicitly {@link farm.RespCanBuildBuildingList.verify|verify} messages.\n         * @param m RespCanBuildBuildingList message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IRespCanBuildBuildingList, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a RespCanBuildBuildingList message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns RespCanBuildBuildingList\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.RespCanBuildBuildingList;\n\n        /**\n         * Creates a RespCanBuildBuildingList message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns RespCanBuildBuildingList\n         */\n        public static fromObject(d: { [k: string]: any }): farm.RespCanBuildBuildingList;\n\n        /**\n         * Creates a plain object from a RespCanBuildBuildingList message. Also converts values to other types if specified.\n         * @param m RespCanBuildBuildingList\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.RespCanBuildBuildingList, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this RespCanBuildBuildingList to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a ReqBuild. */\n    interface IReqBuild {\n\n        /** ReqBuild configID */\n        configID?: (number|null);\n\n        /** ReqBuild rotated */\n        rotated?: (boolean|null);\n\n        /** ReqBuild pos */\n        pos?: (farm.IPos|null);\n    }\n\n    /** Represents a ReqBuild. */\n    class ReqBuild implements IReqBuild {\n\n        /**\n         * Constructs a new ReqBuild.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IReqBuild);\n\n        /** ReqBuild configID. */\n        public configID: number;\n\n        /** ReqBuild rotated. */\n        public rotated: boolean;\n\n        /** ReqBuild pos. */\n        public pos?: (farm.IPos|null);\n\n        /**\n         * Encodes the specified ReqBuild message. Does not implicitly {@link farm.ReqBuild.verify|verify} messages.\n         * @param m ReqBuild message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IReqBuild, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a ReqBuild message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns ReqBuild\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.ReqBuild;\n\n        /**\n         * Creates a ReqBuild message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns ReqBuild\n         */\n        public static fromObject(d: { [k: string]: any }): farm.ReqBuild;\n\n        /**\n         * Creates a plain object from a ReqBuild message. Also converts values to other types if specified.\n         * @param m ReqBuild\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.ReqBuild, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this ReqBuild to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a ReqById. */\n    interface IReqById {\n\n        /** ReqById id */\n        id?: (number|Long|null);\n    }\n\n    /** Represents a ReqById. */\n    class ReqById implements IReqById {\n\n        /**\n         * Constructs a new ReqById.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IReqById);\n\n        /** ReqById id. */\n        public id: (number|Long);\n\n        /**\n         * Encodes the specified ReqById message. Does not implicitly {@link farm.ReqById.verify|verify} messages.\n         * @param m ReqById message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IReqById, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a ReqById message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns ReqById\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.ReqById;\n\n        /**\n         * Creates a ReqById message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns ReqById\n         */\n        public static fromObject(d: { [k: string]: any }): farm.ReqById;\n\n        /**\n         * Creates a plain object from a ReqById message. Also converts values to other types if specified.\n         * @param m ReqById\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.ReqById, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this ReqById to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a MessageBuildingStateChanged. */\n    interface IMessageBuildingStateChanged {\n\n        /** MessageBuildingStateChanged id */\n        id?: (number|Long|null);\n\n        /** MessageBuildingStateChanged state */\n        state?: (farm.BuildingStateType|null);\n    }\n\n    /** Represents a MessageBuildingStateChanged. */\n    class MessageBuildingStateChanged implements IMessageBuildingStateChanged {\n\n        /**\n         * Constructs a new MessageBuildingStateChanged.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IMessageBuildingStateChanged);\n\n        /** MessageBuildingStateChanged id. */\n        public id: (number|Long);\n\n        /** MessageBuildingStateChanged state. */\n        public state: farm.BuildingStateType;\n\n        /**\n         * Encodes the specified MessageBuildingStateChanged message. Does not implicitly {@link farm.MessageBuildingStateChanged.verify|verify} messages.\n         * @param m MessageBuildingStateChanged message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IMessageBuildingStateChanged, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a MessageBuildingStateChanged message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns MessageBuildingStateChanged\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.MessageBuildingStateChanged;\n\n        /**\n         * Creates a MessageBuildingStateChanged message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns MessageBuildingStateChanged\n         */\n        public static fromObject(d: { [k: string]: any }): farm.MessageBuildingStateChanged;\n\n        /**\n         * Creates a plain object from a MessageBuildingStateChanged message. Also converts values to other types if specified.\n         * @param m MessageBuildingStateChanged\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.MessageBuildingStateChanged, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this MessageBuildingStateChanged to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a MessageCurrencyStateChanged. */\n    interface IMessageCurrencyStateChanged {\n\n        /** MessageCurrencyStateChanged coin */\n        coin?: (number|null);\n\n        /** MessageCurrencyStateChanged crystal */\n        crystal?: (number|null);\n\n        /** MessageCurrencyStateChanged heart */\n        heart?: (number|null);\n    }\n\n    /** Represents a MessageCurrencyStateChanged. */\n    class MessageCurrencyStateChanged implements IMessageCurrencyStateChanged {\n\n        /**\n         * Constructs a new MessageCurrencyStateChanged.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IMessageCurrencyStateChanged);\n\n        /** MessageCurrencyStateChanged coin. */\n        public coin: number;\n\n        /** MessageCurrencyStateChanged crystal. */\n        public crystal: number;\n\n        /** MessageCurrencyStateChanged heart. */\n        public heart: number;\n\n        /**\n         * Encodes the specified MessageCurrencyStateChanged message. Does not implicitly {@link farm.MessageCurrencyStateChanged.verify|verify} messages.\n         * @param m MessageCurrencyStateChanged message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IMessageCurrencyStateChanged, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a MessageCurrencyStateChanged message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns MessageCurrencyStateChanged\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.MessageCurrencyStateChanged;\n\n        /**\n         * Creates a MessageCurrencyStateChanged message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns MessageCurrencyStateChanged\n         */\n        public static fromObject(d: { [k: string]: any }): farm.MessageCurrencyStateChanged;\n\n        /**\n         * Creates a plain object from a MessageCurrencyStateChanged message. Also converts values to other types if specified.\n         * @param m MessageCurrencyStateChanged\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.MessageCurrencyStateChanged, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this MessageCurrencyStateChanged to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a ReqEditBuilding. */\n    interface IReqEditBuilding {\n\n        /** ReqEditBuilding id */\n        id?: (number|Long|null);\n\n        /** ReqEditBuilding rotated */\n        rotated?: (boolean|null);\n\n        /** ReqEditBuilding pos */\n        pos?: (farm.IPos|null);\n    }\n\n    /** Represents a ReqEditBuilding. */\n    class ReqEditBuilding implements IReqEditBuilding {\n\n        /**\n         * Constructs a new ReqEditBuilding.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IReqEditBuilding);\n\n        /** ReqEditBuilding id. */\n        public id: (number|Long);\n\n        /** ReqEditBuilding rotated. */\n        public rotated: boolean;\n\n        /** ReqEditBuilding pos. */\n        public pos?: (farm.IPos|null);\n\n        /**\n         * Encodes the specified ReqEditBuilding message. Does not implicitly {@link farm.ReqEditBuilding.verify|verify} messages.\n         * @param m ReqEditBuilding message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IReqEditBuilding, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a ReqEditBuilding message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns ReqEditBuilding\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.ReqEditBuilding;\n\n        /**\n         * Creates a ReqEditBuilding message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns ReqEditBuilding\n         */\n        public static fromObject(d: { [k: string]: any }): farm.ReqEditBuilding;\n\n        /**\n         * Creates a plain object from a ReqEditBuilding message. Also converts values to other types if specified.\n         * @param m ReqEditBuilding\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.ReqEditBuilding, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this ReqEditBuilding to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a RespRecovery. */\n    interface IRespRecovery {\n\n        /** RespRecovery id */\n        id?: (number|Long|null);\n\n        /** RespRecovery tkCrystalLeft */\n        tkCrystalLeft?: (number|null);\n    }\n\n    /** Represents a RespRecovery. */\n    class RespRecovery implements IRespRecovery {\n\n        /**\n         * Constructs a new RespRecovery.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IRespRecovery);\n\n        /** RespRecovery id. */\n        public id: (number|Long);\n\n        /** RespRecovery tkCrystalLeft. */\n        public tkCrystalLeft: number;\n\n        /**\n         * Encodes the specified RespRecovery message. Does not implicitly {@link farm.RespRecovery.verify|verify} messages.\n         * @param m RespRecovery message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IRespRecovery, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a RespRecovery message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns RespRecovery\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.RespRecovery;\n\n        /**\n         * Creates a RespRecovery message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns RespRecovery\n         */\n        public static fromObject(d: { [k: string]: any }): farm.RespRecovery;\n\n        /**\n         * Creates a plain object from a RespRecovery message. Also converts values to other types if specified.\n         * @param m RespRecovery\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.RespRecovery, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this RespRecovery to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a RespCompleteImm. */\n    interface IRespCompleteImm {\n\n        /** RespCompleteImm id */\n        id?: (number|Long|null);\n\n        /** RespCompleteImm tkCrystalLeft */\n        tkCrystalLeft?: (number|null);\n    }\n\n    /** Represents a RespCompleteImm. */\n    class RespCompleteImm implements IRespCompleteImm {\n\n        /**\n         * Constructs a new RespCompleteImm.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IRespCompleteImm);\n\n        /** RespCompleteImm id. */\n        public id: (number|Long);\n\n        /** RespCompleteImm tkCrystalLeft. */\n        public tkCrystalLeft: number;\n\n        /**\n         * Encodes the specified RespCompleteImm message. Does not implicitly {@link farm.RespCompleteImm.verify|verify} messages.\n         * @param m RespCompleteImm message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IRespCompleteImm, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a RespCompleteImm message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns RespCompleteImm\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.RespCompleteImm;\n\n        /**\n         * Creates a RespCompleteImm message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns RespCompleteImm\n         */\n        public static fromObject(d: { [k: string]: any }): farm.RespCompleteImm;\n\n        /**\n         * Creates a plain object from a RespCompleteImm message. Also converts values to other types if specified.\n         * @param m RespCompleteImm\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.RespCompleteImm, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this RespCompleteImm to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a ReqNoBodyParam. */\n    interface IReqNoBodyParam {\n    }\n\n    /** Represents a ReqNoBodyParam. */\n    class ReqNoBodyParam implements IReqNoBodyParam {\n\n        /**\n         * Constructs a new ReqNoBodyParam.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IReqNoBodyParam);\n\n        /**\n         * Encodes the specified ReqNoBodyParam message. Does not implicitly {@link farm.ReqNoBodyParam.verify|verify} messages.\n         * @param m ReqNoBodyParam message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IReqNoBodyParam, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a ReqNoBodyParam message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns ReqNoBodyParam\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.ReqNoBodyParam;\n\n        /**\n         * Creates a ReqNoBodyParam message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns ReqNoBodyParam\n         */\n        public static fromObject(d: { [k: string]: any }): farm.ReqNoBodyParam;\n\n        /**\n         * Creates a plain object from a ReqNoBodyParam message. Also converts values to other types if specified.\n         * @param m ReqNoBodyParam\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.ReqNoBodyParam, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this ReqNoBodyParam to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a RespNoBodyParam. */\n    interface IRespNoBodyParam {\n    }\n\n    /** Represents a RespNoBodyParam. */\n    class RespNoBodyParam implements IRespNoBodyParam {\n\n        /**\n         * Constructs a new RespNoBodyParam.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IRespNoBodyParam);\n\n        /**\n         * Encodes the specified RespNoBodyParam message. Does not implicitly {@link farm.RespNoBodyParam.verify|verify} messages.\n         * @param m RespNoBodyParam message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IRespNoBodyParam, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a RespNoBodyParam message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns RespNoBodyParam\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.RespNoBodyParam;\n\n        /**\n         * Creates a RespNoBodyParam message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns RespNoBodyParam\n         */\n        public static fromObject(d: { [k: string]: any }): farm.RespNoBodyParam;\n\n        /**\n         * Creates a plain object from a RespNoBodyParam message. Also converts values to other types if specified.\n         * @param m RespNoBodyParam\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.RespNoBodyParam, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this RespNoBodyParam to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a RespManorHeartInfo. */\n    interface IRespManorHeartInfo {\n\n        /** RespManorHeartInfo id */\n        id?: (number|Long|null);\n\n        /** RespManorHeartInfo nike_name */\n        nike_name?: (string|null);\n\n        /** RespManorHeartInfo user_code */\n        user_code?: (string|null);\n\n        /** RespManorHeartInfo tk_gold */\n        tk_gold?: (number|Long|null);\n\n        /** RespManorHeartInfo tk_love */\n        tk_love?: (number|Long|null);\n\n        /** RespManorHeartInfo tk_crystal */\n        tk_crystal?: (number|Long|null);\n\n        /** RespManorHeartInfo avatar_id */\n        avatar_id?: (number|null);\n\n        /** RespManorHeartInfo buildings */\n        buildings?: (farm.IManorHeartBuildingListItem[]|null);\n    }\n\n    /** Represents a RespManorHeartInfo. */\n    class RespManorHeartInfo implements IRespManorHeartInfo {\n\n        /**\n         * Constructs a new RespManorHeartInfo.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IRespManorHeartInfo);\n\n        /** RespManorHeartInfo id. */\n        public id: (number|Long);\n\n        /** RespManorHeartInfo nike_name. */\n        public nike_name: string;\n\n        /** RespManorHeartInfo user_code. */\n        public user_code: string;\n\n        /** RespManorHeartInfo tk_gold. */\n        public tk_gold: (number|Long);\n\n        /** RespManorHeartInfo tk_love. */\n        public tk_love: (number|Long);\n\n        /** RespManorHeartInfo tk_crystal. */\n        public tk_crystal: (number|Long);\n\n        /** RespManorHeartInfo avatar_id. */\n        public avatar_id: number;\n\n        /** RespManorHeartInfo buildings. */\n        public buildings: farm.IManorHeartBuildingListItem[];\n\n        /**\n         * Encodes the specified RespManorHeartInfo message. Does not implicitly {@link farm.RespManorHeartInfo.verify|verify} messages.\n         * @param m RespManorHeartInfo message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IRespManorHeartInfo, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a RespManorHeartInfo message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns RespManorHeartInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.RespManorHeartInfo;\n\n        /**\n         * Creates a RespManorHeartInfo message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns RespManorHeartInfo\n         */\n        public static fromObject(d: { [k: string]: any }): farm.RespManorHeartInfo;\n\n        /**\n         * Creates a plain object from a RespManorHeartInfo message. Also converts values to other types if specified.\n         * @param m RespManorHeartInfo\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.RespManorHeartInfo, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this RespManorHeartInfo to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a ManorHeartBuildingListItem. */\n    interface IManorHeartBuildingListItem {\n\n        /** ManorHeartBuildingListItem id */\n        id?: (number|Long|null);\n\n        /** ManorHeartBuildingListItem configID */\n        configID?: (number|null);\n    }\n\n    /** Represents a ManorHeartBuildingListItem. */\n    class ManorHeartBuildingListItem implements IManorHeartBuildingListItem {\n\n        /**\n         * Constructs a new ManorHeartBuildingListItem.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IManorHeartBuildingListItem);\n\n        /** ManorHeartBuildingListItem id. */\n        public id: (number|Long);\n\n        /** ManorHeartBuildingListItem configID. */\n        public configID: number;\n\n        /**\n         * Encodes the specified ManorHeartBuildingListItem message. Does not implicitly {@link farm.ManorHeartBuildingListItem.verify|verify} messages.\n         * @param m ManorHeartBuildingListItem message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IManorHeartBuildingListItem, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a ManorHeartBuildingListItem message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns ManorHeartBuildingListItem\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.ManorHeartBuildingListItem;\n\n        /**\n         * Creates a ManorHeartBuildingListItem message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns ManorHeartBuildingListItem\n         */\n        public static fromObject(d: { [k: string]: any }): farm.ManorHeartBuildingListItem;\n\n        /**\n         * Creates a plain object from a ManorHeartBuildingListItem message. Also converts values to other types if specified.\n         * @param m ManorHeartBuildingListItem\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.ManorHeartBuildingListItem, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this ManorHeartBuildingListItem to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a RespUserAvatars. */\n    interface IRespUserAvatars {\n\n        /** RespUserAvatars avatarIds */\n        avatarIds?: (number[]|null);\n    }\n\n    /** Represents a RespUserAvatars. */\n    class RespUserAvatars implements IRespUserAvatars {\n\n        /**\n         * Constructs a new RespUserAvatars.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IRespUserAvatars);\n\n        /** RespUserAvatars avatarIds. */\n        public avatarIds: number[];\n\n        /**\n         * Encodes the specified RespUserAvatars message. Does not implicitly {@link farm.RespUserAvatars.verify|verify} messages.\n         * @param m RespUserAvatars message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IRespUserAvatars, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a RespUserAvatars message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns RespUserAvatars\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.RespUserAvatars;\n\n        /**\n         * Creates a RespUserAvatars message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns RespUserAvatars\n         */\n        public static fromObject(d: { [k: string]: any }): farm.RespUserAvatars;\n\n        /**\n         * Creates a plain object from a RespUserAvatars message. Also converts values to other types if specified.\n         * @param m RespUserAvatars\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.RespUserAvatars, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this RespUserAvatars to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a ReqUpdateAvatar. */\n    interface IReqUpdateAvatar {\n\n        /** ReqUpdateAvatar id */\n        id?: (number|null);\n    }\n\n    /** Represents a ReqUpdateAvatar. */\n    class ReqUpdateAvatar implements IReqUpdateAvatar {\n\n        /**\n         * Constructs a new ReqUpdateAvatar.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IReqUpdateAvatar);\n\n        /** ReqUpdateAvatar id. */\n        public id: number;\n\n        /**\n         * Encodes the specified ReqUpdateAvatar message. Does not implicitly {@link farm.ReqUpdateAvatar.verify|verify} messages.\n         * @param m ReqUpdateAvatar message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IReqUpdateAvatar, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a ReqUpdateAvatar message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns ReqUpdateAvatar\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.ReqUpdateAvatar;\n\n        /**\n         * Creates a ReqUpdateAvatar message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns ReqUpdateAvatar\n         */\n        public static fromObject(d: { [k: string]: any }): farm.ReqUpdateAvatar;\n\n        /**\n         * Creates a plain object from a ReqUpdateAvatar message. Also converts values to other types if specified.\n         * @param m ReqUpdateAvatar\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.ReqUpdateAvatar, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this ReqUpdateAvatar to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a RespUpdateAvatar. */\n    interface IRespUpdateAvatar {\n\n        /** RespUpdateAvatar id */\n        id?: (number|null);\n    }\n\n    /** Represents a RespUpdateAvatar. */\n    class RespUpdateAvatar implements IRespUpdateAvatar {\n\n        /**\n         * Constructs a new RespUpdateAvatar.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IRespUpdateAvatar);\n\n        /** RespUpdateAvatar id. */\n        public id: number;\n\n        /**\n         * Encodes the specified RespUpdateAvatar message. Does not implicitly {@link farm.RespUpdateAvatar.verify|verify} messages.\n         * @param m RespUpdateAvatar message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IRespUpdateAvatar, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a RespUpdateAvatar message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns RespUpdateAvatar\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.RespUpdateAvatar;\n\n        /**\n         * Creates a RespUpdateAvatar message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns RespUpdateAvatar\n         */\n        public static fromObject(d: { [k: string]: any }): farm.RespUpdateAvatar;\n\n        /**\n         * Creates a plain object from a RespUpdateAvatar message. Also converts values to other types if specified.\n         * @param m RespUpdateAvatar\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.RespUpdateAvatar, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this RespUpdateAvatar to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a ReqUpdateNickName. */\n    interface IReqUpdateNickName {\n\n        /** ReqUpdateNickName nick_name */\n        nick_name?: (string|null);\n    }\n\n    /** Represents a ReqUpdateNickName. */\n    class ReqUpdateNickName implements IReqUpdateNickName {\n\n        /**\n         * Constructs a new ReqUpdateNickName.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IReqUpdateNickName);\n\n        /** ReqUpdateNickName nick_name. */\n        public nick_name: string;\n\n        /**\n         * Encodes the specified ReqUpdateNickName message. Does not implicitly {@link farm.ReqUpdateNickName.verify|verify} messages.\n         * @param m ReqUpdateNickName message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IReqUpdateNickName, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a ReqUpdateNickName message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns ReqUpdateNickName\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.ReqUpdateNickName;\n\n        /**\n         * Creates a ReqUpdateNickName message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns ReqUpdateNickName\n         */\n        public static fromObject(d: { [k: string]: any }): farm.ReqUpdateNickName;\n\n        /**\n         * Creates a plain object from a ReqUpdateNickName message. Also converts values to other types if specified.\n         * @param m ReqUpdateNickName\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.ReqUpdateNickName, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this ReqUpdateNickName to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a RespUpdateNickName. */\n    interface IRespUpdateNickName {\n\n        /** RespUpdateNickName nick_name */\n        nick_name?: (string|null);\n    }\n\n    /** Represents a RespUpdateNickName. */\n    class RespUpdateNickName implements IRespUpdateNickName {\n\n        /**\n         * Constructs a new RespUpdateNickName.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IRespUpdateNickName);\n\n        /** RespUpdateNickName nick_name. */\n        public nick_name: string;\n\n        /**\n         * Encodes the specified RespUpdateNickName message. Does not implicitly {@link farm.RespUpdateNickName.verify|verify} messages.\n         * @param m RespUpdateNickName message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IRespUpdateNickName, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a RespUpdateNickName message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns RespUpdateNickName\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.RespUpdateNickName;\n\n        /**\n         * Creates a RespUpdateNickName message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns RespUpdateNickName\n         */\n        public static fromObject(d: { [k: string]: any }): farm.RespUpdateNickName;\n\n        /**\n         * Creates a plain object from a RespUpdateNickName message. Also converts values to other types if specified.\n         * @param m RespUpdateNickName\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.RespUpdateNickName, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this RespUpdateNickName to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a RespBarnInfo. */\n    interface IRespBarnInfo {\n\n        /** RespBarnInfo id */\n        id?: (number|Long|null);\n\n        /** RespBarnInfo total_capacity */\n        total_capacity?: (number|null);\n\n        /** RespBarnInfo crop_items */\n        crop_items?: (farm.IBarnCropItem[]|null);\n    }\n\n    /** Represents a RespBarnInfo. */\n    class RespBarnInfo implements IRespBarnInfo {\n\n        /**\n         * Constructs a new RespBarnInfo.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IRespBarnInfo);\n\n        /** RespBarnInfo id. */\n        public id: (number|Long);\n\n        /** RespBarnInfo total_capacity. */\n        public total_capacity: number;\n\n        /** RespBarnInfo crop_items. */\n        public crop_items: farm.IBarnCropItem[];\n\n        /**\n         * Encodes the specified RespBarnInfo message. Does not implicitly {@link farm.RespBarnInfo.verify|verify} messages.\n         * @param m RespBarnInfo message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IRespBarnInfo, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a RespBarnInfo message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns RespBarnInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.RespBarnInfo;\n\n        /**\n         * Creates a RespBarnInfo message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns RespBarnInfo\n         */\n        public static fromObject(d: { [k: string]: any }): farm.RespBarnInfo;\n\n        /**\n         * Creates a plain object from a RespBarnInfo message. Also converts values to other types if specified.\n         * @param m RespBarnInfo\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.RespBarnInfo, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this RespBarnInfo to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a BarnCropItem. */\n    interface IBarnCropItem {\n\n        /** BarnCropItem id */\n        id?: (number|Long|null);\n\n        /** BarnCropItem configID */\n        configID?: (number|null);\n\n        /** BarnCropItem total_num */\n        total_num?: (number|null);\n    }\n\n    /** Represents a BarnCropItem. */\n    class BarnCropItem implements IBarnCropItem {\n\n        /**\n         * Constructs a new BarnCropItem.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IBarnCropItem);\n\n        /** BarnCropItem id. */\n        public id: (number|Long);\n\n        /** BarnCropItem configID. */\n        public configID: number;\n\n        /** BarnCropItem total_num. */\n        public total_num: number;\n\n        /**\n         * Encodes the specified BarnCropItem message. Does not implicitly {@link farm.BarnCropItem.verify|verify} messages.\n         * @param m BarnCropItem message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IBarnCropItem, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a BarnCropItem message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns BarnCropItem\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.BarnCropItem;\n\n        /**\n         * Creates a BarnCropItem message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns BarnCropItem\n         */\n        public static fromObject(d: { [k: string]: any }): farm.BarnCropItem;\n\n        /**\n         * Creates a plain object from a BarnCropItem message. Also converts values to other types if specified.\n         * @param m BarnCropItem\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.BarnCropItem, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this BarnCropItem to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a ReqBarnSell. */\n    interface IReqBarnSell {\n\n        /** ReqBarnSell id */\n        id?: (number|Long|null);\n\n        /** ReqBarnSell num */\n        num?: (number|null);\n    }\n\n    /** Represents a ReqBarnSell. */\n    class ReqBarnSell implements IReqBarnSell {\n\n        /**\n         * Constructs a new ReqBarnSell.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IReqBarnSell);\n\n        /** ReqBarnSell id. */\n        public id: (number|Long);\n\n        /** ReqBarnSell num. */\n        public num: number;\n\n        /**\n         * Encodes the specified ReqBarnSell message. Does not implicitly {@link farm.ReqBarnSell.verify|verify} messages.\n         * @param m ReqBarnSell message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IReqBarnSell, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a ReqBarnSell message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns ReqBarnSell\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.ReqBarnSell;\n\n        /**\n         * Creates a ReqBarnSell message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns ReqBarnSell\n         */\n        public static fromObject(d: { [k: string]: any }): farm.ReqBarnSell;\n\n        /**\n         * Creates a plain object from a ReqBarnSell message. Also converts values to other types if specified.\n         * @param m ReqBarnSell\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.ReqBarnSell, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this ReqBarnSell to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a RespBarnSell. */\n    interface IRespBarnSell {\n\n        /** RespBarnSell id */\n        id?: (number|Long|null);\n\n        /** RespBarnSell num */\n        num?: (number|null);\n\n        /** RespBarnSell tk_gold */\n        tk_gold?: (number|Long|null);\n    }\n\n    /** Represents a RespBarnSell. */\n    class RespBarnSell implements IRespBarnSell {\n\n        /**\n         * Constructs a new RespBarnSell.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IRespBarnSell);\n\n        /** RespBarnSell id. */\n        public id: (number|Long);\n\n        /** RespBarnSell num. */\n        public num: number;\n\n        /** RespBarnSell tk_gold. */\n        public tk_gold: (number|Long);\n\n        /**\n         * Encodes the specified RespBarnSell message. Does not implicitly {@link farm.RespBarnSell.verify|verify} messages.\n         * @param m RespBarnSell message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IRespBarnSell, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a RespBarnSell message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns RespBarnSell\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.RespBarnSell;\n\n        /**\n         * Creates a RespBarnSell message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns RespBarnSell\n         */\n        public static fromObject(d: { [k: string]: any }): farm.RespBarnSell;\n\n        /**\n         * Creates a plain object from a RespBarnSell message. Also converts values to other types if specified.\n         * @param m RespBarnSell\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.RespBarnSell, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this RespBarnSell to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a PropCfgItem. */\n    interface IPropCfgItem {\n\n        /** PropCfgItem id */\n        id?: (number|null);\n\n        /** PropCfgItem name */\n        name?: (string|null);\n\n        /** PropCfgItem display */\n        display?: (number|null);\n\n        /** PropCfgItem type */\n        type?: (number|null);\n\n        /** PropCfgItem desc */\n        desc?: (string|null);\n\n        /** PropCfgItem world */\n        world?: (number|null);\n\n        /** PropCfgItem icon_path */\n        icon_path?: (string|null);\n\n        /** PropCfgItem sale_price */\n        sale_price?: (number|null);\n    }\n\n    /** Represents a PropCfgItem. */\n    class PropCfgItem implements IPropCfgItem {\n\n        /**\n         * Constructs a new PropCfgItem.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IPropCfgItem);\n\n        /** PropCfgItem id. */\n        public id: number;\n\n        /** PropCfgItem name. */\n        public name: string;\n\n        /** PropCfgItem display. */\n        public display: number;\n\n        /** PropCfgItem type. */\n        public type: number;\n\n        /** PropCfgItem desc. */\n        public desc: string;\n\n        /** PropCfgItem world. */\n        public world: number;\n\n        /** PropCfgItem icon_path. */\n        public icon_path: string;\n\n        /** PropCfgItem sale_price. */\n        public sale_price: number;\n\n        /**\n         * Encodes the specified PropCfgItem message. Does not implicitly {@link farm.PropCfgItem.verify|verify} messages.\n         * @param m PropCfgItem message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IPropCfgItem, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a PropCfgItem message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns PropCfgItem\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.PropCfgItem;\n\n        /**\n         * Creates a PropCfgItem message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns PropCfgItem\n         */\n        public static fromObject(d: { [k: string]: any }): farm.PropCfgItem;\n\n        /**\n         * Creates a plain object from a PropCfgItem message. Also converts values to other types if specified.\n         * @param m PropCfgItem\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.PropCfgItem, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this PropCfgItem to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a ConditionItem. */\n    interface IConditionItem {\n\n        /** ConditionItem type */\n        type?: (number|null);\n\n        /** ConditionItem value */\n        value?: (number[]|null);\n    }\n\n    /** Represents a ConditionItem. */\n    class ConditionItem implements IConditionItem {\n\n        /**\n         * Constructs a new ConditionItem.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IConditionItem);\n\n        /** ConditionItem type. */\n        public type: number;\n\n        /** ConditionItem value. */\n        public value: number[];\n\n        /**\n         * Encodes the specified ConditionItem message. Does not implicitly {@link farm.ConditionItem.verify|verify} messages.\n         * @param m ConditionItem message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IConditionItem, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a ConditionItem message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns ConditionItem\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.ConditionItem;\n\n        /**\n         * Creates a ConditionItem message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns ConditionItem\n         */\n        public static fromObject(d: { [k: string]: any }): farm.ConditionItem;\n\n        /**\n         * Creates a plain object from a ConditionItem message. Also converts values to other types if specified.\n         * @param m ConditionItem\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.ConditionItem, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this ConditionItem to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of an Upgrade. */\n    interface IUpgrade {\n\n        /** Upgrade level */\n        level?: (number|null);\n\n        /** Upgrade build_dur */\n        build_dur?: (number|null);\n\n        /** Upgrade build_costs */\n        build_costs?: (farm.IConditionItem[]|null);\n\n        /** Upgrade build_condition */\n        build_condition?: (farm.IConditionItem[]|null);\n\n        /** Upgrade upgrade_param */\n        upgrade_param?: (number[]|null);\n\n        /** Upgrade build_desc */\n        build_desc?: (string|null);\n\n        /** Upgrade prefab */\n        prefab?: (string|null);\n    }\n\n    /** Represents an Upgrade. */\n    class Upgrade implements IUpgrade {\n\n        /**\n         * Constructs a new Upgrade.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IUpgrade);\n\n        /** Upgrade level. */\n        public level: number;\n\n        /** Upgrade build_dur. */\n        public build_dur: number;\n\n        /** Upgrade build_costs. */\n        public build_costs: farm.IConditionItem[];\n\n        /** Upgrade build_condition. */\n        public build_condition: farm.IConditionItem[];\n\n        /** Upgrade upgrade_param. */\n        public upgrade_param: number[];\n\n        /** Upgrade build_desc. */\n        public build_desc: string;\n\n        /** Upgrade prefab. */\n        public prefab: string;\n\n        /**\n         * Encodes the specified Upgrade message. Does not implicitly {@link farm.Upgrade.verify|verify} messages.\n         * @param m Upgrade message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IUpgrade, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes an Upgrade message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns Upgrade\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.Upgrade;\n\n        /**\n         * Creates an Upgrade message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns Upgrade\n         */\n        public static fromObject(d: { [k: string]: any }): farm.Upgrade;\n\n        /**\n         * Creates a plain object from an Upgrade message. Also converts values to other types if specified.\n         * @param m Upgrade\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.Upgrade, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this Upgrade to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a BuildCfgItem. */\n    interface IBuildCfgItem {\n\n        /** BuildCfgItem id */\n        id?: (number|null);\n\n        /** BuildCfgItem name */\n        name?: (string|null);\n\n        /** BuildCfgItem type */\n        type?: (number|null);\n\n        /** BuildCfgItem floor_space */\n        floor_space?: (number[]|null);\n\n        /** BuildCfgItem rotateable */\n        rotateable?: (boolean|null);\n\n        /** BuildCfgItem moveable */\n        moveable?: (boolean|null);\n\n        /** BuildCfgItem recoverable */\n        recoverable?: (boolean|null);\n\n        /** BuildCfgItem only_one */\n        only_one?: (boolean|null);\n\n        /** BuildCfgItem upgrades */\n        upgrades?: (farm.IUpgrade[]|null);\n\n        /** BuildCfgItem position */\n        position?: (farm.IPos[]|null);\n    }\n\n    /** Represents a BuildCfgItem. */\n    class BuildCfgItem implements IBuildCfgItem {\n\n        /**\n         * Constructs a new BuildCfgItem.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IBuildCfgItem);\n\n        /** BuildCfgItem id. */\n        public id: number;\n\n        /** BuildCfgItem name. */\n        public name: string;\n\n        /** BuildCfgItem type. */\n        public type: number;\n\n        /** BuildCfgItem floor_space. */\n        public floor_space: number[];\n\n        /** BuildCfgItem rotateable. */\n        public rotateable: boolean;\n\n        /** BuildCfgItem moveable. */\n        public moveable: boolean;\n\n        /** BuildCfgItem recoverable. */\n        public recoverable: boolean;\n\n        /** BuildCfgItem only_one. */\n        public only_one: boolean;\n\n        /** BuildCfgItem upgrades. */\n        public upgrades: farm.IUpgrade[];\n\n        /** BuildCfgItem position. */\n        public position: farm.IPos[];\n\n        /**\n         * Encodes the specified BuildCfgItem message. Does not implicitly {@link farm.BuildCfgItem.verify|verify} messages.\n         * @param m BuildCfgItem message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IBuildCfgItem, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a BuildCfgItem message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns BuildCfgItem\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.BuildCfgItem;\n\n        /**\n         * Creates a BuildCfgItem message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns BuildCfgItem\n         */\n        public static fromObject(d: { [k: string]: any }): farm.BuildCfgItem;\n\n        /**\n         * Creates a plain object from a BuildCfgItem message. Also converts values to other types if specified.\n         * @param m BuildCfgItem\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.BuildCfgItem, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this BuildCfgItem to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of an UnlockCondition. */\n    interface IUnlockCondition {\n\n        /** UnlockCondition type */\n        type?: (number|null);\n\n        /** UnlockCondition value */\n        value?: (number[]|null);\n    }\n\n    /** Represents an UnlockCondition. */\n    class UnlockCondition implements IUnlockCondition {\n\n        /**\n         * Constructs a new UnlockCondition.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IUnlockCondition);\n\n        /** UnlockCondition type. */\n        public type: number;\n\n        /** UnlockCondition value. */\n        public value: number[];\n\n        /**\n         * Encodes the specified UnlockCondition message. Does not implicitly {@link farm.UnlockCondition.verify|verify} messages.\n         * @param m UnlockCondition message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IUnlockCondition, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes an UnlockCondition message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns UnlockCondition\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.UnlockCondition;\n\n        /**\n         * Creates an UnlockCondition message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns UnlockCondition\n         */\n        public static fromObject(d: { [k: string]: any }): farm.UnlockCondition;\n\n        /**\n         * Creates a plain object from an UnlockCondition message. Also converts values to other types if specified.\n         * @param m UnlockCondition\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.UnlockCondition, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this UnlockCondition to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a CropCfgItem. */\n    interface ICropCfgItem {\n\n        /** CropCfgItem id */\n        id?: (number|null);\n\n        /** CropCfgItem name */\n        name?: (string|null);\n\n        /** CropCfgItem type */\n        type?: (number|null);\n\n        /** CropCfgItem grow_time */\n        grow_time?: (number|null);\n\n        /** CropCfgItem unlock_condition */\n        unlock_condition?: (farm.IUnlockCondition[]|null);\n    }\n\n    /** Represents a CropCfgItem. */\n    class CropCfgItem implements ICropCfgItem {\n\n        /**\n         * Constructs a new CropCfgItem.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.ICropCfgItem);\n\n        /** CropCfgItem id. */\n        public id: number;\n\n        /** CropCfgItem name. */\n        public name: string;\n\n        /** CropCfgItem type. */\n        public type: number;\n\n        /** CropCfgItem grow_time. */\n        public grow_time: number;\n\n        /** CropCfgItem unlock_condition. */\n        public unlock_condition: farm.IUnlockCondition[];\n\n        /**\n         * Encodes the specified CropCfgItem message. Does not implicitly {@link farm.CropCfgItem.verify|verify} messages.\n         * @param m CropCfgItem message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.ICropCfgItem, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a CropCfgItem message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns CropCfgItem\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.CropCfgItem;\n\n        /**\n         * Creates a CropCfgItem message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns CropCfgItem\n         */\n        public static fromObject(d: { [k: string]: any }): farm.CropCfgItem;\n\n        /**\n         * Creates a plain object from a CropCfgItem message. Also converts values to other types if specified.\n         * @param m CropCfgItem\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.CropCfgItem, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this CropCfgItem to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a RespPlantCrops. */\n    interface IRespPlantCrops {\n\n        /** RespPlantCrops plant_crops */\n        plant_crops?: (farm.IPlantCrop[]|null);\n    }\n\n    /** Represents a RespPlantCrops. */\n    class RespPlantCrops implements IRespPlantCrops {\n\n        /**\n         * Constructs a new RespPlantCrops.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IRespPlantCrops);\n\n        /** RespPlantCrops plant_crops. */\n        public plant_crops: farm.IPlantCrop[];\n\n        /**\n         * Encodes the specified RespPlantCrops message. Does not implicitly {@link farm.RespPlantCrops.verify|verify} messages.\n         * @param m RespPlantCrops message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IRespPlantCrops, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a RespPlantCrops message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns RespPlantCrops\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.RespPlantCrops;\n\n        /**\n         * Creates a RespPlantCrops message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns RespPlantCrops\n         */\n        public static fromObject(d: { [k: string]: any }): farm.RespPlantCrops;\n\n        /**\n         * Creates a plain object from a RespPlantCrops message. Also converts values to other types if specified.\n         * @param m RespPlantCrops\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.RespPlantCrops, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this RespPlantCrops to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a PlantCrop. */\n    interface IPlantCrop {\n\n        /** PlantCrop id */\n        id?: (number|Long|null);\n\n        /** PlantCrop config_id */\n        config_id?: (number|null);\n\n        /** PlantCrop is_unlock */\n        is_unlock?: (boolean|null);\n\n        /** PlantCrop currency_type */\n        currency_type?: (farm.CurrencyType|null);\n\n        /** PlantCrop number */\n        number?: (number|Long|null);\n    }\n\n    /** Represents a PlantCrop. */\n    class PlantCrop implements IPlantCrop {\n\n        /**\n         * Constructs a new PlantCrop.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IPlantCrop);\n\n        /** PlantCrop id. */\n        public id: (number|Long);\n\n        /** PlantCrop config_id. */\n        public config_id: number;\n\n        /** PlantCrop is_unlock. */\n        public is_unlock: boolean;\n\n        /** PlantCrop currency_type. */\n        public currency_type: farm.CurrencyType;\n\n        /** PlantCrop number. */\n        public number: (number|Long);\n\n        /**\n         * Encodes the specified PlantCrop message. Does not implicitly {@link farm.PlantCrop.verify|verify} messages.\n         * @param m PlantCrop message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IPlantCrop, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a PlantCrop message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns PlantCrop\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.PlantCrop;\n\n        /**\n         * Creates a PlantCrop message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns PlantCrop\n         */\n        public static fromObject(d: { [k: string]: any }): farm.PlantCrop;\n\n        /**\n         * Creates a plain object from a PlantCrop message. Also converts values to other types if specified.\n         * @param m PlantCrop\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.PlantCrop, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this PlantCrop to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a RespArableLandsState. */\n    interface IRespArableLandsState {\n\n        /** RespArableLandsState arable_lands_state */\n        arable_lands_state?: (farm.IArableLandState[]|null);\n    }\n\n    /** Represents a RespArableLandsState. */\n    class RespArableLandsState implements IRespArableLandsState {\n\n        /**\n         * Constructs a new RespArableLandsState.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IRespArableLandsState);\n\n        /** RespArableLandsState arable_lands_state. */\n        public arable_lands_state: farm.IArableLandState[];\n\n        /**\n         * Encodes the specified RespArableLandsState message. Does not implicitly {@link farm.RespArableLandsState.verify|verify} messages.\n         * @param m RespArableLandsState message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IRespArableLandsState, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a RespArableLandsState message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns RespArableLandsState\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.RespArableLandsState;\n\n        /**\n         * Creates a RespArableLandsState message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns RespArableLandsState\n         */\n        public static fromObject(d: { [k: string]: any }): farm.RespArableLandsState;\n\n        /**\n         * Creates a plain object from a RespArableLandsState message. Also converts values to other types if specified.\n         * @param m RespArableLandsState\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.RespArableLandsState, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this RespArableLandsState to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of an ArableLandState. */\n    interface IArableLandState {\n\n        /** ArableLandState building_id */\n        building_id?: (number|Long|null);\n\n        /** ArableLandState crop_configID */\n        crop_configID?: (number|null);\n\n        /** ArableLandState time_left */\n        time_left?: (number|null);\n    }\n\n    /** Represents an ArableLandState. */\n    class ArableLandState implements IArableLandState {\n\n        /**\n         * Constructs a new ArableLandState.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IArableLandState);\n\n        /** ArableLandState building_id. */\n        public building_id: (number|Long);\n\n        /** ArableLandState crop_configID. */\n        public crop_configID: number;\n\n        /** ArableLandState time_left. */\n        public time_left: number;\n\n        /**\n         * Encodes the specified ArableLandState message. Does not implicitly {@link farm.ArableLandState.verify|verify} messages.\n         * @param m ArableLandState message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IArableLandState, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes an ArableLandState message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns ArableLandState\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.ArableLandState;\n\n        /**\n         * Creates an ArableLandState message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns ArableLandState\n         */\n        public static fromObject(d: { [k: string]: any }): farm.ArableLandState;\n\n        /**\n         * Creates a plain object from an ArableLandState message. Also converts values to other types if specified.\n         * @param m ArableLandState\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.ArableLandState, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this ArableLandState to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a ReqCropOption. */\n    interface IReqCropOption {\n\n        /** ReqCropOption building_ids */\n        building_ids?: ((number|Long)[]|null);\n\n        /** ReqCropOption crop_cfgids */\n        crop_cfgids?: (number[]|null);\n    }\n\n    /** Represents a ReqCropOption. */\n    class ReqCropOption implements IReqCropOption {\n\n        /**\n         * Constructs a new ReqCropOption.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IReqCropOption);\n\n        /** ReqCropOption building_ids. */\n        public building_ids: (number|Long)[];\n\n        /** ReqCropOption crop_cfgids. */\n        public crop_cfgids: number[];\n\n        /**\n         * Encodes the specified ReqCropOption message. Does not implicitly {@link farm.ReqCropOption.verify|verify} messages.\n         * @param m ReqCropOption message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IReqCropOption, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a ReqCropOption message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns ReqCropOption\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.ReqCropOption;\n\n        /**\n         * Creates a ReqCropOption message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns ReqCropOption\n         */\n        public static fromObject(d: { [k: string]: any }): farm.ReqCropOption;\n\n        /**\n         * Creates a plain object from a ReqCropOption message. Also converts values to other types if specified.\n         * @param m ReqCropOption\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.ReqCropOption, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this ReqCropOption to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a ReqUnlockCrop. */\n    interface IReqUnlockCrop {\n\n        /** ReqUnlockCrop configID */\n        configID?: (number|null);\n    }\n\n    /** Represents a ReqUnlockCrop. */\n    class ReqUnlockCrop implements IReqUnlockCrop {\n\n        /**\n         * Constructs a new ReqUnlockCrop.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IReqUnlockCrop);\n\n        /** ReqUnlockCrop configID. */\n        public configID: number;\n\n        /**\n         * Encodes the specified ReqUnlockCrop message. Does not implicitly {@link farm.ReqUnlockCrop.verify|verify} messages.\n         * @param m ReqUnlockCrop message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IReqUnlockCrop, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a ReqUnlockCrop message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns ReqUnlockCrop\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.ReqUnlockCrop;\n\n        /**\n         * Creates a ReqUnlockCrop message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns ReqUnlockCrop\n         */\n        public static fromObject(d: { [k: string]: any }): farm.ReqUnlockCrop;\n\n        /**\n         * Creates a plain object from a ReqUnlockCrop message. Also converts values to other types if specified.\n         * @param m ReqUnlockCrop\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.ReqUnlockCrop, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this ReqUnlockCrop to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a CurrencyLeft. */\n    interface ICurrencyLeft {\n\n        /** CurrencyLeft tk_gold */\n        tk_gold?: (number|Long|null);\n\n        /** CurrencyLeft tk_crystal */\n        tk_crystal?: (number|Long|null);\n    }\n\n    /** Represents a CurrencyLeft. */\n    class CurrencyLeft implements ICurrencyLeft {\n\n        /**\n         * Constructs a new CurrencyLeft.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.ICurrencyLeft);\n\n        /** CurrencyLeft tk_gold. */\n        public tk_gold: (number|Long);\n\n        /** CurrencyLeft tk_crystal. */\n        public tk_crystal: (number|Long);\n\n        /**\n         * Encodes the specified CurrencyLeft message. Does not implicitly {@link farm.CurrencyLeft.verify|verify} messages.\n         * @param m CurrencyLeft message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.ICurrencyLeft, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a CurrencyLeft message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns CurrencyLeft\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.CurrencyLeft;\n\n        /**\n         * Creates a CurrencyLeft message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns CurrencyLeft\n         */\n        public static fromObject(d: { [k: string]: any }): farm.CurrencyLeft;\n\n        /**\n         * Creates a plain object from a CurrencyLeft message. Also converts values to other types if specified.\n         * @param m CurrencyLeft\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.CurrencyLeft, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this CurrencyLeft to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a MessageWordBubbleChanged. */\n    interface IMessageWordBubbleChanged {\n\n        /** MessageWordBubbleChanged word_bubbles */\n        word_bubbles?: (farm.IWordBubble[]|null);\n    }\n\n    /** Represents a MessageWordBubbleChanged. */\n    class MessageWordBubbleChanged implements IMessageWordBubbleChanged {\n\n        /**\n         * Constructs a new MessageWordBubbleChanged.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IMessageWordBubbleChanged);\n\n        /** MessageWordBubbleChanged word_bubbles. */\n        public word_bubbles: farm.IWordBubble[];\n\n        /**\n         * Encodes the specified MessageWordBubbleChanged message. Does not implicitly {@link farm.MessageWordBubbleChanged.verify|verify} messages.\n         * @param m MessageWordBubbleChanged message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IMessageWordBubbleChanged, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a MessageWordBubbleChanged message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns MessageWordBubbleChanged\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.MessageWordBubbleChanged;\n\n        /**\n         * Creates a MessageWordBubbleChanged message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns MessageWordBubbleChanged\n         */\n        public static fromObject(d: { [k: string]: any }): farm.MessageWordBubbleChanged;\n\n        /**\n         * Creates a plain object from a MessageWordBubbleChanged message. Also converts values to other types if specified.\n         * @param m MessageWordBubbleChanged\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.MessageWordBubbleChanged, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this MessageWordBubbleChanged to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a MessagePlayerInfo. */\n    interface IMessagePlayerInfo {\n\n        /** MessagePlayerInfo nick_name */\n        nick_name?: (string|null);\n\n        /** MessagePlayerInfo user_code */\n        user_code?: (string|null);\n\n        /** MessagePlayerInfo avatar_id */\n        avatar_id?: (number|null);\n\n        /** MessagePlayerInfo coin */\n        coin?: (number|null);\n\n        /** MessagePlayerInfo crystal */\n        crystal?: (number|null);\n\n        /** MessagePlayerInfo heart */\n        heart?: (number|null);\n\n        /** MessagePlayerInfo slogan */\n        slogan?: (string|null);\n\n        /** MessagePlayerInfo isMail */\n        isMail?: (boolean|null);\n    }\n\n    /** Represents a MessagePlayerInfo. */\n    class MessagePlayerInfo implements IMessagePlayerInfo {\n\n        /**\n         * Constructs a new MessagePlayerInfo.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IMessagePlayerInfo);\n\n        /** MessagePlayerInfo nick_name. */\n        public nick_name: string;\n\n        /** MessagePlayerInfo user_code. */\n        public user_code: string;\n\n        /** MessagePlayerInfo avatar_id. */\n        public avatar_id: number;\n\n        /** MessagePlayerInfo coin. */\n        public coin: number;\n\n        /** MessagePlayerInfo crystal. */\n        public crystal: number;\n\n        /** MessagePlayerInfo heart. */\n        public heart: number;\n\n        /** MessagePlayerInfo slogan. */\n        public slogan: string;\n\n        /** MessagePlayerInfo isMail. */\n        public isMail: boolean;\n\n        /**\n         * Encodes the specified MessagePlayerInfo message. Does not implicitly {@link farm.MessagePlayerInfo.verify|verify} messages.\n         * @param m MessagePlayerInfo message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IMessagePlayerInfo, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a MessagePlayerInfo message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns MessagePlayerInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.MessagePlayerInfo;\n\n        /**\n         * Creates a MessagePlayerInfo message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns MessagePlayerInfo\n         */\n        public static fromObject(d: { [k: string]: any }): farm.MessagePlayerInfo;\n\n        /**\n         * Creates a plain object from a MessagePlayerInfo message. Also converts values to other types if specified.\n         * @param m MessagePlayerInfo\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.MessagePlayerInfo, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this MessagePlayerInfo to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a WordBubble. */\n    interface IWordBubble {\n\n        /** WordBubble word_id */\n        word_id?: (number|null);\n\n        /** WordBubble building_id */\n        building_id?: (number|Long|null);\n    }\n\n    /** Represents a WordBubble. */\n    class WordBubble implements IWordBubble {\n\n        /**\n         * Constructs a new WordBubble.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IWordBubble);\n\n        /** WordBubble word_id. */\n        public word_id: number;\n\n        /** WordBubble building_id. */\n        public building_id: (number|Long);\n\n        /**\n         * Encodes the specified WordBubble message. Does not implicitly {@link farm.WordBubble.verify|verify} messages.\n         * @param m WordBubble message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IWordBubble, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a WordBubble message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns WordBubble\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.WordBubble;\n\n        /**\n         * Creates a WordBubble message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns WordBubble\n         */\n        public static fromObject(d: { [k: string]: any }): farm.WordBubble;\n\n        /**\n         * Creates a plain object from a WordBubble message. Also converts values to other types if specified.\n         * @param m WordBubble\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.WordBubble, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this WordBubble to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a ReqWordBubbleEnd. */\n    interface IReqWordBubbleEnd {\n\n        /** ReqWordBubbleEnd word_id */\n        word_id?: (number|null);\n\n        /** ReqWordBubbleEnd building_id */\n        building_id?: (number|Long|null);\n    }\n\n    /** Represents a ReqWordBubbleEnd. */\n    class ReqWordBubbleEnd implements IReqWordBubbleEnd {\n\n        /**\n         * Constructs a new ReqWordBubbleEnd.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IReqWordBubbleEnd);\n\n        /** ReqWordBubbleEnd word_id. */\n        public word_id: number;\n\n        /** ReqWordBubbleEnd building_id. */\n        public building_id: (number|Long);\n\n        /**\n         * Encodes the specified ReqWordBubbleEnd message. Does not implicitly {@link farm.ReqWordBubbleEnd.verify|verify} messages.\n         * @param m ReqWordBubbleEnd message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IReqWordBubbleEnd, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a ReqWordBubbleEnd message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns ReqWordBubbleEnd\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.ReqWordBubbleEnd;\n\n        /**\n         * Creates a ReqWordBubbleEnd message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns ReqWordBubbleEnd\n         */\n        public static fromObject(d: { [k: string]: any }): farm.ReqWordBubbleEnd;\n\n        /**\n         * Creates a plain object from a ReqWordBubbleEnd message. Also converts values to other types if specified.\n         * @param m ReqWordBubbleEnd\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.ReqWordBubbleEnd, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this ReqWordBubbleEnd to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a ReqUpdateBillboards. */\n    interface IReqUpdateBillboards {\n\n        /** ReqUpdateBillboards content */\n        content?: (string|null);\n    }\n\n    /** Represents a ReqUpdateBillboards. */\n    class ReqUpdateBillboards implements IReqUpdateBillboards {\n\n        /**\n         * Constructs a new ReqUpdateBillboards.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IReqUpdateBillboards);\n\n        /** ReqUpdateBillboards content. */\n        public content: string;\n\n        /**\n         * Encodes the specified ReqUpdateBillboards message. Does not implicitly {@link farm.ReqUpdateBillboards.verify|verify} messages.\n         * @param m ReqUpdateBillboards message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IReqUpdateBillboards, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a ReqUpdateBillboards message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns ReqUpdateBillboards\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.ReqUpdateBillboards;\n\n        /**\n         * Creates a ReqUpdateBillboards message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns ReqUpdateBillboards\n         */\n        public static fromObject(d: { [k: string]: any }): farm.ReqUpdateBillboards;\n\n        /**\n         * Creates a plain object from a ReqUpdateBillboards message. Also converts values to other types if specified.\n         * @param m ReqUpdateBillboards\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.ReqUpdateBillboards, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this ReqUpdateBillboards to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a RespMailList. */\n    interface IRespMailList {\n\n        /** RespMailList mails */\n        mails?: (farm.IMailListItem[]|null);\n    }\n\n    /** Represents a RespMailList. */\n    class RespMailList implements IRespMailList {\n\n        /**\n         * Constructs a new RespMailList.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IRespMailList);\n\n        /** RespMailList mails. */\n        public mails: farm.IMailListItem[];\n\n        /**\n         * Encodes the specified RespMailList message. Does not implicitly {@link farm.RespMailList.verify|verify} messages.\n         * @param m RespMailList message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IRespMailList, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a RespMailList message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns RespMailList\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.RespMailList;\n\n        /**\n         * Creates a RespMailList message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns RespMailList\n         */\n        public static fromObject(d: { [k: string]: any }): farm.RespMailList;\n\n        /**\n         * Creates a plain object from a RespMailList message. Also converts values to other types if specified.\n         * @param m RespMailList\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.RespMailList, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this RespMailList to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a MailListItem. */\n    interface IMailListItem {\n\n        /** MailListItem id */\n        id?: (number|Long|null);\n\n        /** MailListItem type */\n        type?: (farm.MailType|null);\n\n        /** MailListItem sender_uid */\n        sender_uid?: (number|Long|null);\n\n        /** MailListItem title */\n        title?: (string|null);\n\n        /** MailListItem status */\n        status?: (farm.MailState|null);\n    }\n\n    /** Represents a MailListItem. */\n    class MailListItem implements IMailListItem {\n\n        /**\n         * Constructs a new MailListItem.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IMailListItem);\n\n        /** MailListItem id. */\n        public id: (number|Long);\n\n        /** MailListItem type. */\n        public type: farm.MailType;\n\n        /** MailListItem sender_uid. */\n        public sender_uid: (number|Long);\n\n        /** MailListItem title. */\n        public title: string;\n\n        /** MailListItem status. */\n        public status: farm.MailState;\n\n        /**\n         * Encodes the specified MailListItem message. Does not implicitly {@link farm.MailListItem.verify|verify} messages.\n         * @param m MailListItem message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IMailListItem, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a MailListItem message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns MailListItem\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.MailListItem;\n\n        /**\n         * Creates a MailListItem message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns MailListItem\n         */\n        public static fromObject(d: { [k: string]: any }): farm.MailListItem;\n\n        /**\n         * Creates a plain object from a MailListItem message. Also converts values to other types if specified.\n         * @param m MailListItem\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.MailListItem, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this MailListItem to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a RespMailDetail. */\n    interface IRespMailDetail {\n\n        /** RespMailDetail id */\n        id?: (number|Long|null);\n\n        /** RespMailDetail content */\n        content?: (string|null);\n\n        /** RespMailDetail annexes */\n        annexes?: (farm.IAnnex[]|null);\n\n        /** RespMailDetail type */\n        type?: (farm.MailTapType|null);\n    }\n\n    /** Represents a RespMailDetail. */\n    class RespMailDetail implements IRespMailDetail {\n\n        /**\n         * Constructs a new RespMailDetail.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IRespMailDetail);\n\n        /** RespMailDetail id. */\n        public id: (number|Long);\n\n        /** RespMailDetail content. */\n        public content: string;\n\n        /** RespMailDetail annexes. */\n        public annexes: farm.IAnnex[];\n\n        /** RespMailDetail type. */\n        public type: farm.MailTapType;\n\n        /**\n         * Encodes the specified RespMailDetail message. Does not implicitly {@link farm.RespMailDetail.verify|verify} messages.\n         * @param m RespMailDetail message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IRespMailDetail, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a RespMailDetail message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns RespMailDetail\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.RespMailDetail;\n\n        /**\n         * Creates a RespMailDetail message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns RespMailDetail\n         */\n        public static fromObject(d: { [k: string]: any }): farm.RespMailDetail;\n\n        /**\n         * Creates a plain object from a RespMailDetail message. Also converts values to other types if specified.\n         * @param m RespMailDetail\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.RespMailDetail, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this RespMailDetail to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of an Annex. */\n    interface IAnnex {\n\n        /** Annex annex_id */\n        annex_id?: (number|Long|null);\n\n        /** Annex status */\n        status?: (farm.AnnexState|null);\n\n        /** Annex num */\n        num?: (number|null);\n    }\n\n    /** Represents an Annex. */\n    class Annex implements IAnnex {\n\n        /**\n         * Constructs a new Annex.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IAnnex);\n\n        /** Annex annex_id. */\n        public annex_id: (number|Long);\n\n        /** Annex status. */\n        public status: farm.AnnexState;\n\n        /** Annex num. */\n        public num: number;\n\n        /**\n         * Encodes the specified Annex message. Does not implicitly {@link farm.Annex.verify|verify} messages.\n         * @param m Annex message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IAnnex, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes an Annex message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns Annex\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.Annex;\n\n        /**\n         * Creates an Annex message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns Annex\n         */\n        public static fromObject(d: { [k: string]: any }): farm.Annex;\n\n        /**\n         * Creates a plain object from an Annex message. Also converts values to other types if specified.\n         * @param m Annex\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.Annex, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this Annex to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a ReqReceiveAnnex. */\n    interface IReqReceiveAnnex {\n\n        /** ReqReceiveAnnex annexIDs */\n        annexIDs?: ((number|Long)[]|null);\n\n        /** ReqReceiveAnnex mail_id */\n        mail_id?: (number|Long|null);\n    }\n\n    /** Represents a ReqReceiveAnnex. */\n    class ReqReceiveAnnex implements IReqReceiveAnnex {\n\n        /**\n         * Constructs a new ReqReceiveAnnex.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IReqReceiveAnnex);\n\n        /** ReqReceiveAnnex annexIDs. */\n        public annexIDs: (number|Long)[];\n\n        /** ReqReceiveAnnex mail_id. */\n        public mail_id: (number|Long);\n\n        /**\n         * Encodes the specified ReqReceiveAnnex message. Does not implicitly {@link farm.ReqReceiveAnnex.verify|verify} messages.\n         * @param m ReqReceiveAnnex message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IReqReceiveAnnex, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a ReqReceiveAnnex message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns ReqReceiveAnnex\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.ReqReceiveAnnex;\n\n        /**\n         * Creates a ReqReceiveAnnex message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns ReqReceiveAnnex\n         */\n        public static fromObject(d: { [k: string]: any }): farm.ReqReceiveAnnex;\n\n        /**\n         * Creates a plain object from a ReqReceiveAnnex message. Also converts values to other types if specified.\n         * @param m ReqReceiveAnnex\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.ReqReceiveAnnex, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this ReqReceiveAnnex to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** QuestState enum. */\n    enum QuestState {\n        Pending = 0,\n        Unlocked = 1,\n        Inprogress = 2,\n        Complete = 3,\n        Cancel = 4,\n        Done = 5\n    }\n\n    /** DialogStageType enum. */\n    enum DialogStageType {\n        NPCDialog = 0,\n        PhoneDialog = 1,\n        QuestBoardDialog = 2\n    }\n\n    /** Properties of a MessagePhoneCall. */\n    interface IMessagePhoneCall {\n\n        /** MessagePhoneCall char_config_id */\n        char_config_id?: (number|null);\n\n        /** MessagePhoneCall dlg_stage_id */\n        dlg_stage_id?: (number|null);\n    }\n\n    /** Represents a MessagePhoneCall. */\n    class MessagePhoneCall implements IMessagePhoneCall {\n\n        /**\n         * Constructs a new MessagePhoneCall.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IMessagePhoneCall);\n\n        /** MessagePhoneCall char_config_id. */\n        public char_config_id: number;\n\n        /** MessagePhoneCall dlg_stage_id. */\n        public dlg_stage_id: number;\n\n        /**\n         * Encodes the specified MessagePhoneCall message. Does not implicitly {@link farm.MessagePhoneCall.verify|verify} messages.\n         * @param m MessagePhoneCall message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IMessagePhoneCall, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a MessagePhoneCall message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns MessagePhoneCall\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.MessagePhoneCall;\n\n        /**\n         * Creates a MessagePhoneCall message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns MessagePhoneCall\n         */\n        public static fromObject(d: { [k: string]: any }): farm.MessagePhoneCall;\n\n        /**\n         * Creates a plain object from a MessagePhoneCall message. Also converts values to other types if specified.\n         * @param m MessagePhoneCall\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.MessagePhoneCall, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this MessagePhoneCall to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a QuestData. */\n    interface IQuestData {\n\n        /** QuestData id */\n        id?: (number|Long|null);\n\n        /** QuestData config_id */\n        config_id?: (number|null);\n\n        /** QuestData state */\n        state?: (farm.QuestState|null);\n\n        /** QuestData left_dur */\n        left_dur?: (number|Long|null);\n\n        /** QuestData task_data */\n        task_data?: (number[]|null);\n    }\n\n    /** Represents a QuestData. */\n    class QuestData implements IQuestData {\n\n        /**\n         * Constructs a new QuestData.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IQuestData);\n\n        /** QuestData id. */\n        public id: (number|Long);\n\n        /** QuestData config_id. */\n        public config_id: number;\n\n        /** QuestData state. */\n        public state: farm.QuestState;\n\n        /** QuestData left_dur. */\n        public left_dur: (number|Long);\n\n        /** QuestData task_data. */\n        public task_data: number[];\n\n        /**\n         * Encodes the specified QuestData message. Does not implicitly {@link farm.QuestData.verify|verify} messages.\n         * @param m QuestData message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IQuestData, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a QuestData message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns QuestData\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.QuestData;\n\n        /**\n         * Creates a QuestData message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns QuestData\n         */\n        public static fromObject(d: { [k: string]: any }): farm.QuestData;\n\n        /**\n         * Creates a plain object from a QuestData message. Also converts values to other types if specified.\n         * @param m QuestData\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.QuestData, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this QuestData to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a MessageQuestList. */\n    interface IMessageQuestList {\n\n        /** MessageQuestList quests */\n        quests?: (farm.IQuestData[]|null);\n\n        /** MessageQuestList done_quest_count_today */\n        done_quest_count_today?: (number|null);\n\n        /** MessageQuestList extra_award_left_times */\n        extra_award_left_times?: (number|null);\n\n        /** MessageQuestList daily_circle_quest_next_cost */\n        daily_circle_quest_next_cost?: (number|null);\n    }\n\n    /** Represents a MessageQuestList. */\n    class MessageQuestList implements IMessageQuestList {\n\n        /**\n         * Constructs a new MessageQuestList.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IMessageQuestList);\n\n        /** MessageQuestList quests. */\n        public quests: farm.IQuestData[];\n\n        /** MessageQuestList done_quest_count_today. */\n        public done_quest_count_today: number;\n\n        /** MessageQuestList extra_award_left_times. */\n        public extra_award_left_times: number;\n\n        /** MessageQuestList daily_circle_quest_next_cost. */\n        public daily_circle_quest_next_cost: number;\n\n        /**\n         * Encodes the specified MessageQuestList message. Does not implicitly {@link farm.MessageQuestList.verify|verify} messages.\n         * @param m MessageQuestList message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IMessageQuestList, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a MessageQuestList message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns MessageQuestList\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.MessageQuestList;\n\n        /**\n         * Creates a MessageQuestList message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns MessageQuestList\n         */\n        public static fromObject(d: { [k: string]: any }): farm.MessageQuestList;\n\n        /**\n         * Creates a plain object from a MessageQuestList message. Also converts values to other types if specified.\n         * @param m MessageQuestList\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.MessageQuestList, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this MessageQuestList to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a MessageQuestUpdate. */\n    interface IMessageQuestUpdate {\n\n        /** MessageQuestUpdate quest */\n        quest?: (farm.IQuestData|null);\n\n        /** MessageQuestUpdate heard_count */\n        heard_count?: (number|null);\n\n        /** MessageQuestUpdate done_quest_count_today */\n        done_quest_count_today?: (number|null);\n\n        /** MessageQuestUpdate extra_award_left_times */\n        extra_award_left_times?: (number|null);\n    }\n\n    /** Represents a MessageQuestUpdate. */\n    class MessageQuestUpdate implements IMessageQuestUpdate {\n\n        /**\n         * Constructs a new MessageQuestUpdate.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IMessageQuestUpdate);\n\n        /** MessageQuestUpdate quest. */\n        public quest?: (farm.IQuestData|null);\n\n        /** MessageQuestUpdate heard_count. */\n        public heard_count: number;\n\n        /** MessageQuestUpdate done_quest_count_today. */\n        public done_quest_count_today: number;\n\n        /** MessageQuestUpdate extra_award_left_times. */\n        public extra_award_left_times: number;\n\n        /**\n         * Encodes the specified MessageQuestUpdate message. Does not implicitly {@link farm.MessageQuestUpdate.verify|verify} messages.\n         * @param m MessageQuestUpdate message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IMessageQuestUpdate, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a MessageQuestUpdate message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns MessageQuestUpdate\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.MessageQuestUpdate;\n\n        /**\n         * Creates a MessageQuestUpdate message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns MessageQuestUpdate\n         */\n        public static fromObject(d: { [k: string]: any }): farm.MessageQuestUpdate;\n\n        /**\n         * Creates a plain object from a MessageQuestUpdate message. Also converts values to other types if specified.\n         * @param m MessageQuestUpdate\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.MessageQuestUpdate, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this MessageQuestUpdate to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a ReqQuestGainExtraAward. */\n    interface IReqQuestGainExtraAward {\n\n        /** ReqQuestGainExtraAward extend */\n        extend?: (number|null);\n    }\n\n    /** Represents a ReqQuestGainExtraAward. */\n    class ReqQuestGainExtraAward implements IReqQuestGainExtraAward {\n\n        /**\n         * Constructs a new ReqQuestGainExtraAward.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IReqQuestGainExtraAward);\n\n        /** ReqQuestGainExtraAward extend. */\n        public extend: number;\n\n        /**\n         * Encodes the specified ReqQuestGainExtraAward message. Does not implicitly {@link farm.ReqQuestGainExtraAward.verify|verify} messages.\n         * @param m ReqQuestGainExtraAward message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IReqQuestGainExtraAward, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a ReqQuestGainExtraAward message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns ReqQuestGainExtraAward\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.ReqQuestGainExtraAward;\n\n        /**\n         * Creates a ReqQuestGainExtraAward message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns ReqQuestGainExtraAward\n         */\n        public static fromObject(d: { [k: string]: any }): farm.ReqQuestGainExtraAward;\n\n        /**\n         * Creates a plain object from a ReqQuestGainExtraAward message. Also converts values to other types if specified.\n         * @param m ReqQuestGainExtraAward\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.ReqQuestGainExtraAward, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this ReqQuestGainExtraAward to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a RespQuestGainExtraAWard. */\n    interface IRespQuestGainExtraAWard {\n\n        /** RespQuestGainExtraAWard extra_award_left_times */\n        extra_award_left_times?: (number|null);\n    }\n\n    /** Represents a RespQuestGainExtraAWard. */\n    class RespQuestGainExtraAWard implements IRespQuestGainExtraAWard {\n\n        /**\n         * Constructs a new RespQuestGainExtraAWard.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IRespQuestGainExtraAWard);\n\n        /** RespQuestGainExtraAWard extra_award_left_times. */\n        public extra_award_left_times: number;\n\n        /**\n         * Encodes the specified RespQuestGainExtraAWard message. Does not implicitly {@link farm.RespQuestGainExtraAWard.verify|verify} messages.\n         * @param m RespQuestGainExtraAWard message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IRespQuestGainExtraAWard, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a RespQuestGainExtraAWard message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns RespQuestGainExtraAWard\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.RespQuestGainExtraAWard;\n\n        /**\n         * Creates a RespQuestGainExtraAWard message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns RespQuestGainExtraAWard\n         */\n        public static fromObject(d: { [k: string]: any }): farm.RespQuestGainExtraAWard;\n\n        /**\n         * Creates a plain object from a RespQuestGainExtraAWard message. Also converts values to other types if specified.\n         * @param m RespQuestGainExtraAWard\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.RespQuestGainExtraAWard, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this RespQuestGainExtraAWard to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a ReqQuestGainDailyCircleOne. */\n    interface IReqQuestGainDailyCircleOne {\n\n        /** ReqQuestGainDailyCircleOne extend */\n        extend?: (number|null);\n    }\n\n    /** Represents a ReqQuestGainDailyCircleOne. */\n    class ReqQuestGainDailyCircleOne implements IReqQuestGainDailyCircleOne {\n\n        /**\n         * Constructs a new ReqQuestGainDailyCircleOne.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IReqQuestGainDailyCircleOne);\n\n        /** ReqQuestGainDailyCircleOne extend. */\n        public extend: number;\n\n        /**\n         * Encodes the specified ReqQuestGainDailyCircleOne message. Does not implicitly {@link farm.ReqQuestGainDailyCircleOne.verify|verify} messages.\n         * @param m ReqQuestGainDailyCircleOne message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IReqQuestGainDailyCircleOne, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a ReqQuestGainDailyCircleOne message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns ReqQuestGainDailyCircleOne\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.ReqQuestGainDailyCircleOne;\n\n        /**\n         * Creates a ReqQuestGainDailyCircleOne message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns ReqQuestGainDailyCircleOne\n         */\n        public static fromObject(d: { [k: string]: any }): farm.ReqQuestGainDailyCircleOne;\n\n        /**\n         * Creates a plain object from a ReqQuestGainDailyCircleOne message. Also converts values to other types if specified.\n         * @param m ReqQuestGainDailyCircleOne\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.ReqQuestGainDailyCircleOne, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this ReqQuestGainDailyCircleOne to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a RespQuestGainDailyCircleOne. */\n    interface IRespQuestGainDailyCircleOne {\n\n        /** RespQuestGainDailyCircleOne daily_circle_quest_next_cost */\n        daily_circle_quest_next_cost?: (number|null);\n    }\n\n    /** Represents a RespQuestGainDailyCircleOne. */\n    class RespQuestGainDailyCircleOne implements IRespQuestGainDailyCircleOne {\n\n        /**\n         * Constructs a new RespQuestGainDailyCircleOne.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IRespQuestGainDailyCircleOne);\n\n        /** RespQuestGainDailyCircleOne daily_circle_quest_next_cost. */\n        public daily_circle_quest_next_cost: number;\n\n        /**\n         * Encodes the specified RespQuestGainDailyCircleOne message. Does not implicitly {@link farm.RespQuestGainDailyCircleOne.verify|verify} messages.\n         * @param m RespQuestGainDailyCircleOne message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IRespQuestGainDailyCircleOne, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a RespQuestGainDailyCircleOne message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns RespQuestGainDailyCircleOne\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.RespQuestGainDailyCircleOne;\n\n        /**\n         * Creates a RespQuestGainDailyCircleOne message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns RespQuestGainDailyCircleOne\n         */\n        public static fromObject(d: { [k: string]: any }): farm.RespQuestGainDailyCircleOne;\n\n        /**\n         * Creates a plain object from a RespQuestGainDailyCircleOne message. Also converts values to other types if specified.\n         * @param m RespQuestGainDailyCircleOne\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.RespQuestGainDailyCircleOne, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this RespQuestGainDailyCircleOne to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a ReqDlgStageDone. */\n    interface IReqDlgStageDone {\n\n        /** ReqDlgStageDone dlg_stage_id */\n        dlg_stage_id?: (number|null);\n\n        /** ReqDlgStageDone state */\n        state?: (number|null);\n\n        /** ReqDlgStageDone metadata */\n        metadata?: ({ [k: string]: string }|null);\n\n        /** ReqDlgStageDone stageType */\n        stageType?: (farm.DialogStageType|null);\n    }\n\n    /** Represents a ReqDlgStageDone. */\n    class ReqDlgStageDone implements IReqDlgStageDone {\n\n        /**\n         * Constructs a new ReqDlgStageDone.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IReqDlgStageDone);\n\n        /** ReqDlgStageDone dlg_stage_id. */\n        public dlg_stage_id: number;\n\n        /** ReqDlgStageDone state. */\n        public state: number;\n\n        /** ReqDlgStageDone metadata. */\n        public metadata: { [k: string]: string };\n\n        /** ReqDlgStageDone stageType. */\n        public stageType: farm.DialogStageType;\n\n        /**\n         * Encodes the specified ReqDlgStageDone message. Does not implicitly {@link farm.ReqDlgStageDone.verify|verify} messages.\n         * @param m ReqDlgStageDone message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IReqDlgStageDone, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a ReqDlgStageDone message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns ReqDlgStageDone\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.ReqDlgStageDone;\n\n        /**\n         * Creates a ReqDlgStageDone message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns ReqDlgStageDone\n         */\n        public static fromObject(d: { [k: string]: any }): farm.ReqDlgStageDone;\n\n        /**\n         * Creates a plain object from a ReqDlgStageDone message. Also converts values to other types if specified.\n         * @param m ReqDlgStageDone\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.ReqDlgStageDone, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this ReqDlgStageDone to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a RespDlgStageDone. */\n    interface IRespDlgStageDone {\n\n        /** RespDlgStageDone dlg_stage_id */\n        dlg_stage_id?: (number|null);\n    }\n\n    /** Represents a RespDlgStageDone. */\n    class RespDlgStageDone implements IRespDlgStageDone {\n\n        /**\n         * Constructs a new RespDlgStageDone.\n         * @param [p] Properties to set\n         */\n        constructor(p?: farm.IRespDlgStageDone);\n\n        /** RespDlgStageDone dlg_stage_id. */\n        public dlg_stage_id: number;\n\n        /**\n         * Encodes the specified RespDlgStageDone message. Does not implicitly {@link farm.RespDlgStageDone.verify|verify} messages.\n         * @param m RespDlgStageDone message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: farm.IRespDlgStageDone, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a RespDlgStageDone message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns RespDlgStageDone\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): farm.RespDlgStageDone;\n\n        /**\n         * Creates a RespDlgStageDone message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns RespDlgStageDone\n         */\n        public static fromObject(d: { [k: string]: any }): farm.RespDlgStageDone;\n\n        /**\n         * Creates a plain object from a RespDlgStageDone message. Also converts values to other types if specified.\n         * @param m RespDlgStageDone\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: farm.RespDlgStageDone, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this RespDlgStageDone to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n}\n\n/** Namespace message. */\nexport namespace message {\n\n    /** Properties of an EventBasic. */\n    interface IEventBasic {\n\n        /** EventBasic metadata */\n        metadata?: ({ [k: string]: string }|null);\n    }\n\n    /** Represents an EventBasic. */\n    class EventBasic implements IEventBasic {\n\n        /**\n         * Constructs a new EventBasic.\n         * @param [p] Properties to set\n         */\n        constructor(p?: message.IEventBasic);\n\n        /** EventBasic metadata. */\n        public metadata: { [k: string]: string };\n\n        /**\n         * Encodes the specified EventBasic message. Does not implicitly {@link message.EventBasic.verify|verify} messages.\n         * @param m EventBasic message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: message.IEventBasic, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes an EventBasic message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns EventBasic\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): message.EventBasic;\n\n        /**\n         * Creates an EventBasic message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns EventBasic\n         */\n        public static fromObject(d: { [k: string]: any }): message.EventBasic;\n\n        /**\n         * Creates a plain object from an EventBasic message. Also converts values to other types if specified.\n         * @param m EventBasic\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: message.EventBasic, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this EventBasic to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a RequestBasic. */\n    interface IRequestBasic {\n\n        /** RequestBasic params */\n        params?: ({ [k: string]: string }|null);\n    }\n\n    /** Represents a RequestBasic. */\n    class RequestBasic implements IRequestBasic {\n\n        /**\n         * Constructs a new RequestBasic.\n         * @param [p] Properties to set\n         */\n        constructor(p?: message.IRequestBasic);\n\n        /** RequestBasic params. */\n        public params: { [k: string]: string };\n\n        /**\n         * Encodes the specified RequestBasic message. Does not implicitly {@link message.RequestBasic.verify|verify} messages.\n         * @param m RequestBasic message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: message.IRequestBasic, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a RequestBasic message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns RequestBasic\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): message.RequestBasic;\n\n        /**\n         * Creates a RequestBasic message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns RequestBasic\n         */\n        public static fromObject(d: { [k: string]: any }): message.RequestBasic;\n\n        /**\n         * Creates a plain object from a RequestBasic message. Also converts values to other types if specified.\n         * @param m RequestBasic\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: message.RequestBasic, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this RequestBasic to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a Message. */\n    interface IMessage {\n\n        /** Message id */\n        id?: (number|Long|null);\n\n        /** Message type */\n        type?: (message.Message.Type|null);\n\n        /** Message version */\n        version?: (string|null);\n\n        /** Message jwt_token */\n        jwt_token?: (string|null);\n\n        /** Message dat */\n        dat?: (google.protobuf.IAny|null);\n\n        /** Message timestamp */\n        timestamp?: (google.protobuf.ITimestamp|null);\n    }\n\n    /** Represents a Message. */\n    class Message implements IMessage {\n\n        /**\n         * Constructs a new Message.\n         * @param [p] Properties to set\n         */\n        constructor(p?: message.IMessage);\n\n        /** Message id. */\n        public id: (number|Long);\n\n        /** Message type. */\n        public type: message.Message.Type;\n\n        /** Message version. */\n        public version: string;\n\n        /** Message jwt_token. */\n        public jwt_token: string;\n\n        /** Message dat. */\n        public dat?: (google.protobuf.IAny|null);\n\n        /** Message timestamp. */\n        public timestamp?: (google.protobuf.ITimestamp|null);\n\n        /**\n         * Encodes the specified Message message. Does not implicitly {@link message.Message.verify|verify} messages.\n         * @param m Message message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: message.IMessage, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a Message message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns Message\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): message.Message;\n\n        /**\n         * Creates a Message message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns Message\n         */\n        public static fromObject(d: { [k: string]: any }): message.Message;\n\n        /**\n         * Creates a plain object from a Message message. Also converts values to other types if specified.\n         * @param m Message\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: message.Message, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this Message to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    namespace Message {\n\n        /** Type enum. */\n        enum Type {\n            EVENT_BASIC = 0,\n            NOTIFY_BASIC = 100000,\n            STREAM_BASIC = 200000\n        }\n    }\n\n    /** Properties of a Request. */\n    interface IRequest {\n\n        /** Request version */\n        version?: (string|null);\n\n        /** Request jwt_token */\n        jwt_token?: (string|null);\n\n        /** Request dat */\n        dat?: (google.protobuf.IAny|null);\n    }\n\n    /** Represents a Request. */\n    class Request implements IRequest {\n\n        /**\n         * Constructs a new Request.\n         * @param [p] Properties to set\n         */\n        constructor(p?: message.IRequest);\n\n        /** Request version. */\n        public version: string;\n\n        /** Request jwt_token. */\n        public jwt_token: string;\n\n        /** Request dat. */\n        public dat?: (google.protobuf.IAny|null);\n\n        /**\n         * Encodes the specified Request message. Does not implicitly {@link message.Request.verify|verify} messages.\n         * @param m Request message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: message.IRequest, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a Request message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns Request\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): message.Request;\n\n        /**\n         * Creates a Request message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns Request\n         */\n        public static fromObject(d: { [k: string]: any }): message.Request;\n\n        /**\n         * Creates a plain object from a Request message. Also converts values to other types if specified.\n         * @param m Request\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: message.Request, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this Request to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a Response. */\n    interface IResponse {\n\n        /** Response err */\n        err?: (number|null);\n\n        /** Response message */\n        message?: (string|null);\n\n        /** Response trace_id */\n        trace_id?: (string|null);\n\n        /** Response dat */\n        dat?: (google.protobuf.IAny|null);\n    }\n\n    /** Represents a Response. */\n    class Response implements IResponse {\n\n        /**\n         * Constructs a new Response.\n         * @param [p] Properties to set\n         */\n        constructor(p?: message.IResponse);\n\n        /** Response err. */\n        public err: number;\n\n        /** Response message. */\n        public message: string;\n\n        /** Response trace_id. */\n        public trace_id: string;\n\n        /** Response dat. */\n        public dat?: (google.protobuf.IAny|null);\n\n        /**\n         * Encodes the specified Response message. Does not implicitly {@link message.Response.verify|verify} messages.\n         * @param m Response message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: message.IResponse, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a Response message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns Response\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): message.Response;\n\n        /**\n         * Creates a Response message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns Response\n         */\n        public static fromObject(d: { [k: string]: any }): message.Response;\n\n        /**\n         * Creates a plain object from a Response message. Also converts values to other types if specified.\n         * @param m Response\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: message.Response, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this Response to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a NotifyBasic. */\n    interface INotifyBasic {\n    }\n\n    /** Represents a NotifyBasic. */\n    class NotifyBasic implements INotifyBasic {\n\n        /**\n         * Constructs a new NotifyBasic.\n         * @param [p] Properties to set\n         */\n        constructor(p?: message.INotifyBasic);\n\n        /**\n         * Encodes the specified NotifyBasic message. Does not implicitly {@link message.NotifyBasic.verify|verify} messages.\n         * @param m NotifyBasic message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: message.INotifyBasic, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a NotifyBasic message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns NotifyBasic\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): message.NotifyBasic;\n\n        /**\n         * Creates a NotifyBasic message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns NotifyBasic\n         */\n        public static fromObject(d: { [k: string]: any }): message.NotifyBasic;\n\n        /**\n         * Creates a plain object from a NotifyBasic message. Also converts values to other types if specified.\n         * @param m NotifyBasic\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: message.NotifyBasic, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this NotifyBasic to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a ReqCustomTest. */\n    interface IReqCustomTest {\n\n        /** ReqCustomTest intValue */\n        intValue?: (number|null);\n\n        /** ReqCustomTest strValue */\n        strValue?: (string|null);\n\n        /** ReqCustomTest boolValue */\n        boolValue?: (boolean[]|null);\n\n        /** ReqCustomTest mapValue */\n        mapValue?: ({ [k: string]: string }|null);\n    }\n\n    /** Represents a ReqCustomTest. */\n    class ReqCustomTest implements IReqCustomTest {\n\n        /**\n         * Constructs a new ReqCustomTest.\n         * @param [p] Properties to set\n         */\n        constructor(p?: message.IReqCustomTest);\n\n        /** ReqCustomTest intValue. */\n        public intValue: number;\n\n        /** ReqCustomTest strValue. */\n        public strValue: string;\n\n        /** ReqCustomTest boolValue. */\n        public boolValue: boolean[];\n\n        /** ReqCustomTest mapValue. */\n        public mapValue: { [k: string]: string };\n\n        /**\n         * Encodes the specified ReqCustomTest message. Does not implicitly {@link message.ReqCustomTest.verify|verify} messages.\n         * @param m ReqCustomTest message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: message.IReqCustomTest, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a ReqCustomTest message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns ReqCustomTest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): message.ReqCustomTest;\n\n        /**\n         * Creates a ReqCustomTest message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns ReqCustomTest\n         */\n        public static fromObject(d: { [k: string]: any }): message.ReqCustomTest;\n\n        /**\n         * Creates a plain object from a ReqCustomTest message. Also converts values to other types if specified.\n         * @param m ReqCustomTest\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: message.ReqCustomTest, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this ReqCustomTest to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a RespCustomTest. */\n    interface IRespCustomTest {\n\n        /** RespCustomTest intValue */\n        intValue?: (number|null);\n\n        /** RespCustomTest strValue */\n        strValue?: (string|null);\n\n        /** RespCustomTest boolValue */\n        boolValue?: (boolean[]|null);\n\n        /** RespCustomTest mapValue */\n        mapValue?: ({ [k: string]: string }|null);\n    }\n\n    /** Represents a RespCustomTest. */\n    class RespCustomTest implements IRespCustomTest {\n\n        /**\n         * Constructs a new RespCustomTest.\n         * @param [p] Properties to set\n         */\n        constructor(p?: message.IRespCustomTest);\n\n        /** RespCustomTest intValue. */\n        public intValue: number;\n\n        /** RespCustomTest strValue. */\n        public strValue: string;\n\n        /** RespCustomTest boolValue. */\n        public boolValue: boolean[];\n\n        /** RespCustomTest mapValue. */\n        public mapValue: { [k: string]: string };\n\n        /**\n         * Encodes the specified RespCustomTest message. Does not implicitly {@link message.RespCustomTest.verify|verify} messages.\n         * @param m RespCustomTest message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: message.IRespCustomTest, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a RespCustomTest message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns RespCustomTest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): message.RespCustomTest;\n\n        /**\n         * Creates a RespCustomTest message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns RespCustomTest\n         */\n        public static fromObject(d: { [k: string]: any }): message.RespCustomTest;\n\n        /**\n         * Creates a plain object from a RespCustomTest message. Also converts values to other types if specified.\n         * @param m RespCustomTest\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: message.RespCustomTest, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this RespCustomTest to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n\n    /** Properties of a SimpleStruct. */\n    interface ISimpleStruct {\n\n        /** SimpleStruct intValue */\n        intValue?: (number|null);\n\n        /** SimpleStruct boolValue */\n        boolValue?: (boolean|null);\n\n        /** SimpleStruct strValue */\n        strValue?: (string|null);\n    }\n\n    /** Represents a SimpleStruct. */\n    class SimpleStruct implements ISimpleStruct {\n\n        /**\n         * Constructs a new SimpleStruct.\n         * @param [p] Properties to set\n         */\n        constructor(p?: message.ISimpleStruct);\n\n        /** SimpleStruct intValue. */\n        public intValue: number;\n\n        /** SimpleStruct boolValue. */\n        public boolValue: boolean;\n\n        /** SimpleStruct strValue. */\n        public strValue: string;\n\n        /**\n         * Encodes the specified SimpleStruct message. Does not implicitly {@link message.SimpleStruct.verify|verify} messages.\n         * @param m SimpleStruct message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: message.ISimpleStruct, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a SimpleStruct message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns SimpleStruct\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): message.SimpleStruct;\n\n        /**\n         * Creates a SimpleStruct message from a plain object. Also converts values to their respective internal types.\n         * @param d Plain object\n         * @returns SimpleStruct\n         */\n        public static fromObject(d: { [k: string]: any }): message.SimpleStruct;\n\n        /**\n         * Creates a plain object from a SimpleStruct message. Also converts values to other types if specified.\n         * @param m SimpleStruct\n         * @param [o] Conversion options\n         * @returns Plain object\n         */\n        public static toObject(m: message.SimpleStruct, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n        /**\n         * Converts this SimpleStruct to JSON.\n         * @returns JSON object\n         */\n        public toJSON(): { [k: string]: any };\n    }\n}\n\n/** Namespace google. */\nexport namespace google {\n\n    /** Namespace protobuf. */\n    namespace protobuf {\n\n        /** Properties of an Any. */\n        interface IAny {\n\n            /** Any type_url */\n            type_url?: (string|null);\n\n            /** Any value */\n            value?: (Uint8Array|null);\n        }\n\n        /** Represents an Any. */\n        class Any implements IAny {\n\n            /**\n             * Constructs a new Any.\n             * @param [p] Properties to set\n             */\n            constructor(p?: google.protobuf.IAny);\n\n            /** Any type_url. */\n            public type_url: string;\n\n            /** Any value. */\n            public value: Uint8Array;\n\n            /**\n             * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.\n             * @param m Any message or plain object to encode\n             * @param [w] Writer to encode to\n             * @returns Writer\n             */\n            public static encode(m: google.protobuf.IAny, w?: $protobuf.Writer): $protobuf.Writer;\n\n            /**\n             * Decodes an Any message from the specified reader or buffer.\n             * @param r Reader or buffer to decode from\n             * @param [l] Message length if known beforehand\n             * @returns Any\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.protobuf.Any;\n\n            /**\n             * Creates an Any message from a plain object. Also converts values to their respective internal types.\n             * @param d Plain object\n             * @returns Any\n             */\n            public static fromObject(d: { [k: string]: any }): google.protobuf.Any;\n\n            /**\n             * Creates a plain object from an Any message. Also converts values to other types if specified.\n             * @param m Any\n             * @param [o] Conversion options\n             * @returns Plain object\n             */\n            public static toObject(m: google.protobuf.Any, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n            /**\n             * Converts this Any to JSON.\n             * @returns JSON object\n             */\n            public toJSON(): { [k: string]: any };\n        }\n\n        /** Properties of a Timestamp. */\n        interface ITimestamp {\n\n            /** Timestamp seconds */\n            seconds?: (number|Long|null);\n\n            /** Timestamp nanos */\n            nanos?: (number|null);\n        }\n\n        /** Represents a Timestamp. */\n        class Timestamp implements ITimestamp {\n\n            /**\n             * Constructs a new Timestamp.\n             * @param [p] Properties to set\n             */\n            constructor(p?: google.protobuf.ITimestamp);\n\n            /** Timestamp seconds. */\n            public seconds: (number|Long);\n\n            /** Timestamp nanos. */\n            public nanos: number;\n\n            /**\n             * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.\n             * @param m Timestamp message or plain object to encode\n             * @param [w] Writer to encode to\n             * @returns Writer\n             */\n            public static encode(m: google.protobuf.ITimestamp, w?: $protobuf.Writer): $protobuf.Writer;\n\n            /**\n             * Decodes a Timestamp message from the specified reader or buffer.\n             * @param r Reader or buffer to decode from\n             * @param [l] Message length if known beforehand\n             * @returns Timestamp\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            public static decode(r: ($protobuf.Reader|Uint8Array), l?: number): google.protobuf.Timestamp;\n\n            /**\n             * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.\n             * @param d Plain object\n             * @returns Timestamp\n             */\n            public static fromObject(d: { [k: string]: any }): google.protobuf.Timestamp;\n\n            /**\n             * Creates a plain object from a Timestamp message. Also converts values to other types if specified.\n             * @param m Timestamp\n             * @param [o] Conversion options\n             * @returns Plain object\n             */\n            public static toObject(m: google.protobuf.Timestamp, o?: $protobuf.IConversionOptions): { [k: string]: any };\n\n            /**\n             * Converts this Timestamp to JSON.\n             * @returns JSON object\n             */\n            public toJSON(): { [k: string]: any };\n        }\n    }\n}\n\n/** Namespace error. */\nexport namespace error {\n\n    /** Type enum. */\n    enum Type {\n        NONE = 0\n    }\n}"
}