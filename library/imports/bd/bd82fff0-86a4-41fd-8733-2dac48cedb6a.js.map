{"version":3,"sources":["assets/script/framework/fsm/FSMComponent.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGO,IAAA,OAAO,GAAI,EAAE,CAAC,UAAU,QAAjB,CAAkB;AAGhC;IAA6C,gCAAY;IAAzD;;IAqDA,CAAC;IAjDG,6BAAM,GAAN,UAAO,EAAE;QACL,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;IACvB,CAAC;IAED,8BAAO,GAAP;IAEA,CAAC;IACD,gCAAS,GAAT,UAAU,EAAE;QACR,IAAG,IAAI,CAAC,GAAG,EAAC;YACR,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;SACvB;IACL,CAAC;IACD,oCAAa,GAAb;QACI,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;IAC1B,CAAC;IACD,wCAAiB,GAAjB,UAAkB,QAAyC;;QAAE,gBAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,+BAAc;;QACvE,CAAA,KAAA,IAAI,CAAC,GAAG,CAAA,CAAC,iBAAiB,2BAAC,QAAQ,GAAK,MAAM,GAAE;IACpD,CAAC;IACD,4CAAqB,GAArB,UAAsB,OAAe;;QAAE,gBAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,+BAAc;;QACjD,CAAA,KAAA,IAAI,CAAC,GAAG,CAAA,CAAC,qBAAqB,2BAAC,OAAO,GAAK,MAAM,GAAE;IACvD,CAAC;IACD,kCAAW,GAAX,UAAY,QAAyC;;QAAE,gBAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,+BAAc;;QACjE,CAAA,KAAA,IAAI,CAAC,GAAG,CAAA,CAAC,WAAW,2BAAC,QAAQ,GAAK,MAAM,GAAE;IAC9C,CAAC;IACD,sCAAe,GAAf,UAAgB,OAAe;;QAAE,gBAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,+BAAc;;QAC3C,CAAA,KAAA,IAAI,CAAC,GAAG,CAAA,CAAC,eAAe,2BAAC,OAAO,GAAK,MAAM,GAAE;IACjD,CAAC;IACD,4CAAqB,GAArB;QACI,IAAI,CAAC,GAAG,CAAC,qBAAqB,EAAE,CAAC;IACrC,CAAC;IACD,uCAAgB,GAAhB,UAAiB,QAAyC,EAAE,KAAa;QAAE,gBAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,+BAAc;;QACrF,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC/C,CAAC;IACD,2CAAoB,GAApB,UAAqB,OAAe,EAAE,KAAa;QAAE,gBAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,+BAAc;;QAC/D,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC/C,CAAC;IAED,oCAAa,GAAb,UAAc,KAAsC;QAChD,OAAO,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IACzC,CAAC;IACD,sCAAe,GAAf,UAAgB,KAAsC;QAClD,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IACD,oCAAa,GAAb;QACI,OAAO,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;IACpC,CAAC;IACD,kCAAW,GAAX;QACI,OAAO,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IApDgB,YAAY;QADhC,OAAO;OACa,YAAY,CAqDhC;IAAD,mBAAC;CArDD,AAqDC,CArD4C,EAAE,CAAC,SAAS,GAqDxD;kBArDoB,YAAY","file":"","sourceRoot":"/","sourcesContent":["import IFSM from \"./IFSM\";\nimport FiniteStateMachine from \"./FiniteStateMachine\";\n\nconst {ccclass} = cc._decorator;\n\n@ccclass\nexport default class FSMComponent<T> extends cc.Component implements IFSM<T> {\n    \n    protected FSM : FiniteStateMachine<T>;\n\n    update(dt){\n        this.FSMUpdate(dt);\n    }\n\n    FSMInit() {\n\n    }\n    FSMUpdate(dt) {\n        if(this.FSM){\n            this.FSM.Update(dt);\n        }\n    }\n    FSMLateUpdate() {\n        this.FSM.LateUpdate();\n    }\n    ChangeGlobalState(newState: import(\"./FSMState\").default<T>, ...params: any) {\n        this.FSM.ChangeGlobalState(newState, ...params);\n    }\n    ChangeGlobalStateById(stateID: number, ...params: any) {\n        this.FSM.ChangeGlobalStateById(stateID, ...params);\n    }\n    ChangeState(newState: import(\"./FSMState\").default<T>, ...params: any) {\n        this.FSM.ChangeState(newState, ...params);\n    }\n    ChangeStateById(stateID: number, ...params: any) {\n        this.FSM.ChangeStateById(stateID, ...params);\n    }\n    RevertToPreviousState() {\n        this.FSM.RevertToPreviousState();\n    }\n    ChangeStateDelay(newState: import(\"./FSMState\").default<T>, delay: number, ...params: any) {\n        throw new Error(\"Method not implemented.\");\n    }\n    ChangeStateDelayById(stateID: number, delay: number, ...params: any) {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    RegisterState(state: import(\"./FSMState\").default<T>): import(\"./FSMState\").default<T> {\n        return this.FSM.RegisterState(state);\n    }\n    UnregisterState(state: import(\"./FSMState\").default<T>) {\n        this.FSM.UnregisterState(state);\n    }\n    GetCurStateID(): number {\n        return this.FSM.GetCurStateID();\n    }\n    GetCurState(): import(\"./FSMState\").default<T> {\n        return this.FSM.GetCurState();\n    }\n}\n"]}