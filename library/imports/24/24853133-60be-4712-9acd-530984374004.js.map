{"version":3,"sources":["assets/script/netMessage/Message.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import {MessageType, CodeFormat} from \"./IBuilder\";\n\nclass IDGenerator {\n  //消息ID,如果带入自增的ID，表示客户端要求服务端回复\n  static msg_id : number = 1;\n  private constructor() {}\n  public static get(): number {\n    return IDGenerator.msg_id++;\n  }\n}\n/**\n * 网络基础抽象包定义\n */\nabstract class NetBase {\n  //MQTT消息ID,如果带入自增的ID，表示客户端要求服务端回复\n  public _id : number;\n  //Topic类型\n  public _msg_code : string = MessageType.Unknown.toString();\n\n  public constructor(need_reply : boolean, code : string){\n    if(need_reply){\n      this._id = IDGenerator.get()\n    }\n    this._msg_code = code;\n  }\n\n  public getId() : number {\n    return this._id;\n  }\n\n  public getMsgCode() : string {\n      return this._msg_code;\n  }\n  public preSerialize(){\n    if(this._id > 0){\n      this._msg_code = this._msg_code + \"/\" + this._id;\n    }\n  }\n  // 将自己序列化为（JSON)\n  abstract Serialize(format: CodeFormat) : any;\n  // 将（JSON）字符串反序列化填充给自己的变量\n  abstract Deserialize(format: CodeFormat, msg: any) : NetBase;\n  // 将（JSON对象）反序列化填充给自己的变量\n  abstract DeserializeFromObj(msg : object) : NetBase;\n}\n/**\n * 基础异步消息包\n */\nabstract class NetBaseMessage extends NetBase {\n  constructor(options: {[k: string]: any}){\n    let needReply : boolean = false;\n    let code : MessageType = MessageType.Unknown;\n    if (!options) return;\n    if (typeof options.need_reply === \"boolean\")\n      needReply = options.need_reply;\n    if (options.code)\n      code = options.code;\n    super(needReply, code);\n  }\n}\n/**\n * 基础请求包\n */\nabstract class NetBaseReq extends NetBase{\n  Deserialize(format: CodeFormat, msg: any) :NetBase {\n      throw new Error(\"Method not implemented.\");\n  }\n  DeserializeFromObj(msg: object): NetBase {\n      throw new Error(\"Method not implemented.\");\n  }\n}\n/**\n * 基础请求包\n */\nabstract class NetBaseRespNtf extends NetBase{\n    public _error : string;\n    public _traceId : string;\n    public result : any;\n    constructor(msgId: number, msgCode: string) {\n      super(false, msgCode)\n      this._id = msgId;\n    }\n    public getError() : string {\n      return this._error;\n    }\n    public setError(error: string) {\n      this._error = error;\n    }\n    public setTraceId(traceId: string) {\n      this._traceId = traceId;\n    }\n    public getTraceId() : string {\n      return this._traceId;\n    }\n    public setResult(result: any) {\n      this.result = result;\n    }\n    public getResult() : any {\n      return this.result;\n    }\n    Serialize(format: CodeFormat): any{\n      throw new Error(\"Method not implemented.\");\n    }\n    DeserializeFromObj(msg: object): NetBase {\n      throw new Error(\"Method not implemented.\");\n    }\n}\nfunction replacer(key : string, value :any)\n{\n    if (key.charAt(0) == '_') return undefined;\n    else return value;\n}\n\nexport {IDGenerator, NetBase, NetBaseMessage, NetBaseReq, NetBaseRespNtf}\n"]}