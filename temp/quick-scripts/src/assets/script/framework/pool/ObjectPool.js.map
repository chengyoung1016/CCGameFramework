{"version":3,"sources":["assets/script/framework/pool/ObjectPool.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import PoolableComponent from \"./PoolableComponent\";\n\n\nexport default class ObjectPool {\n\n    private _pool : cc.NodePool = null;\n    private _prefabPoolObj : PoolableComponent = null;\n\n    constructor(prefab : cc.Node){\n        this._prefabPoolObj = prefab.getComponent(PoolableComponent);\n        this._pool = new cc.NodePool(PoolableComponent);\n\n        for(let i = 0; i < this._prefabPoolObj.preloadCount; ++i){\n            this._NewPooledInstance();\n        }\n    }\n\n    GetPooledInstance():cc.Node {\n        // TKLog.LogInfo(this._GetLogPrefix()+\".GetPooledInstance, 当前size:\" + this._pool.size() + \" 将要取出一个\");\n        if(this._pool.size() > 0){\n            return this._pool.get();\n        }\n        else{\n            // 实例化一个新的\n            this._NewPooledInstance();\n        }\n        return this._pool.get();\n    }\n\n    Destroy(poolObj : PoolableComponent){\n        // TKLog.LogInfo(\"ObjectPool.Destroy(\"+poolObj.PoolID+\"),poolSizePre=\"+this._pool.size());\n        this._pool.put(poolObj.node);\n        //初始化节点\n        poolObj.node.setPosition(cc.v2(0, 0));\n        // TKLog.LogInfo(\"poolSizeAfter:\" + this._pool.size());\n    }\n\n    // 实例化一个对象并放到池子中\n    private _NewPooledInstance(position ?: cc.Vec2, rotation ?: cc.Quat) : PoolableComponent{\n        // TKLog.LogInfo(\"实例化\"+this._prefabPoolObj.PoolID+\"的一个对象并放入到池子中\");\n\n        let go : PoolableComponent = null;\n        go = cc.instantiate(this._prefabPoolObj.node).getComponent(PoolableComponent);\n        if(position != null){\n            go.node.setPosition(position);\n        }\n        if(rotation != null){\n            go.node.setRotation(rotation, 0, 0, 0);\n        }\n\n        go._createdWithPoolController = true;\n        go._myPool = this;\n\n        this._pool.put(go.node);\n        //go.node.emit(\"OnPoolableInstanceOnLoad\");\n\n        return go;\n    }\n\n    static _pools : {[id:string]:ObjectPool} = {};\n    static _GetPool(prefabPoolComponent : PoolableComponent) : ObjectPool{\n        // TKLog.LogInfo(\"ObjectPool._GetPool(\"+prefabPoolComponent.PoolID+\")\");\n\n        let pool : ObjectPool = null;\n        let prefab = prefabPoolComponent.node;\n\n        if(this._pools[prefabPoolComponent.PoolID] == null){\n            // TKLog.LogInfo(\"还不存在ID为\"+prefabPoolComponent.PoolID+\"的内存池，先创建\");\n            pool = new ObjectPool(prefab);\n            this._pools[prefabPoolComponent.PoolID] = pool;\n        }\n        return this._pools[prefabPoolComponent.PoolID];\n    }\n\n    private _GetLogPrefix(){\n        if(this._prefabPoolObj == null){\n            return \"ObjectPool\";\n        }\n        else{\n            return \"ObjectPool(\" + this._prefabPoolObj.PoolID + \")\";\n        }\n    }\n}\n"]}