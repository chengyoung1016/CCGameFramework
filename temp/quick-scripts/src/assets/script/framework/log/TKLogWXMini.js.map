{"version":3,"sources":["assets/script/framework/log/TKLogWXMini.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mCAA4C;AAC5C,yCAAoC;AAEpC;IAAyC,+BAAS;IAAlD;;IAyDA,CAAC;IAvDG,gCAAU,GAAV,UAAW,SAAkB;QACzB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;IAC5B,CAAC;IACD,6BAAO,GAAP,UAAQ,GAAQ;QAAE,eAAe;aAAf,UAAe,EAAf,qBAAe,EAAf,IAAe;YAAf,8BAAe;;QAC7B,IAAI,IAAI,CAAC,QAAQ,IAAI,iBAAQ,CAAC,IAAI,EAAE;YAChC,IAAI,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,CAAA;YAC7B,IAAI,EAAE,IAAI,EAAE,CAAC,GAAG,EAAE;gBACd,EAAE,CAAC,GAAG,OAAN,EAAE,kBAAK,GAAG,GAAK,KAAK,GAAC;gBACrB,iBAAM,OAAO,6BAAC,GAAG,GAAK,KAAK,GAAC;aAC/B;iBAAM;gBACH,iBAAM,OAAO,6BAAC,GAAG,GAAK,KAAK,GAAC;aAC/B;SACJ;IACL,CAAC;IACD,8BAAQ,GAAR,UAAS,GAAQ;QAAE,eAAe;aAAf,UAAe,EAAf,qBAAe,EAAf,IAAe;YAAf,8BAAe;;QAC9B,IAAI,IAAI,CAAC,QAAQ,IAAI,iBAAQ,CAAC,KAAK,EAAE;YACjC,IAAI,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,CAAA;YAC7B,IAAI,EAAE,IAAI,EAAE,CAAC,GAAG,EAAE;gBACd,EAAE,CAAC,GAAG,OAAN,EAAE,kBAAK,GAAG,GAAK,KAAK,GAAC;gBACrB,iBAAM,QAAQ,6BAAC,GAAG,GAAK,KAAK,GAAC;aAChC;iBAAM;gBACH,iBAAM,QAAQ,6BAAC,GAAG,GAAK,KAAK,GAAC;aAChC;SACJ;IACL,CAAC;IACD,6BAAO,GAAP,UAAQ,GAAQ;QAAE,eAAe;aAAf,UAAe,EAAf,qBAAe,EAAf,IAAe;YAAf,8BAAe;;QAC7B,IAAI,IAAI,CAAC,QAAQ,IAAI,iBAAQ,CAAC,IAAI,EAAE;YAChC,IAAI,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,CAAA;YAC7B,IAAI,EAAE,IAAI,EAAE,CAAC,GAAG,EAAE;gBACd,EAAE,CAAC,GAAG,OAAN,EAAE,kBAAK,GAAG,GAAK,KAAK,GAAC;gBACrB,iBAAM,OAAO,6BAAC,GAAG,GAAK,KAAK,GAAC;aAC/B;iBAAM;gBACH,iBAAM,OAAO,6BAAC,GAAG,GAAK,KAAK,GAAC;aAC/B;SACJ;IACL,CAAC;IACD,4BAAM,GAAN,UAAO,GAAQ;QAAE,eAAe;aAAf,UAAe,EAAf,qBAAe,EAAf,IAAe;YAAf,8BAAe;;QAC5B,IAAI,IAAI,CAAC,QAAQ,IAAI,iBAAQ,CAAC,KAAK,EAAE;YACjC,IAAI,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,CAAA;YAC7B,IAAI,EAAE,IAAI,EAAE,CAAC,GAAG,EAAE;gBACd,EAAE,CAAC,GAAG,OAAN,EAAE,kBAAK,GAAG,GAAK,KAAK,GAAC;gBACrB,iBAAM,MAAM,6BAAC,GAAG,GAAK,KAAK,GAAC;aAC9B;iBAAM;gBACH,iBAAM,MAAM,6BAAC,GAAG,GAAK,KAAK,GAAC;aAC9B;SACJ;IACL,CAAC;IAEO,mCAAa,GAArB;QACI,IAAI,EAAE,CAAC,aAAa,EAAE;YAClB,OAAO,EAAE,CAAC,aAAa,CAAC,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,CAAA;SACrC;QACD,OAAO,IAAI,CAAA;IACf,CAAC;IAEL,kBAAC;AAAD,CAzDA,AAyDC,CAzDwC,mBAAS,GAyDjD","file":"","sourceRoot":"/","sourcesContent":["import ITKLog, { LogLevel } from \"./ITKLog\";\nimport TKLogNone from \"./TKLogNone\";\n\nexport default class TKLogWXMini extends TKLogNone{\n    \n    SetLogFile(logToFile: boolean) {\n        this.ToDo(\"还没有实现写入日志文件\")\n    }\n    LogInfo(msg: any, ...subst: any[]) {\n        if (this.logLevel <= LogLevel.Info) {\n            var lm = this.getLogManager()\n            if (lm && lm.log) {\n                lm.log(msg, ...subst)\n                super.LogInfo(msg, ...subst)\n            } else {\n                super.LogInfo(msg, ...subst)\n            }\n        }\n    }\n    LogDebug(msg: any, ...subst: any[]) {\n        if (this.logLevel <= LogLevel.Debug) {\n            var lm = this.getLogManager()\n            if (lm && lm.log) {\n                lm.log(msg, ...subst)\n                super.LogDebug(msg, ...subst)\n            } else {\n                super.LogDebug(msg, ...subst)\n            }\n        }\n    }\n    LogWarn(msg: any, ...subst: any[]) {\n        if (this.logLevel <= LogLevel.Warn) {\n            var lm = this.getLogManager()\n            if (lm && lm.log) {\n                lm.log(msg, ...subst)\n                super.LogWarn(msg, ...subst)\n            } else {\n                super.LogWarn(msg, ...subst)\n            }\n        }\n    }\n    LogErr(msg: any, ...subst: any[]) {\n        if (this.logLevel <= LogLevel.Error) {\n            var lm = this.getLogManager()\n            if (lm && lm.log) {\n                lm.log(msg, ...subst)\n                super.LogErr(msg, ...subst)\n            } else {\n                super.LogErr(msg, ...subst)\n            }\n        }\n    }\n\n    private getLogManager() : LogManager {\n        if (wx.getLogManager) {\n            return wx.getLogManager({level:0})\n        }\n        return null\n    }\n    \n}"]}